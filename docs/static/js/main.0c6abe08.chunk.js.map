{"version":3,"sources":["Provider.tsx","Chart.tsx","ProjectSelector.tsx","MilestoneSelector.tsx","CustomValuesSelector.tsx","DaysSelector.tsx","Controller.tsx","UserTasks.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["StorKey","Actions","baseUrl","url","concat","replace","localStorage","getItem","URL","pid","PID","mid","MID","custom_eid","CUSTOM_EID","custom_rid","CUSTOM_RID","biz_days_str","BIZ_DAYS","initialState","custom_attrs","biz_days","_","isEmpty","split","milestones","tasks","custom_value_map","WeakMap","RootContext","createContext","state","setUrl","setPid","setMid","setMilestones","setCustomEid","setCustomRid","setCustomAttrs","setBizDays","setTasks","setCustomValueMap","reducer","arguments","length","undefined","action","type","SET_URL","payload","Object","objectSpread","SET_PID","SET_MID","SET_MILESTONES","SET_CUSTOM_EID","SET_CUSTOM_ATTRS","SET_CUSTOM_RID","SET_BIZ_DAYS","SET_TASKS","SET_CUSTOM_VALUE_MAP","Provider","_ref","children","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","value","useCallback","setItem","join","react_default","a","createElement","getSumVal","chain","map","task","id","has","Number","get","getCustomVal","sum","Chart","_useState","useState","_useState2","data","setData","_useContext$state","useContext","useEffect","days_len","allTaskVal","date","filter","moment","diff","created_date","getTaskCreated","day","idx","label","estimate","result","finished_date","getTaskFinished","add","format","getTaskCreatedToday","ComposedChart","width","height","YAxis","XAxis","dataKey","Tooltip","Bar","fill","stackId","Line","ProjectSelector","_useContext","statePid","items","setItems","handleChange","e","target","asyncToGenerator","regenerator_default","mark","_callee","_ref2","wrap","_context","prev","next","axios","sent","stop","this","reactstrap_es","className","InputGroupAddon_default","addonType","onChange","item","key","selected","String","name","MilestoneSelector","stateMid","params","project","_callee2","_ref4","_context2","headers","x-disable-pagination","milestone","CustomValuesSelector","stateEid","stateRid","_callee3","wmap","_context3","t0","Promise","all","_ref5","custom_attr_val","abrupt","_x","apply","t1","getDefaultBizDays","biz","isWeekDay","DayItem","disabled","isWeekendDay","defaultChecked","includes","for","DaysSelector","find","getMilestone","days","startM","estimated_start","daysInSprint","estimated_finish","times","i","clone","getDays","Fragment","DaysSelector_DayItem","toString","Controller","setStateUrl","handleUrl","handleSubmit","preventDefault","onSubmit","defaultValue","placeholder","ProjectSelector_ProjectSelector","MilestoneSelector_MilestoneSelector","CustomValuesSelector_CustomValuesSelector","DaysSelector_DaysSelector","getCustomAttrVal","val","attributes_values","getTaskSumByUser","groupBy","getTasksByUser","mapValues","userTasks","reduce","attr_vals","r","getCustomAttr","UserTasks","members","taskSumByUser","customAttrE","customAttrR","username","App","Provider_Provider","Controller_Controller","UserTasks_UserTasks","Chart_Chart","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c6abe08.chunk.js","sourcesContent":["import React, { createContext, useReducer, useCallback } from 'react';\nimport _ from 'lodash';\nimport { IMilestore } from './MilestoneSelector';\nimport { ICustomAttr } from './CustomValuesSelector';\nexport interface ICustomValue {\n  attributes_values: {\n    [key: number]: string;\n  };\n}\nexport interface ITask {\n  id: number;\n  assigned_to: number | null;\n  created_date: string;\n  finished_date: string;\n  is_closed: boolean;\n  subject: string;\n}\ninterface IState {\n  url: string;\n  pid: string;\n  mid: string;\n  custom_eid: string;\n  custom_rid: string;\n  custom_attrs: ICustomAttr[];\n  biz_days: string[];\n  milestones: IMilestore[];\n  tasks: ITask[];\n  custom_value_map: WeakMap<ITask, ICustomValue>;\n}\n\ninterface IAction {\n  type: Actions;\n  payload?: any;\n}\nenum StorKey {\n  URL = 'taiga_url',\n  PID = 'taiga_pid',\n  MID = 'taiga_mid',\n  CUSTOM_EID = 'taiga_custom_eid',\n  CUSTOM_RID = 'taiga_custom_rid',\n  BIZ_DAYS = 'taiga_biz_days'\n}\nexport const baseUrl = (url: string) => `${url.replace(/[¥/]$/, '')}/api/v1`;\nconst url = localStorage.getItem(StorKey.URL) || '';\nconst pid = localStorage.getItem(StorKey.PID) || '';\nconst mid = localStorage.getItem(StorKey.MID) || '';\nconst custom_eid = localStorage.getItem(StorKey.CUSTOM_EID) || '';\nconst custom_rid = localStorage.getItem(StorKey.CUSTOM_RID) || '';\nconst biz_days_str = localStorage.getItem(StorKey.BIZ_DAYS);\nconst biz_days = _.isEmpty(biz_days_str)\n  ? []\n  : (biz_days_str as string).split(',');\nconst initialState: IState = {\n  url,\n  pid,\n  mid,\n  custom_eid,\n  custom_rid,\n  custom_attrs: [],\n  biz_days,\n  milestones: [],\n  tasks: [],\n  custom_value_map: new WeakMap()\n};\nexport const RootContext = createContext({\n  state: initialState,\n  setUrl: (url: string) => {},\n  setPid: (pid: string) => {},\n  setMid: (mid: string) => {},\n  setMilestones: (milestones: IMilestore[]) => {},\n  setCustomEid: (custom_eid: string) => {},\n  setCustomRid: (custom_rid: string) => {},\n  setCustomAttrs: (custom_attrs: ICustomAttr[]) => {},\n  setBizDays: (biz_days: string[]) => {},\n  setTasks: (tasks: ITask[]) => {},\n  setCustomValueMap: (custom_value_map: WeakMap<ITask, ICustomValue>) => {}\n});\nexport enum Actions {\n  SET_URL = 'SET_URL',\n  SET_PID = 'SET_PID',\n  SET_MID = 'SET_MID',\n  SET_MILESTONES = 'SET_MILESTONES',\n  SET_CUSTOM_EID = 'SET_CUSTOM_EID',\n  SET_CUSTOM_RID = 'SET_CUSTOM_RID',\n  SET_CUSTOM_ATTRS = 'SET_CUSTOM_ATTRS',\n  SET_BIZ_DAYS = 'SET_BIZ_DAYS',\n  SET_TASKS = 'SET_TASKS',\n  SET_CUSTOM_VALUE_MAP = 'SET_CUSTOM_VALUE_MAP'\n}\nconst reducer = (state = initialState, action: IAction) => {\n  switch (action.type) {\n    case Actions.SET_URL: {\n      const { url } = action.payload;\n      return { ...state, url } as IState;\n    }\n    case Actions.SET_PID: {\n      const { pid } = action.payload;\n      return { ...state, pid } as IState;\n    }\n    case Actions.SET_MID: {\n      const { mid } = action.payload;\n      return { ...state, mid } as IState;\n    }\n    case Actions.SET_MILESTONES: {\n      const { milestones } = action.payload;\n      return { ...state, milestones } as IState;\n    }\n    case Actions.SET_CUSTOM_EID: {\n      const { custom_eid } = action.payload;\n      return { ...state, custom_eid } as IState;\n    }\n    case Actions.SET_CUSTOM_ATTRS: {\n      const { custom_attrs } = action.payload;\n      return { ...state, custom_attrs } as IState;\n    }\n    case Actions.SET_CUSTOM_RID: {\n      const { custom_rid } = action.payload;\n      return { ...state, custom_rid } as IState;\n    }\n    case Actions.SET_BIZ_DAYS: {\n      const { biz_days } = action.payload;\n      return { ...state, biz_days } as IState;\n    }\n    case Actions.SET_TASKS: {\n      const { tasks } = action.payload;\n      return { ...state, tasks } as IState;\n    }\n    case Actions.SET_CUSTOM_VALUE_MAP: {\n      const { custom_value_map } = action.payload;\n      return { ...state, custom_value_map } as IState;\n    }\n    default: {\n      return state;\n    }\n  }\n};\nexport const Provider = ({ children }: { children: React.ReactNode }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = {\n    state,\n    setUrl: useCallback(\n      (url: string) => {\n        dispatch({ type: Actions.SET_URL, payload: { url } });\n        localStorage.setItem(StorKey.URL, url);\n      },\n      [dispatch]\n    ),\n    setPid: useCallback(\n      (pid: string) => {\n        dispatch({ type: Actions.SET_PID, payload: { pid } });\n        localStorage.setItem(StorKey.PID, pid);\n      },\n      [dispatch]\n    ),\n    setMid: useCallback(\n      (mid: string) => {\n        dispatch({ type: Actions.SET_MID, payload: { mid } });\n        localStorage.setItem(StorKey.MID, mid);\n      },\n      [dispatch]\n    ),\n    setMilestones: useCallback(\n      (milestones: IMilestore[]) => {\n        dispatch({ type: Actions.SET_MILESTONES, payload: { milestones } });\n      },\n      [dispatch]\n    ),\n    setCustomEid: useCallback(\n      (custom_eid: string) => {\n        dispatch({ type: Actions.SET_CUSTOM_EID, payload: { custom_eid } });\n        localStorage.setItem(StorKey.CUSTOM_EID, custom_eid);\n      },\n      [dispatch]\n    ),\n    setCustomRid: useCallback(\n      (custom_rid: string) => {\n        dispatch({ type: Actions.SET_CUSTOM_RID, payload: { custom_rid } });\n        localStorage.setItem(StorKey.CUSTOM_RID, custom_rid);\n      },\n      [dispatch]\n    ),\n    setCustomAttrs: useCallback(\n      (custom_attrs: ICustomAttr[]) => {\n        dispatch({ type: Actions.SET_CUSTOM_ATTRS, payload: { custom_attrs } });\n      },\n      [dispatch]\n    ),\n    setBizDays: useCallback(\n      (biz_days: string[]) => {\n        dispatch({ type: Actions.SET_BIZ_DAYS, payload: { biz_days } });\n        localStorage.setItem(StorKey.BIZ_DAYS, biz_days.join(','));\n      },\n      [dispatch]\n    ),\n    setTasks: useCallback(\n      (tasks: ITask[]) => {\n        dispatch({ type: Actions.SET_TASKS, payload: { tasks } });\n      },\n      [dispatch]\n    ),\n    setCustomValueMap: useCallback(\n      (custom_value_map: WeakMap<ITask, ICustomValue>) => {\n        dispatch({\n          type: Actions.SET_CUSTOM_VALUE_MAP,\n          payload: { custom_value_map }\n        });\n      },\n      [dispatch]\n    )\n  };\n  return <RootContext.Provider value={value}>{children}</RootContext.Provider>;\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport {\n  ComposedChart,\n  Tooltip,\n  Legend,\n  Line,\n  XAxis,\n  YAxis,\n  Bar\n} from 'recharts';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { RootContext, ITask, ICustomValue } from './Provider';\ninterface IChartItem {\n  label: string;\n  estimate: number;\n  result?: number;\n  add?: number;\n}\nconst getCustomVal = (\n  custom_value_map: WeakMap<ITask, ICustomValue>,\n  task: ITask,\n  id: number\n) => {\n  if (custom_value_map.has(task)) {\n    return Number(\n      _.get(custom_value_map.get(task), `attributes_values.${id}`, 0)\n    );\n  } else {\n    return 0;\n  }\n};\n\nconst getTaskFinished = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      task.finished_date\n        ? moment(date).diff(moment(task.finished_date)) > 0\n        : false\n  );\n\nconst getTaskCreatedToday = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      moment(date).format('YYYY-MM-DD') ===\n      moment(task.created_date).format('YYYY-MM-DD')\n  );\n\nconst getTaskCreated = (tasks: ITask[], date: string) =>\n  tasks.filter(task => moment(date).diff(moment(task.created_date)) > 0);\n\nconst getSumVal = (\n  custom_value_map: WeakMap<ITask, ICustomValue>,\n  tasks: ITask[],\n  custom_eid: string\n) => {\n  return _.chain(tasks)\n    .map(task => getCustomVal(custom_value_map, task, Number(custom_eid)))\n    .sum()\n    .value();\n};\nexport const Chart = () => {\n  const [data, setData] = useState<IChartItem[]>([]);\n  const {\n    state: { tasks, biz_days, custom_value_map, custom_eid }\n  } = useContext(RootContext);\n  useEffect(\n    () => {\n      const days_len = biz_days.length;\n      if (days_len > 0 && tasks.length > 0 && custom_eid) {\n        const allTaskVal = getSumVal(\n          custom_value_map,\n          getTaskCreated(tasks, biz_days[0]),\n          custom_eid\n        );\n        const data = biz_days.map((day, idx) => {\n          const label = `day ${idx + 1}`;\n          const estimate = allTaskVal - (allTaskVal * idx) / (days_len - 1);\n          if (moment().diff(moment(day), 'days') >= 0) {\n            const result =\n              allTaskVal -\n              getSumVal(\n                custom_value_map,\n                getTaskFinished(tasks, day),\n                custom_eid\n              );\n            const add =\n              idx === 0\n                ? 0\n                : getSumVal(\n                    custom_value_map,\n                    getTaskCreatedToday(tasks, day),\n                    custom_eid\n                  );\n            return { label, estimate, result, add };\n          } else {\n            return { label, estimate };\n          }\n        });\n        setData(data);\n      }\n    },\n    [tasks, biz_days, custom_eid, custom_value_map, setData]\n  );\n  return (\n    <ComposedChart data={data} width={800} height={400}>\n      <YAxis />\n      <XAxis dataKey=\"label\" />\n      <Tooltip />\n      <Bar dataKey=\"result\" fill=\"#8884d8\" stackId=\"a\" />\n      <Bar dataKey=\"add\" fill=\"#82ca9d\" stackId=\"a\" />\n      <Line dataKey=\"estimate\" />\n    </ComposedChart>\n  );\n};\n","import React, { useCallback, useEffect, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { Input, InputGroup } from 'reactstrap';\nimport InputGroupAddon from 'reactstrap/lib/InputGroupAddon';\nimport { RootContext, baseUrl } from './Provider';\nimport { IUser } from './UserTasks';\nexport interface IProject {\n  id: number;\n  name: string;\n  members: IUser[];\n}\nexport const ProjectSelector = () => {\n  const {\n    state: { url, pid: statePid },\n    setPid\n  } = useContext(RootContext);\n  const [items, setItems] = useState<IProject[]>([]);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const pid = e.target.value;\n      if (pid) {\n        setPid(pid);\n      }\n    },\n    [setPid]\n  );\n  useEffect(\n    () => {\n      if (url) {\n        (async () => {\n          const { data: items } = await axios.get(`${baseUrl(url)}/projects`);\n          setItems(items);\n        })();\n      }\n    },\n    [url, setItems]\n  );\n\n  return (\n    <InputGroup className=\"col\">\n      <InputGroupAddon addonType=\"prepend\">Project</InputGroupAddon>\n      <Input type=\"select\" onChange={handleChange}>\n        <option> --- </option>\n        {items.map(item => (\n          <option\n            key={item.id}\n            value={item.id}\n            selected={String(item.id) === statePid}\n          >\n            {item.name}\n          </option>\n        ))}\n      </Input>\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useEffect, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { Input, InputGroup } from 'reactstrap';\nimport InputGroupAddon from 'reactstrap/lib/InputGroupAddon';\nimport { RootContext, baseUrl } from './Provider';\nexport interface IMilestore {\n  id: number;\n  name: string;\n  estimated_start: string;\n  estimated_finish: string;\n}\nexport const MilestoneSelector = () => {\n  const {\n    state: { url, pid, mid: stateMid },\n    setMid,\n    setMilestones,\n    setTasks\n  } = useContext(RootContext);\n  const [items, setItems] = useState<IMilestore[]>([]);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        setMid(id);\n      }\n    },\n    [setMid, items]\n  );\n  useEffect(\n    () => {\n      if (url && pid) {\n        (async () => {\n          const { data: items } = await axios.get(\n            `${baseUrl(url)}/milestones`,\n            { params: { project: pid } }\n          );\n          setItems(items);\n          setMilestones(items);\n        })();\n      }\n    },\n    [url, pid, setItems, setMilestones]\n  );\n  useEffect(\n    () => {\n      if (url && stateMid) {\n        (async () => {\n          const { data: items } = await axios.get(`${baseUrl(url)}/tasks`, {\n            headers: {\n              'x-disable-pagination': true\n            },\n            params: {\n              milestone: stateMid\n            }\n          });\n          setTasks(items);\n        })();\n      }\n    },\n    [url, stateMid, setTasks]\n  );\n\n  return (\n    <InputGroup className=\"col\">\n      <InputGroupAddon addonType=\"prepend\">Sprint</InputGroupAddon>\n      <Input type=\"select\" onChange={handleChange}>\n        <option> --- </option>\n        {items.map(item => (\n          <option\n            key={item.id}\n            value={item.id}\n            selected={String(item.id) === stateMid}\n          >\n            {item.name}\n          </option>\n        ))}\n      </Input>\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useEffect, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { Input, InputGroup } from 'reactstrap';\nimport InputGroupAddon from 'reactstrap/lib/InputGroupAddon';\nimport { RootContext, baseUrl, ITask, ICustomValue } from './Provider';\nexport interface ICustomAttr {\n  id: number;\n  name: string;\n}\nexport const CustomValuesSelector = () => {\n  const {\n    state: { url, pid, custom_eid: stateEid, custom_rid: stateRid, tasks },\n    setCustomEid,\n    setCustomRid,\n    setCustomAttrs,\n    setCustomValueMap\n  } = useContext(RootContext);\n  const [items, setItems] = useState<ICustomAttr[]>([]);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        switch (e.target.name) {\n          case 'eid': {\n            setCustomEid(id);\n            break;\n          }\n          case 'rid': {\n            setCustomRid(id);\n            break;\n          }\n        }\n      }\n    },\n    [setCustomEid, setCustomRid]\n  );\n  useEffect(\n    () => {\n      if (url && pid) {\n        (async () => {\n          const { data: items } = await axios.get(\n            `${baseUrl(url)}/task-custom-attributes`,\n            { params: { project: pid } }\n          );\n          setItems(items);\n          setCustomAttrs(items);\n        })();\n      }\n    },\n    [url, pid, setItems, setCustomAttrs]\n  );\n  useEffect(\n    () => {\n      if (url && tasks.length && stateEid && stateRid) {\n        (async () => {\n          const wmap = new WeakMap(\n            await Promise.all(\n              tasks.map(async item => {\n                const { data: custom_attr_val } = await axios.get(\n                  `${baseUrl(url)}/tasks/custom-attributes-values/${item.id}`\n                );\n                return [item, custom_attr_val] as [ITask, ICustomValue];\n              })\n            )\n          );\n          setCustomValueMap(wmap);\n        })();\n      }\n    },\n    [url, tasks, stateEid, stateRid, setCustomValueMap]\n  );\n\n  return (\n    <div className=\"row\">\n      <InputGroup className=\"col\">\n        <InputGroupAddon addonType=\"prepend\">Estimate</InputGroupAddon>\n        <Input name=\"eid\" type=\"select\" onChange={handleChange}>\n          <option> --- </option>\n          {items.map(item => (\n            <option\n              key={item.id}\n              value={item.id}\n              selected={String(item.id) === stateEid}\n            >\n              {item.name}\n            </option>\n          ))}\n        </Input>\n      </InputGroup>\n      <InputGroup className=\"col\">\n        <InputGroupAddon addonType=\"prepend\">Result</InputGroupAddon>\n        <Input name=\"rid\" type=\"select\" onChange={handleChange}>\n          <option> --- </option>\n          {items.map(item => (\n            <option\n              key={item.id}\n              value={item.id}\n              selected={String(item.id) === stateRid}\n            >\n              {item.name}\n            </option>\n          ))}\n        </Input>\n      </InputGroup>\n    </div>\n  );\n};\n","import React, { useEffect, useState, useContext } from 'react';\nimport { Input, Label } from 'reactstrap';\nimport { IMilestore } from './MilestoneSelector';\nimport { RootContext } from './Provider';\nimport moment, { Moment } from 'moment';\nimport biz from 'moment-business';\nimport _ from 'lodash';\nconst getMilestone = (mid: string, items: IMilestore[]) =>\n  items.find(item => String(item.id) === mid);\nconst getDays = (item: IMilestore) => {\n  const startM = moment(item.estimated_start);\n  const finishM = moment(item.estimated_finish);\n  const daysInSprint = finishM.diff(startM, 'days');\n  return _.times(daysInSprint).map(i => startM.clone().add(i, 'days'));\n};\nconst getDefaultBizDays = (items: Moment[]) =>\n  items\n    .filter(item => biz.isWeekDay(item))\n    .map(item => item.format('YYYY-MM-DD'));\nconst getBizDays = (biz_days: string[], items: Moment[]) => {\n  if (biz_days.length === 0) {\n    return getDefaultBizDays(items);\n  } else {\n    biz_days;\n  }\n};\nconst DayItem = ({ item, biz_days }: { item: Moment; biz_days: string[] }) => {\n  const value = item.format('YYYY-MM-DD');\n  return (\n    <div className=\"form-check form-check-inline\">\n      <Input\n        disabled={biz.isWeekendDay(item)}\n        id={value}\n        value={value}\n        type=\"checkbox\"\n        defaultChecked={_.includes(biz_days, value)}\n        className=\"form-check-input\"\n      />\n      <Label className=\"form-check-label\" for={value}>\n        {value}\n      </Label>\n    </div>\n  );\n};\nexport const DaysSelector = () => {\n  const {\n    state: { mid, milestones, biz_days },\n    setBizDays\n  } = useContext(RootContext);\n  const milestone = getMilestone(mid, milestones);\n  if (milestone) {\n    const days = getDays(milestone);\n    if (biz_days.length === 0) {\n      setBizDays(getDefaultBizDays(days));\n    }\n    return (\n      <>\n        {days.map(item => (\n          <DayItem key={item.toString()} item={item} biz_days={biz_days} />\n        ))}\n      </>\n    );\n  } else {\n    return <h1>loading...</h1>;\n  }\n};\n","import React, { useContext, useState, useCallback, useEffect } from 'react';\nimport { RootContext } from './Provider';\nimport { Form, Input, InputGroup, InputGroupAddon, Button } from 'reactstrap';\nimport { ProjectSelector } from './ProjectSelector';\nimport { MilestoneSelector } from './MilestoneSelector';\nimport { CustomValuesSelector } from './CustomValuesSelector';\nimport { DaysSelector } from './DaysSelector';\nexport const Controller = () => {\n  const { state, setUrl } = useContext(RootContext);\n  const [url, setStateUrl] = useState('');\n  const handleUrl = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setStateUrl(e.target.value);\n    },\n    [setStateUrl]\n  );\n  const handleSubmit = useCallback(\n    (e: React.FormEvent) => {\n      if (url) {\n        setUrl(url);\n      }\n      e.preventDefault();\n    },\n    [url, setUrl]\n  );\n  return (\n    <Form onSubmit={handleSubmit}>\n      <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">URL</InputGroupAddon>\n        <Input\n          defaultValue={state.url}\n          onChange={handleUrl}\n          placeholder=\"http://hostname:port\"\n        />\n        <InputGroupAddon addonType=\"append\">\n          <Button>Set</Button>\n        </InputGroupAddon>\n      </InputGroup>\n      <div className=\"row\">\n        <ProjectSelector />\n        <MilestoneSelector />\n      </div>\n      <CustomValuesSelector />\n      <DaysSelector />\n    </Form>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { IProject } from './ProjectSelector';\nimport { RootContext, baseUrl, ITask, ICustomValue } from './Provider';\nimport { ICustomAttr } from './CustomValuesSelector';\nimport { Table } from 'reactstrap';\nimport _ from 'lodash';\nexport interface IUser {\n  id: number;\n  username: string;\n  full_name: string;\n  full_name_display: string;\n  photo: string;\n}\nconst getTasksByUser = (items: ITask[]) => _.groupBy(items, 'assigned_to');\nconst getCustomAttrVal = (val: ICustomValue | undefined, id: number) =>\n  val && val.attributes_values ? Number(val.attributes_values[id]) || 0 : 0;\nconst getTaskSumByUser = (\n  items: ITask[],\n  custom_value_map: WeakMap<ITask, ICustomValue>,\n  custom_eid: string,\n  custom_rid: string\n) => {\n  const tasksByUser = _.chain(getTasksByUser(items))\n    .mapValues(userTasks =>\n      userTasks.map(task => custom_value_map.get(task)).reduce(\n        (result, attr_vals) => ({\n          e: result.e + getCustomAttrVal(attr_vals, Number(custom_eid)),\n          r: result.r + getCustomAttrVal(attr_vals, Number(custom_rid))\n        }),\n        { e: 0, r: 0 }\n      )\n    )\n    .value();\n  return tasksByUser;\n};\nconst getCustomAttr = (items: ICustomAttr[], id: number) =>\n  items.find(item => item.id === id);\nexport const UserTasks = () => {\n  const {\n    state: {\n      url,\n      pid,\n      tasks,\n      custom_value_map,\n      custom_attrs,\n      custom_eid,\n      custom_rid\n    }\n  } = useContext(RootContext);\n  const [items, setItems] = useState<IUser[]>([]);\n  useEffect(\n    () => {\n      if (url && pid) {\n        (async () => {\n          const {\n            data: { members }\n          } = await axios.get<IProject>(`${baseUrl(url)}/projects/${pid}`);\n          setItems(members);\n        })();\n      }\n    },\n    [url, pid, setItems]\n  );\n  const taskSumByUser = getTaskSumByUser(\n    tasks,\n    custom_value_map,\n    custom_eid,\n    custom_rid\n  );\n  const customAttrE = getCustomAttr(custom_attrs, Number(custom_eid));\n  const customAttrR = getCustomAttr(custom_attrs, Number(custom_rid));\n  if (!customAttrE || !customAttrR) {\n    return null;\n  }\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>{customAttrE.name}</th>\n          <th>{customAttrR.name}</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(item => (\n          <tr>\n            <td>{item.username}</td>\n            <td>{_.get(taskSumByUser, `${item.id}.e`)}</td>\n            <td>{_.get(taskSumByUser, `${item.id}.r`)}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n","import React from 'react';\nimport { Chart } from './Chart';\nimport { Controller } from './Controller';\nimport { UserTasks } from './UserTasks';\nimport { Provider } from './Provider';\nexport const App = () => (\n  <div className=\"container\">\n    <Provider>\n      <Controller />\n      <UserTasks />\n      <Chart />\n    </Provider>\n  </div>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}