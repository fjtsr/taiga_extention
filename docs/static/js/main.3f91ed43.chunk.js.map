{"version":3,"sources":["actions.ts","store.ts","reducer.ts","Provider.tsx","UserTasks.tsx","Chart.tsx","ProjectSelector.tsx","MilestoneSelector.tsx","CustomValuesSelector.tsx","DaysSelector.tsx","TaskStatusSelector.tsx","Controller.tsx","UnSettingTasks.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ActionTypes","StorageKey","getFromStorage","key","localStorage","getItem","getFromStorageWithSubkey","subkey","concat","setToStorage","item","setItem","setToStorageWithSubkey","initialStateFn","url","URL","pid","PID","mid","MID","custom_eid","CUSTOM_EID","custom_rid","CUSTOM_RID","biz_days_str","BIZ_DAYS","biz_days","_","compact","split","sort","reject_task_status_ids","REJECT_TASK_STATUS_IDS","custom_attrs","milestones","tasks","custom_value_map","WeakMap","updated_time","reducer","state","arguments","length","undefined","action","type","SET_URL","payload","Object","objectSpread","SET_PID","SET_MID","SET_MILESTONES","SET_CUSTOM_EID","SET_CUSTOM_ATTRS","SET_CUSTOM_RID","SET_BIZ_DAYS","join","ADD_BIZ_DAY","biz_day","chain","toConsumableArray","uniq","value","REMOVE_BIZ_DAY","reject","SET_TASKS","SET_CUSTOM_VALUE_MAP","SET_REJECT_TASK_STATUS_IDS","ADD_REJECT_TASK_STATUS_ID","reject_task_status_id","REMOVE_REJECT_TASK_STATUS_ID","UPDATE_DATA","Date","now","baseUrl","replace","initialState","RootContext","createContext","setUrl","setPid","setMid","setMilestones","setCustomEid","setCustomRid","setCustomAttrs","setBizDays","addBizDay","removeBizDay","setTasks","setCustomValueMap","toggeRejectTaskStatus","task_status_id","is_reject","updateData","Provider","_ref","children","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","useCallback","react_default","a","createElement","getCustomVal","task","id","has","Number","get","getTaskSumByUser","items","eid","rid","mapValues","groupBy","getTasksByUser","map","e","r","reduce","result","val","getCustomAttr","find","UserTasks","_useContext","useContext","_useContext$state","_useState","useState","_useState2","setItems","useEffect","asyncToGenerator","regenerator_default","mark","_callee","_ref2","members","wrap","_context","prev","next","axios","sent","data","stop","this","taskSumByUser","customAttrE","customAttrR","unassignedSum","Fragment","className","reactstrap_es","onClick","index_es","icon","faSyncAlt","bordered","name","username","getSumVal","sum","Chart","setData","days_len","allTaskVal","date","filter","moment","endOf","diff","created_date","getTaskCreated","day","idx","label","estimate","finished_date","getTaskFinished","add","local","format","getTaskCreatedToday","ComposedChart","width","height","YAxis","XAxis","dataKey","Tooltip","Bar","fill","stackId","Line","ProjectSelector","statePid","handleChange","target","addonType","onChange","MilestoneSelector","stateMid","params","project","_callee2","_ref4","_context2","headers","x-disable-pagination","milestone","includes","String","status","CustomValuesSelector","stateEid","stateRid","_callee3","wmap","_context3","t0","Promise","all","_ref5","custom_attr_val","abrupt","_x","apply","t1","DayItem","bizDay","checked","check","inline","disabled","biz","isWeekendDay","defaultChecked","DaysSelector","_useContext2","_useContext2$state","getMilestone","startM","estimated_start","daysInSprint","estimated_finish","times","i","clone","getDays","isWeekDay","DaysSelector_DayItem","toString","StatusItem","TaskStatusSelector","_ref3","TaskStatusSelector_StatusItem","Controller","setStateUrl","handleUrl","handleSubmit","preventDefault","onSubmit","defaultValue","placeholder","ProjectSelector_ProjectSelector","MilestoneSelector_MilestoneSelector","CustomValuesSelector_CustomValuesSelector","DaysSelector_DaysSelector","TaskStatusSelector_TaskStatusSelector","TaskItem","slug","project_extra_info","href","ref","tag","subject","UnSettingTasks","UnSettingTasks_TaskItem","App","Provider_Provider","Controller_Controller","UserTasks_UserTasks","UnSettingTasks_UnSettingTasks","Chart_Chart","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f91ed43.chunk.js","sourcesContent":["export enum ActionTypes {\n  SET_URL = 'SET_URL',\n  SET_PID = 'SET_PID',\n  SET_MID = 'SET_MID',\n  SET_MILESTONES = 'SET_MILESTONES',\n  SET_CUSTOM_EID = 'SET_CUSTOM_EID',\n  SET_CUSTOM_RID = 'SET_CUSTOM_RID',\n  SET_CUSTOM_ATTRS = 'SET_CUSTOM_ATTRS',\n  SET_BIZ_DAYS = 'SET_BIZ_DAYS',\n  ADD_BIZ_DAY = 'ADD_BIZ_DAY',\n  REMOVE_BIZ_DAY = 'REMOVE_BIZ_DAY',\n  SET_TASKS = 'SET_TASKS',\n  SET_CUSTOM_VALUE_MAP = 'SET_CUSTOM_VALUE_MAP',\n  SET_REJECT_TASK_STATUS_IDS = 'SET_REJECT_TASK_STATUS_IDS',\n  ADD_REJECT_TASK_STATUS_ID = 'ADD_REJECT_TASK_STATUS',\n  REMOVE_REJECT_TASK_STATUS_ID = 'REMOVE_REJECT_TASK_STATUS',\n  UPDATE_DATA = 'UPDATE_DATA'\n}\n\nexport interface IAction {\n  type: ActionTypes;\n  payload?: any;\n  meta?: { [key: string]: any };\n}\n","import _ from 'lodash';\nexport interface ICustomAttr {\n  id: number;\n  name: string;\n}\nexport interface IMilestone {\n  id: number;\n  name: string;\n  estimated_start: string;\n  estimated_finish: string;\n}\ninterface IProjectExtraInfo {\n  id: number;\n  name: string;\n  slug: string;\n}\ninterface IStatusExtraInfo {\n  name: string;\n  is_closed: boolean;\n}\nexport interface ITask {\n  id: number;\n  assigned_to: number | null;\n  created_date: string;\n  finished_date: string;\n  is_closed: boolean;\n  subject: string;\n  ref: number;\n  project: number;\n  project_extra_info: IProjectExtraInfo;\n  status: number;\n  status_extra_info: IStatusExtraInfo;\n}\nexport interface ITaskStatus {\n  id: number;\n  name: string;\n  order: number;\n  project: number;\n  is_closed: boolean;\n  slug: string;\n}\nexport interface IAttrValue {}\nexport interface ICustomValue {\n  attributes_values: {\n    [key: number]: string;\n  };\n}\nexport interface IUser {\n  id: number;\n  username: string;\n  full_name: string;\n  full_name_display: string;\n  photo: string;\n}\nexport interface IProject {\n  id: number;\n  name: string;\n  members: IUser[];\n}\nexport type ICustomValueMap = WeakMap<ITask, ICustomValue>;\nexport interface IState {\n  url: string;\n  pid: string; // url\n  mid: string; // url\n  custom_eid: string; //  pid\n  custom_rid: string; // pid\n  custom_attrs: ICustomAttr[]; // pid\n  biz_days: string[]; //mid\n  milestones: IMilestone[]; // pid\n  tasks: ITask[]; //mid\n  custom_value_map: ICustomValueMap; // pid\n  reject_task_status_ids: string[]; // pid\n  updated_time: number;\n}\n\nexport enum StorageKey {\n  URL = 'taiga_url',\n  PID = 'taiga_pid',\n  MID = 'taiga_mid',\n  CUSTOM_EID = 'taiga_custom_eid',\n  CUSTOM_RID = 'taiga_custom_rid',\n  BIZ_DAYS = 'taiga_biz_days',\n  REJECT_TASK_STATUS_IDS = 'reject_task_status_ids'\n}\n\nexport const getFromStorage = (key: string) => localStorage.getItem(key) || '';\n\nexport const getFromStorageWithSubkey = (key: StorageKey, subkey: string) =>\n  subkey ? getFromStorage(`${subkey}/${key}`) : '';\n\nexport const setToStorage = (key: string, item: string) => {\n  localStorage.setItem(key, item);\n};\nexport const setToStorageWithSubkey = (\n  key: StorageKey,\n  subkey: string,\n  item: string\n) => {\n  subkey ? setToStorage(`${subkey}/${key}`, item) : null;\n};\nexport const initialStateFn = (): IState => {\n  const url = getFromStorage(StorageKey.URL);\n  const pid = getFromStorage(StorageKey.PID);\n  const mid = getFromStorage(StorageKey.MID);\n  const custom_eid = getFromStorageWithSubkey(StorageKey.CUSTOM_EID, pid);\n  const custom_rid = getFromStorageWithSubkey(StorageKey.CUSTOM_RID, pid);\n  const biz_days_str = getFromStorageWithSubkey(StorageKey.BIZ_DAYS, mid);\n  const biz_days = _.compact(biz_days_str.split(',')).sort();\n  const reject_task_status_ids = _.compact(\n    getFromStorageWithSubkey(StorageKey.REJECT_TASK_STATUS_IDS, pid).split(',')\n  );\n  return {\n    url,\n    pid,\n    mid,\n    custom_eid,\n    custom_rid,\n    custom_attrs: [],\n    biz_days,\n    milestones: [],\n    tasks: [],\n    custom_value_map: new WeakMap(),\n    reject_task_status_ids,\n    updated_time: 0\n  };\n};\n","import _ from 'lodash';\nimport { initialStateFn, IState, StorageKey } from './store';\nimport { ActionTypes, IAction } from './actions';\nimport {\n  setToStorage,\n  setToStorageWithSubkey,\n  getFromStorageWithSubkey\n} from './store';\nexport const reducer = (state = initialStateFn(), action: IAction) => {\n  switch (action.type) {\n    case ActionTypes.SET_URL: {\n      const { url } = action.payload;\n      setToStorage(StorageKey.URL, url);\n      return { ...state, url } as IState;\n    }\n    case ActionTypes.SET_PID: {\n      const { pid } = action.payload;\n      setToStorage(StorageKey.PID, pid);\n      return {\n        ...state,\n        pid,\n        mid: '',\n        custom_eid: getFromStorageWithSubkey(StorageKey.CUSTOM_EID, pid),\n        custom_rid: getFromStorageWithSubkey(StorageKey.CUSTOM_RID, pid),\n        custom_attrs: [],\n        milestones: [],\n        custom_value_map: new WeakMap()\n      } as IState;\n    }\n    case ActionTypes.SET_MID: {\n      const { mid } = action.payload;\n      setToStorage(StorageKey.MID, mid);\n      return {\n        ...state,\n        mid,\n        tasks: [],\n        biz_days: _.compact(\n          getFromStorageWithSubkey(StorageKey.BIZ_DAYS, mid).split(',')\n        ).sort()\n      } as IState;\n    }\n    case ActionTypes.SET_MILESTONES: {\n      const { milestones } = action.payload;\n      return { ...state, milestones } as IState;\n    }\n    case ActionTypes.SET_CUSTOM_EID: {\n      const { custom_eid } = action.payload;\n      setToStorageWithSubkey(StorageKey.CUSTOM_EID, state.pid, custom_eid);\n      return { ...state, custom_eid } as IState;\n    }\n    case ActionTypes.SET_CUSTOM_ATTRS: {\n      const { custom_attrs } = action.payload;\n      return { ...state, custom_attrs } as IState;\n    }\n    case ActionTypes.SET_CUSTOM_RID: {\n      const { custom_rid } = action.payload;\n      setToStorageWithSubkey(StorageKey.CUSTOM_RID, state.pid, custom_rid);\n      return { ...state, custom_rid } as IState;\n    }\n    case ActionTypes.SET_BIZ_DAYS: {\n      const { biz_days } = action.payload;\n      setToStorageWithSubkey(\n        StorageKey.BIZ_DAYS,\n        state.mid,\n        biz_days.join(',')\n      );\n      return { ...state, biz_days } as IState;\n    }\n    case ActionTypes.ADD_BIZ_DAY: {\n      const { biz_day } = action.payload;\n      const biz_days = _.chain([...state.biz_days, biz_day])\n        .uniq()\n        .sort()\n        .value();\n      setToStorageWithSubkey(\n        StorageKey.BIZ_DAYS,\n        state.mid,\n        biz_days.join(',')\n      );\n      return { ...state, biz_days } as IState;\n    }\n    case ActionTypes.REMOVE_BIZ_DAY: {\n      const { biz_day } = action.payload;\n      const biz_days = _.reject([...state.biz_days], item => item === biz_day);\n      setToStorageWithSubkey(\n        StorageKey.BIZ_DAYS,\n        state.mid,\n        biz_days.join(',')\n      );\n      return { ...state, biz_days } as IState;\n    }\n    case ActionTypes.SET_TASKS: {\n      const { tasks } = action.payload;\n      return { ...state, tasks } as IState;\n    }\n    case ActionTypes.SET_CUSTOM_VALUE_MAP: {\n      const { custom_value_map } = action.payload;\n      return { ...state, custom_value_map } as IState;\n    }\n    case ActionTypes.SET_REJECT_TASK_STATUS_IDS: {\n      const { reject_task_status_ids } = action.payload;\n      setToStorageWithSubkey(\n        StorageKey.REJECT_TASK_STATUS_IDS,\n        state.pid,\n        reject_task_status_ids.join(',')\n      );\n      return { ...state, reject_task_status_ids } as IState;\n    }\n    case ActionTypes.ADD_REJECT_TASK_STATUS_ID: {\n      const { reject_task_status_id } = action.payload;\n      const reject_task_status_ids = _.chain([\n        ...state.reject_task_status_ids,\n        reject_task_status_id\n      ])\n        .compact()\n        .uniq()\n        .value();\n      setToStorageWithSubkey(\n        StorageKey.REJECT_TASK_STATUS_IDS,\n        state.pid,\n        reject_task_status_ids.join(',')\n      );\n      return { ...state, reject_task_status_ids } as IState;\n    }\n    case ActionTypes.REMOVE_REJECT_TASK_STATUS_ID: {\n      const { reject_task_status_id } = action.payload;\n      const reject_task_status_ids = _.reject(\n        [...state.reject_task_status_ids],\n        item => item === reject_task_status_id\n      );\n      setToStorageWithSubkey(\n        StorageKey.REJECT_TASK_STATUS_IDS,\n        state.pid,\n        reject_task_status_ids.join(',')\n      );\n      return { ...state, reject_task_status_ids } as IState;\n    }\n    case ActionTypes.UPDATE_DATA: {\n      return { ...state, updated_time: Date.now() } as IState;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import React, { createContext, useReducer, useCallback } from 'react';\nimport { ActionTypes } from './actions';\nimport {\n  initialStateFn,\n  IMilestone,\n  ICustomAttr,\n  ITask,\n  ICustomValueMap\n} from './store';\nimport { reducer } from './reducer';\nimport _ from 'lodash';\nexport const baseUrl = (url: string) => `${url.replace(/[¥/]$/, '')}/api/v1`;\n\nconst initialState = initialStateFn();\nexport const RootContext = createContext({\n  state: initialState,\n  setUrl: (url: string) => {},\n  setPid: (pid: string) => {},\n  setMid: (mid: string) => {},\n  setMilestones: (milestones: IMilestone[]) => {},\n  setCustomEid: (custom_eid: string) => {},\n  setCustomRid: (custom_rid: string) => {},\n  setCustomAttrs: (custom_attrs: ICustomAttr[]) => {},\n  setBizDays: (biz_days: string[]) => {},\n  addBizDay: (biz_day: string) => {},\n  removeBizDay: (biz_day: string) => {},\n  setTasks: (tasks: ITask[]) => {},\n  setCustomValueMap: (custom_value_map: ICustomValueMap) => {},\n  toggeRejectTaskStatus: (task_status_id: string, is_reject: boolean) => {},\n  updateData: () => {}\n});\n\nexport const Provider = ({ children }: { children: React.ReactNode }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = {\n    state,\n    setUrl: useCallback(\n      (url: string) => {\n        dispatch({ type: ActionTypes.SET_URL, payload: { url } });\n      },\n      [dispatch]\n    ),\n    setPid: useCallback(\n      (pid: string) => {\n        dispatch({ type: ActionTypes.SET_PID, payload: { pid } });\n      },\n      [dispatch]\n    ),\n    setMid: useCallback(\n      (mid: string) => {\n        dispatch({ type: ActionTypes.SET_MID, payload: { mid } });\n      },\n      [dispatch]\n    ),\n    setMilestones: useCallback(\n      (milestones: IMilestone[]) => {\n        dispatch({ type: ActionTypes.SET_MILESTONES, payload: { milestones } });\n      },\n      [dispatch]\n    ),\n    setCustomEid: useCallback(\n      (custom_eid: string) => {\n        dispatch({ type: ActionTypes.SET_CUSTOM_EID, payload: { custom_eid } });\n      },\n      [dispatch]\n    ),\n    setCustomRid: useCallback(\n      (custom_rid: string) => {\n        dispatch({ type: ActionTypes.SET_CUSTOM_RID, payload: { custom_rid } });\n      },\n      [dispatch]\n    ),\n    setCustomAttrs: useCallback(\n      (custom_attrs: ICustomAttr[]) => {\n        dispatch({\n          type: ActionTypes.SET_CUSTOM_ATTRS,\n          payload: { custom_attrs }\n        });\n      },\n      [dispatch]\n    ),\n    setBizDays: useCallback(\n      (biz_days: string[]) => {\n        dispatch({ type: ActionTypes.SET_BIZ_DAYS, payload: { biz_days } });\n      },\n      [dispatch]\n    ),\n    addBizDay: useCallback(\n      (biz_day: string) => {\n        dispatch({ type: ActionTypes.ADD_BIZ_DAY, payload: { biz_day } });\n      },\n      [dispatch]\n    ),\n    removeBizDay: useCallback(\n      (biz_day: string) => {\n        dispatch({ type: ActionTypes.REMOVE_BIZ_DAY, payload: { biz_day } });\n      },\n      [dispatch]\n    ),\n    setTasks: useCallback(\n      (tasks: ITask[]) => {\n        dispatch({ type: ActionTypes.SET_TASKS, payload: { tasks } });\n      },\n      [dispatch]\n    ),\n    setCustomValueMap: useCallback(\n      (custom_value_map: ICustomValueMap) => {\n        dispatch({\n          type: ActionTypes.SET_CUSTOM_VALUE_MAP,\n          payload: { custom_value_map }\n        });\n      },\n      [dispatch]\n    ),\n    toggeRejectTaskStatus: useCallback(\n      (reject_task_status_id: string, is_reject: boolean) => {\n        const type = is_reject\n          ? ActionTypes.ADD_REJECT_TASK_STATUS_ID\n          : ActionTypes.REMOVE_REJECT_TASK_STATUS_ID;\n        dispatch({\n          type,\n          payload: { reject_task_status_id }\n        });\n      },\n      [dispatch]\n    ),\n    updateData: useCallback(\n      () => {\n        dispatch({\n          type: ActionTypes.UPDATE_DATA\n        });\n      },\n      [dispatch]\n    )\n  };\n  return <RootContext.Provider value={value}>{children}</RootContext.Provider>;\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { ICustomValueMap, IProject, IUser, ITask, ICustomAttr } from './store';\nimport { RootContext, baseUrl } from './Provider';\nimport { Table, Button } from 'reactstrap';\nimport _ from 'lodash';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSyncAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst getTasksByUser = (items: ITask[]) => _.groupBy(items, 'assigned_to');\nexport const getCustomVal = (\n  custom_value_map: ICustomValueMap,\n  task: ITask,\n  id: number\n) => {\n  if (custom_value_map.has(task)) {\n    return Number(\n      _.get(custom_value_map.get(task), `attributes_values.${id}`, '0').replace(\n        /[^0-9.]/g,\n        ''\n      )\n    );\n  } else {\n    return 0;\n  }\n};\n\nconst getTaskSumByUser = (\n  items: ITask[],\n  custom_value_map: ICustomValueMap,\n  custom_eid: string,\n  custom_rid: string\n) => {\n  const eid = Number(custom_eid);\n  const rid = Number(custom_rid);\n  const tasksByUser = _.mapValues(getTasksByUser(items), tasks =>\n    _.chain(tasks)\n      .map(task => ({\n        e: getCustomVal(custom_value_map, task, eid),\n        r: getCustomVal(custom_value_map, task, rid)\n      }))\n      .reduce((result, val) => ({ e: result.e + val.e, r: result.r + val.r }), {\n        e: 0,\n        r: 0\n      })\n      .value()\n  );\n  return tasksByUser;\n};\nconst getCustomAttr = (items: ICustomAttr[], id: number) =>\n  items.find(item => item.id === id);\nexport const UserTasks = () => {\n  const {\n    state: {\n      url,\n      pid,\n      tasks,\n      custom_value_map,\n      custom_attrs,\n      custom_eid,\n      custom_rid\n    },\n    updateData\n  } = useContext(RootContext);\n  const [items, setItems] = useState<IUser[]>([]);\n  useEffect(\n    () => {\n      if (url && pid) {\n        (async () => {\n          const {\n            data: { members }\n          } = await axios.get<IProject>(`${baseUrl(url)}/projects/${pid}`);\n          setItems(members);\n        })();\n      }\n    },\n    [url, pid, setItems]\n  );\n  const taskSumByUser = getTaskSumByUser(\n    tasks,\n    custom_value_map,\n    custom_eid,\n    custom_rid\n  );\n  const customAttrE = getCustomAttr(custom_attrs, Number(custom_eid));\n  const customAttrR = getCustomAttr(custom_attrs, Number(custom_rid));\n  if (!customAttrE || !customAttrR) {\n    return null;\n  }\n  const unassignedSum = _.get(taskSumByUser, 'null.e', 0);\n  return (\n    <>\n      <div className=\"text-right\">\n        <Button onClick={updateData}>\n          <FontAwesomeIcon icon={faSyncAlt} />\n        </Button>\n      </div>\n      <Table bordered>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>{customAttrE.name}</th>\n            <th>{customAttrR.name}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map(item => (\n            <tr key={item.id}>\n              <td>{item.username}</td>\n              <td className=\"text-right\">\n                {_.get(taskSumByUser, `${item.id}.e`)}\n              </td>\n              <td className=\"text-right\">\n                {_.get(taskSumByUser, `${item.id}.r`)}\n              </td>\n            </tr>\n          ))}\n          <tr key=\"null\">\n            <td>unassigned</td>\n            <td className=\"text-right text-danger\">{unassignedSum}</td>\n            <td />\n          </tr>\n        </tbody>\n      </Table>\n    </>\n  );\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport {\n  ComposedChart,\n  Tooltip,\n  Legend,\n  Line,\n  XAxis,\n  YAxis,\n  Bar\n} from 'recharts';\nimport { ITask, ICustomValueMap } from './store';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { RootContext } from './Provider';\nimport { getCustomVal } from './UserTasks';\nimport { Card, CardHeader } from 'reactstrap';\ninterface IChartItem {\n  label: string;\n  estimate: number;\n  result?: number;\n  add?: number;\n}\n\nconst getTaskFinished = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      task.finished_date\n        ? moment(date).diff(moment(task.finished_date)) > 0\n        : false\n  );\n\nconst getTaskCreatedToday = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      moment(date)\n        .local()\n        .format('YYYY-MM-DD') ===\n      moment(task.created_date)\n        .local()\n        .format('YYYY-MM-DD')\n  );\n\nconst getTaskCreated = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      moment(date)\n        .endOf('days')\n        .diff(moment(task.created_date)) > 0\n  );\n\nconst getSumVal = (\n  custom_value_map: ICustomValueMap,\n  tasks: ITask[],\n  custom_eid: string\n) => {\n  return _.chain(tasks)\n    .map(task => getCustomVal(custom_value_map, task, Number(custom_eid)))\n    .sum()\n    .value();\n};\nexport const Chart = () => {\n  const [data, setData] = useState<IChartItem[]>([]);\n  const {\n    state: { tasks, biz_days, custom_value_map, custom_eid }\n  } = useContext(RootContext);\n  useEffect(\n    () => {\n      const days_len = biz_days.length;\n      if (days_len > 0 && tasks.length > 0 && custom_eid) {\n        const allTaskVal = getSumVal(\n          custom_value_map,\n          getTaskCreated(tasks, biz_days[0]),\n          custom_eid\n        );\n        const data = biz_days.map((day, idx) => {\n          const label = `day ${idx + 1}`;\n          const estimate = allTaskVal - (allTaskVal * idx) / (days_len - 1);\n          if (moment().diff(moment(day), 'days') >= 0) {\n            const result =\n              allTaskVal -\n              getSumVal(\n                custom_value_map,\n                getTaskFinished(tasks, day),\n                custom_eid\n              );\n            const add =\n              idx === 0\n                ? 0\n                : getSumVal(\n                    custom_value_map,\n                    getTaskCreatedToday(tasks, day),\n                    custom_eid\n                  );\n            return { label, estimate, result, add };\n          } else {\n            return { label, estimate };\n          }\n        });\n        setData(data);\n      } else {\n        setData([]);\n      }\n    },\n    [tasks, biz_days, custom_eid, custom_value_map, setData]\n  );\n  if (data.length === 0) {\n    return null;\n  } else {\n    return (\n      <Card>\n        <CardHeader>Burn down chart</CardHeader>\n        <ComposedChart data={data} width={800} height={400}>\n          <YAxis />\n          <XAxis dataKey=\"label\" />\n          <Tooltip />\n          <Bar dataKey=\"result\" fill=\"#8884d8\" stackId=\"a\" />\n          <Bar dataKey=\"add\" fill=\"#82ca9d\" stackId=\"a\" />\n          <Line dataKey=\"estimate\" />\n        </ComposedChart>\n      </Card>\n    );\n  }\n};\n","import React, { useCallback, useEffect, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { Input, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { RootContext, baseUrl } from './Provider';\nimport { IProject } from './store';\nexport const ProjectSelector = () => {\n  const {\n    state: { url, pid: statePid },\n    setPid\n  } = useContext(RootContext);\n  const [items, setItems] = useState<IProject[]>([]);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const pid = e.target.value;\n      if (pid) {\n        setPid(pid);\n      }\n    },\n    [setPid]\n  );\n  useEffect(\n    () => {\n      if (url) {\n        (async () => {\n          const { data: items } = await axios.get(`${baseUrl(url)}/projects`);\n          setItems(items);\n        })();\n      }\n    },\n    [url, setItems]\n  );\n\n  return (\n    <InputGroup className=\"col\">\n      <InputGroupAddon addonType=\"prepend\">Project</InputGroupAddon>\n      <Input value={statePid} type=\"select\" onChange={handleChange}>\n        <option value=\"\"> --- </option>\n        {items.map(item => (\n          <option key={item.id} value={item.id}>\n            {item.name}\n          </option>\n        ))}\n      </Input>\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useEffect, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { Input, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { RootContext, baseUrl } from './Provider';\nimport { IMilestone, ITask } from './store';\nimport _ from 'lodash';\n\nexport const MilestoneSelector = () => {\n  const {\n    state: { url, pid, mid: stateMid, updated_time, reject_task_status_ids },\n    setMid,\n    setMilestones,\n    setTasks\n  } = useContext(RootContext);\n  const [items, setItems] = useState<IMilestone[]>([]);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        setMid(id);\n      }\n    },\n    [setMid, items]\n  );\n  useEffect(\n    () => {\n      if (url && pid) {\n        (async () => {\n          const { data: items } = await axios.get(\n            `${baseUrl(url)}/milestones`,\n            { params: { project: pid } }\n          );\n          setItems(items);\n          setMilestones(items);\n        })();\n      }\n    },\n    [url, pid]\n  );\n  useEffect(\n    () => {\n      if (url && stateMid) {\n        (async () => {\n          const { data: items } = await axios.get<ITask[]>(\n            `${baseUrl(url)}/tasks`,\n            {\n              headers: {\n                'x-disable-pagination': true\n              },\n              params: {\n                milestone: stateMid\n              }\n            }\n          );\n          const tasks = items.filter(\n            item => !_.includes(reject_task_status_ids, String(item.status))\n          );\n          setTasks(tasks);\n        })();\n      }\n    },\n    [url, stateMid, updated_time, reject_task_status_ids]\n  );\n\n  return (\n    <InputGroup className=\"col\">\n      <InputGroupAddon addonType=\"prepend\">Sprint</InputGroupAddon>\n      <Input type=\"select\" value={stateMid} onChange={handleChange}>\n        <option value=\"\"> --- </option>\n        {items.map(item => (\n          <option key={item.id} value={item.id}>\n            {item.name}\n          </option>\n        ))}\n      </Input>\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useEffect, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { Input, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { ITask, ICustomValue, ICustomAttr } from './store';\nimport { RootContext, baseUrl } from './Provider';\n\nexport const CustomValuesSelector = () => {\n  const {\n    state: { url, pid, custom_eid: stateEid, custom_rid: stateRid, tasks },\n    setCustomEid,\n    setCustomRid,\n    setCustomAttrs,\n    setCustomValueMap\n  } = useContext(RootContext);\n  const [items, setItems] = useState<ICustomAttr[]>([]);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        switch (e.target.name) {\n          case 'eid': {\n            setCustomEid(id);\n            break;\n          }\n          case 'rid': {\n            setCustomRid(id);\n            break;\n          }\n        }\n      }\n    },\n    [setCustomEid, setCustomRid]\n  );\n  useEffect(\n    () => {\n      if (url && pid) {\n        (async () => {\n          const { data: items } = await axios.get(\n            `${baseUrl(url)}/task-custom-attributes`,\n            { params: { project: pid } }\n          );\n          setItems(items);\n          setCustomAttrs(items);\n        })();\n      }\n    },\n    [url, pid, setItems, setCustomAttrs]\n  );\n  useEffect(\n    () => {\n      if (url && tasks.length && stateEid && stateRid) {\n        (async () => {\n          const wmap = new WeakMap(\n            await Promise.all(\n              tasks.map(async item => {\n                const { data: custom_attr_val } = await axios.get(\n                  `${baseUrl(url)}/tasks/custom-attributes-values/${item.id}`\n                );\n                return [item, custom_attr_val] as [ITask, ICustomValue];\n              })\n            )\n          );\n          setCustomValueMap(wmap);\n        })();\n      }\n    },\n    [url, tasks, stateEid, stateRid, setCustomValueMap]\n  );\n\n  return (\n    <div className=\"row\">\n      <InputGroup className=\"col\">\n        <InputGroupAddon addonType=\"prepend\">Estimate</InputGroupAddon>\n        <Input\n          value={stateEid}\n          name=\"eid\"\n          type=\"select\"\n          onChange={handleChange}\n        >\n          <option value=\"\"> --- </option>\n          {items.map(item => (\n            <option key={item.id} value={item.id}>\n              {item.name}\n            </option>\n          ))}\n        </Input>\n      </InputGroup>\n      <InputGroup className=\"col\">\n        <InputGroupAddon addonType=\"prepend\">Result</InputGroupAddon>\n        <Input\n          value={stateRid}\n          name=\"rid\"\n          type=\"select\"\n          onChange={handleChange}\n        >\n          <option> --- </option>\n          {items.map(item => (\n            <option key={item.id} value={item.id}>\n              {item.name}\n            </option>\n          ))}\n        </Input>\n      </InputGroup>\n    </div>\n  );\n};\n","import React, { useEffect, useState, useContext, useCallback } from 'react';\nimport { Input, Label, Form, FormGroup } from 'reactstrap';\nimport { IMilestone } from './store';\nimport { RootContext } from './Provider';\nimport moment, { Moment } from 'moment';\nimport biz from 'moment-business';\nimport _ from 'lodash';\nconst getMilestone = (mid: string, items: IMilestone[]) =>\n  items.find(item => String(item.id) === mid);\nconst getDays = (item: IMilestone) => {\n  const startM = moment(item.estimated_start).local();\n  const finishM = moment(item.estimated_finish).local();\n  const daysInSprint = finishM.diff(startM, 'days');\n  return _.times(daysInSprint).map(i => startM.clone().add(i, 'days'));\n};\nconst getDefaultBizDays = (items: Moment[]) =>\n  items\n    .filter(item => biz.isWeekDay(item))\n    .map(item => item.format('YYYY-MM-DD'));\n\nconst DayItem = ({ item, biz_days }: { item: Moment; biz_days: string[] }) => {\n  const { addBizDay, removeBizDay } = useContext(RootContext);\n  const value = item.format('YYYY-MM-DD');\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const bizDay = e.target.value;\n      e.target.checked ? addBizDay(bizDay) : removeBizDay(bizDay);\n    },\n    [addBizDay, removeBizDay]\n  );\n  return (\n    <FormGroup check inline>\n      <Label check>\n        <Input\n          onChange={handleChange}\n          disabled={biz.isWeekendDay(item)}\n          value={value}\n          type=\"checkbox\"\n          defaultChecked={_.includes(biz_days, value)}\n          className=\"form-check-input\"\n        />\n        {value}\n      </Label>\n    </FormGroup>\n  );\n};\nexport const DaysSelector = () => {\n  const {\n    state: { mid, milestones, biz_days },\n    setBizDays\n  } = useContext(RootContext);\n  const [items, setItems] = useState<Moment[]>([]);\n  useEffect(\n    () => {\n      const milestone = getMilestone(mid, milestones);\n      if (milestone) {\n        const items = getDays(milestone);\n        setItems(items);\n        if (biz_days.length <= 1) {\n          setBizDays(getDefaultBizDays(items));\n        }\n      }\n    },\n    [mid, milestones, biz_days]\n  );\n  if (items.length === 0) {\n    return null;\n  } else {\n    return (\n      <>\n        {items.map(item => (\n          <DayItem key={item.toString()} item={item} biz_days={biz_days} />\n        ))}\n      </>\n    );\n  }\n};\n","import React, { useCallback, useEffect, useContext, useState } from 'react';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport { RootContext, baseUrl } from './Provider';\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Form,\n  Input,\n  FormGroup,\n  Label\n} from 'reactstrap';\nimport { ITaskStatus } from './store';\nconst StatusItem = ({ item }: { item: ITaskStatus }) => {\n  const {\n    state: { reject_task_status_ids },\n    toggeRejectTaskStatus\n  } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      toggeRejectTaskStatus(String(id), !e.target.checked);\n    },\n    [toggeRejectTaskStatus]\n  );\n  return (\n    <FormGroup check inline>\n      <Label check>\n        <Input\n          onChange={handleChange}\n          type=\"checkbox\"\n          value={item.id}\n          defaultChecked={!_.includes(reject_task_status_ids, String(item.id))}\n        />\n        {item.name}\n      </Label>\n    </FormGroup>\n  );\n};\nexport const TaskStatusSelector = () => {\n  const {\n    state: { url, pid }\n  } = useContext(RootContext);\n  const [items, setItems] = useState<ITaskStatus[]>([]);\n  useEffect(\n    () => {\n      if (url && pid) {\n        (async () => {\n          const { data: items } = await axios.get(\n            `${baseUrl(url)}/task-statuses`,\n            {\n              params: { project: pid }\n            }\n          );\n          setItems(items);\n        })();\n      }\n    },\n    [url, pid]\n  );\n  if (items.length === 0) {\n    return null;\n  }\n  return (\n    <Card>\n      <CardHeader>Task status</CardHeader>\n      <CardBody>\n        {items.map(item => (\n          <StatusItem key={item.id} item={item} />\n        ))}\n      </CardBody>\n    </Card>\n  );\n};\n","import React, { useContext, useState, useCallback } from 'react';\nimport { RootContext } from './Provider';\nimport { Form, Input, InputGroup, InputGroupAddon, Button } from 'reactstrap';\nimport { ProjectSelector } from './ProjectSelector';\nimport { MilestoneSelector } from './MilestoneSelector';\nimport { CustomValuesSelector } from './CustomValuesSelector';\nimport { DaysSelector } from './DaysSelector';\nimport { TaskStatusSelector } from './TaskStatusSelector';\nexport const Controller = () => {\n  const { state, setUrl } = useContext(RootContext);\n  const [url, setStateUrl] = useState('');\n  const handleUrl = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setStateUrl(e.target.value);\n    },\n    [setStateUrl]\n  );\n  const handleSubmit = useCallback(\n    (e: React.FormEvent) => {\n      if (url) {\n        setUrl(url);\n      }\n      e.preventDefault();\n    },\n    [url, setUrl]\n  );\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <InputGroup>\n          <InputGroupAddon addonType=\"prepend\">URL</InputGroupAddon>\n          <Input\n            defaultValue={state.url}\n            onChange={handleUrl}\n            placeholder=\"http://hostname:port\"\n          />\n          <InputGroupAddon addonType=\"append\">\n            <Button>Set</Button>\n          </InputGroupAddon>\n        </InputGroup>\n      </Form>\n      <div className=\"row\">\n        <ProjectSelector />\n        <MilestoneSelector />\n      </div>\n      <CustomValuesSelector />\n      <DaysSelector />\n      <TaskStatusSelector />\n    </>\n  );\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport { RootContext } from './Provider';\nimport { ITask } from './store';\nimport { ListGroup, ListGroupItem, Card, CardHeader } from 'reactstrap';\nimport { getCustomVal } from './UserTasks';\nconst TaskItem = ({ url, item }: { item: ITask; url: string }) => {\n  const {\n    project_extra_info: { slug }\n  } = item;\n  const href = `${url}/project/${slug}/task/${item.ref}`;\n  return (\n    <ListGroupItem tag=\"a\" target=\"_blank\" href={href}>\n      {item.subject}\n    </ListGroupItem>\n  );\n};\nexport const UnSettingTasks = () => {\n  const {\n    state: { url, tasks, custom_value_map, custom_eid }\n  } = useContext(RootContext);\n  const [items, setItems] = useState<ITask[]>([]);\n  useEffect(\n    () => {\n      if (tasks.length > 0 && custom_eid) {\n        const eid = Number(custom_eid);\n        const items = tasks.filter(\n          task => getCustomVal(custom_value_map, task, eid) === 0\n        );\n        if (tasks.length > items.length) {\n          setItems(items);\n        }\n      }\n    },\n    [tasks, custom_value_map, custom_eid]\n  );\n  if (items.length === 0) {\n    return null;\n  } else {\n    return (\n      <Card>\n        <CardHeader>Unsetting tasks</CardHeader>\n        <ListGroup>\n          {items.map(item => (\n            <TaskItem url={url} key={item.id} item={item} />\n          ))}\n        </ListGroup>\n      </Card>\n    );\n  }\n};\n","import React from 'react';\nimport { Chart } from './Chart';\nimport { Controller } from './Controller';\nimport { UserTasks } from './UserTasks';\nimport { UnSettingTasks } from './UnSettingTasks';\nimport { Provider } from './Provider';\nexport const App = () => (\n  <div className=\"container\">\n    <Provider>\n      <Controller />\n      <UserTasks />\n      <UnSettingTasks />\n      <Chart />\n    </Provider>\n  </div>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}