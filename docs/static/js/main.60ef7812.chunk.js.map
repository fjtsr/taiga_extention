{"version":3,"sources":["actions.ts","store.ts","reducer.ts","Provider.tsx","UserTasks.tsx","Chart.tsx","ProjectSelector.tsx","MilestoneSelector.tsx","CustomValuesSelector.tsx","DaysSelector.tsx","Controller.tsx","UnSettingTasks.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ActionTypes","StorageKey","getFromStorage","key","localStorage","getItem","getFromStorageWithSubkey","subkey","concat","setToStorage","item","setItem","setToStorageWithSubkey","initialStateFn","url","URL","pid","PID","mid","MID","custom_eid","CUSTOM_EID","custom_rid","CUSTOM_RID","biz_days_str","BIZ_DAYS","custom_attrs","biz_days","_","compact","split","sort","milestones","tasks","custom_value_map","WeakMap","updated_time","reducer","state","arguments","length","undefined","action","type","SET_URL","payload","Object","objectSpread","SET_PID","SET_MID","SET_MILESTONES","SET_CUSTOM_EID","SET_CUSTOM_ATTRS","SET_CUSTOM_RID","SET_BIZ_DAYS","join","ADD_BIZ_DAY","biz_day","chain","toConsumableArray","uniq","value","REMOVE_BIZ_DAY","reject","SET_TASKS","SET_CUSTOM_VALUE_MAP","UPDATE_DATA","Date","now","baseUrl","replace","initialState","RootContext","createContext","setUrl","setPid","setMid","setMilestones","setCustomEid","setCustomRid","setCustomAttrs","setBizDays","addBizDay","removeBizDay","setTasks","setCustomValueMap","updateData","Provider","_ref","children","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","useCallback","react_default","a","createElement","getCustomVal","task","id","has","Number","get","getTaskSumByUser","items","eid","rid","mapValues","groupBy","getTasksByUser","map","e","r","reduce","result","val","getCustomAttr","find","UserTasks","_useContext","useContext","_useContext$state","_useState","useState","_useState2","setItems","useEffect","asyncToGenerator","regenerator_default","mark","_callee","_ref2","members","wrap","_context","prev","next","axios","sent","data","stop","this","taskSumByUser","customAttrE","customAttrR","unassignedSum","Fragment","className","reactstrap_es","onClick","index_es","icon","faSyncAlt","bordered","name","username","getSumVal","sum","Chart","setData","days_len","allTaskVal","date","filter","moment","endOf","diff","created_date","getTaskCreated","day","idx","label","estimate","finished_date","getTaskFinished","add","local","format","getTaskCreatedToday","ComposedChart","width","height","YAxis","XAxis","dataKey","Tooltip","Bar","fill","stackId","Line","ProjectSelector","statePid","handleChange","target","addonType","onChange","MilestoneSelector","stateMid","params","project","_callee2","_ref4","_context2","headers","x-disable-pagination","milestone","CustomValuesSelector","stateEid","stateRid","_callee3","wmap","_context3","t0","Promise","all","_ref5","custom_attr_val","abrupt","_x","apply","t1","DayItem","bizDay","checked","disabled","biz","isWeekendDay","defaultChecked","includes","for","DaysSelector","_useContext2","_useContext2$state","String","getMilestone","startM","estimated_start","daysInSprint","estimated_finish","times","i","clone","getDays","isWeekDay","DaysSelector_DayItem","toString","Controller","setStateUrl","handleUrl","handleSubmit","preventDefault","onSubmit","defaultValue","placeholder","ProjectSelector_ProjectSelector","MilestoneSelector_MilestoneSelector","CustomValuesSelector_CustomValuesSelector","DaysSelector_DaysSelector","TaskItem","slug","project_extra_info","href","ref","tag","subject","UnSettingTasks","UnSettingTasks_TaskItem","App","Provider_Provider","Controller_Controller","UserTasks_UserTasks","UnSettingTasks_UnSettingTasks","Chart_Chart","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.60ef7812.chunk.js","sourcesContent":["export enum ActionTypes {\n  SET_URL = 'SET_URL',\n  SET_PID = 'SET_PID',\n  SET_MID = 'SET_MID',\n  SET_MILESTONES = 'SET_MILESTONES',\n  SET_CUSTOM_EID = 'SET_CUSTOM_EID',\n  SET_CUSTOM_RID = 'SET_CUSTOM_RID',\n  SET_CUSTOM_ATTRS = 'SET_CUSTOM_ATTRS',\n  SET_BIZ_DAYS = 'SET_BIZ_DAYS',\n  ADD_BIZ_DAY = 'ADD_BIZ_DAY',\n  REMOVE_BIZ_DAY = 'REMOVE_BIZ_DAY',\n  SET_TASKS = 'SET_TASKS',\n  SET_CUSTOM_VALUE_MAP = 'SET_CUSTOM_VALUE_MAP',\n  UPDATE_DATA = 'UPDATE_DATA'\n}\n\nexport interface IAction {\n  type: ActionTypes;\n  payload?: any;\n  meta?: { [key: string]: any };\n}\n","import _ from 'lodash';\nexport interface ICustomAttr {\n  id: number;\n  name: string;\n}\nexport interface IMilestone {\n  id: number;\n  name: string;\n  estimated_start: string;\n  estimated_finish: string;\n}\ninterface IProjectExtraInfo {\n  id: number;\n  name: string;\n  slug: string;\n}\nexport interface ITask {\n  id: number;\n  assigned_to: number | null;\n  created_date: string;\n  finished_date: string;\n  is_closed: boolean;\n  subject: string;\n  ref: number;\n  project_extra_info: IProjectExtraInfo;\n}\nexport interface IAttrValue {}\nexport interface ICustomValue {\n  attributes_values: {\n    [key: number]: string;\n  };\n}\nexport interface IUser {\n  id: number;\n  username: string;\n  full_name: string;\n  full_name_display: string;\n  photo: string;\n}\nexport interface IProject {\n  id: number;\n  name: string;\n  members: IUser[];\n}\nexport type ICustomValueMap = WeakMap<ITask, ICustomValue>;\nexport interface IState {\n  url: string;\n  pid: string; // url\n  mid: string; // url\n  custom_eid: string; //  pid\n  custom_rid: string; // pid\n  custom_attrs: ICustomAttr[]; // pid\n  biz_days: string[]; //mid\n  milestones: IMilestone[]; // pid\n  tasks: ITask[]; //mid\n  custom_value_map: ICustomValueMap; // pid\n  updated_time: number;\n}\n\nexport enum StorageKey {\n  URL = 'taiga_url',\n  PID = 'taiga_pid',\n  MID = 'taiga_mid',\n  CUSTOM_EID = 'taiga_custom_eid',\n  CUSTOM_RID = 'taiga_custom_rid',\n  BIZ_DAYS = 'taiga_biz_days'\n}\n\nexport const getFromStorage = (key: string) => localStorage.getItem(key) || '';\n\nexport const getFromStorageWithSubkey = (key: StorageKey, subkey: string) =>\n  subkey ? getFromStorage(`${subkey}/${key}`) : '';\n\nexport const setToStorage = (key: string, item: string) => {\n  localStorage.setItem(key, item);\n};\nexport const setToStorageWithSubkey = (\n  key: StorageKey,\n  subkey: string,\n  item: string\n) => {\n  subkey ? setToStorage(`${subkey}/${key}`, item) : null;\n};\nexport const initialStateFn = (): IState => {\n  const url = getFromStorage(StorageKey.URL);\n  const pid = getFromStorage(StorageKey.PID);\n  const mid = getFromStorage(StorageKey.MID);\n  const custom_eid = getFromStorageWithSubkey(StorageKey.CUSTOM_EID, pid);\n  const custom_rid = getFromStorageWithSubkey(StorageKey.CUSTOM_RID, pid);\n  const biz_days_str = getFromStorageWithSubkey(StorageKey.BIZ_DAYS, mid);\n  const biz_days = _.compact(biz_days_str.split(',')).sort();\n  return {\n    url,\n    pid,\n    mid,\n    custom_eid,\n    custom_rid,\n    custom_attrs: [],\n    biz_days,\n    milestones: [],\n    tasks: [],\n    custom_value_map: new WeakMap(),\n    updated_time: 0\n  };\n};\n","import _ from 'lodash';\nimport { initialStateFn, IState, StorageKey } from './store';\nimport { ActionTypes, IAction } from './actions';\nimport {\n  setToStorage,\n  setToStorageWithSubkey,\n  getFromStorageWithSubkey\n} from './store';\nexport const reducer = (state = initialStateFn(), action: IAction) => {\n  switch (action.type) {\n    case ActionTypes.SET_URL: {\n      const { url } = action.payload;\n      setToStorage(StorageKey.URL, url);\n      return { ...state, url } as IState;\n    }\n    case ActionTypes.SET_PID: {\n      const { pid } = action.payload;\n      setToStorage(StorageKey.PID, pid);\n      return {\n        ...state,\n        pid,\n        mid: '',\n        custom_eid: getFromStorageWithSubkey(StorageKey.CUSTOM_EID, pid),\n        custom_rid: getFromStorageWithSubkey(StorageKey.CUSTOM_RID, pid),\n        custom_attrs: [],\n        milestones: [],\n        custom_value_map: new WeakMap()\n      } as IState;\n    }\n    case ActionTypes.SET_MID: {\n      const { mid } = action.payload;\n      setToStorage(StorageKey.MID, mid);\n      return {\n        ...state,\n        mid,\n        tasks: [],\n        biz_days: _.compact(\n          getFromStorageWithSubkey(StorageKey.BIZ_DAYS, mid).split(',')\n        ).sort()\n      } as IState;\n    }\n    case ActionTypes.SET_MILESTONES: {\n      const { milestones } = action.payload;\n      return { ...state, milestones } as IState;\n    }\n    case ActionTypes.SET_CUSTOM_EID: {\n      const { custom_eid } = action.payload;\n      setToStorageWithSubkey(StorageKey.CUSTOM_EID, state.pid, custom_eid);\n      return { ...state, custom_eid } as IState;\n    }\n    case ActionTypes.SET_CUSTOM_ATTRS: {\n      const { custom_attrs } = action.payload;\n      return { ...state, custom_attrs } as IState;\n    }\n    case ActionTypes.SET_CUSTOM_RID: {\n      const { custom_rid } = action.payload;\n      setToStorageWithSubkey(StorageKey.CUSTOM_RID, state.pid, custom_rid);\n      return { ...state, custom_rid } as IState;\n    }\n    case ActionTypes.SET_BIZ_DAYS: {\n      const { biz_days } = action.payload;\n      setToStorageWithSubkey(\n        StorageKey.BIZ_DAYS,\n        state.mid,\n        biz_days.join(',')\n      );\n      return { ...state, biz_days } as IState;\n    }\n    case ActionTypes.ADD_BIZ_DAY: {\n      const { biz_day } = action.payload;\n      const biz_days = _.chain([...state.biz_days, biz_day])\n        .uniq()\n        .sort()\n        .value();\n      setToStorageWithSubkey(\n        StorageKey.BIZ_DAYS,\n        state.mid,\n        biz_days.join(',')\n      );\n      return { ...state, biz_days } as IState;\n    }\n    case ActionTypes.REMOVE_BIZ_DAY: {\n      const { biz_day } = action.payload;\n      const biz_days = _.reject([...state.biz_days], item => item === biz_day);\n      setToStorageWithSubkey(\n        StorageKey.BIZ_DAYS,\n        state.mid,\n        biz_days.join(',')\n      );\n      return { ...state, biz_days } as IState;\n    }\n    case ActionTypes.SET_TASKS: {\n      const { tasks } = action.payload;\n      return { ...state, tasks } as IState;\n    }\n    case ActionTypes.SET_CUSTOM_VALUE_MAP: {\n      const { custom_value_map } = action.payload;\n      return { ...state, custom_value_map } as IState;\n    }\n    case ActionTypes.UPDATE_DATA: {\n      return { ...state, updated_time: Date.now() } as IState;\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n","import React, { createContext, useReducer, useCallback } from 'react';\nimport { ActionTypes } from './actions';\nimport {\n  initialStateFn,\n  IMilestone,\n  ICustomAttr,\n  ITask,\n  ICustomValueMap\n} from './store';\nimport { reducer } from './reducer';\nimport _ from 'lodash';\nexport const baseUrl = (url: string) => `${url.replace(/[¥/]$/, '')}/api/v1`;\n\nconst initialState = initialStateFn();\nexport const RootContext = createContext({\n  state: initialState,\n  setUrl: (url: string) => {},\n  setPid: (pid: string) => {},\n  setMid: (mid: string) => {},\n  setMilestones: (milestones: IMilestone[]) => {},\n  setCustomEid: (custom_eid: string) => {},\n  setCustomRid: (custom_rid: string) => {},\n  setCustomAttrs: (custom_attrs: ICustomAttr[]) => {},\n  setBizDays: (biz_days: string[]) => {},\n  addBizDay: (biz_day: string) => {},\n  removeBizDay: (biz_day: string) => {},\n  setTasks: (tasks: ITask[]) => {},\n  setCustomValueMap: (custom_value_map: ICustomValueMap) => {},\n  updateData: () => {}\n});\n\nexport const Provider = ({ children }: { children: React.ReactNode }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = {\n    state,\n    setUrl: useCallback(\n      (url: string) => {\n        dispatch({ type: ActionTypes.SET_URL, payload: { url } });\n      },\n      [dispatch]\n    ),\n    setPid: useCallback(\n      (pid: string) => {\n        dispatch({ type: ActionTypes.SET_PID, payload: { pid } });\n      },\n      [dispatch]\n    ),\n    setMid: useCallback(\n      (mid: string) => {\n        dispatch({ type: ActionTypes.SET_MID, payload: { mid } });\n      },\n      [dispatch]\n    ),\n    setMilestones: useCallback(\n      (milestones: IMilestone[]) => {\n        dispatch({ type: ActionTypes.SET_MILESTONES, payload: { milestones } });\n      },\n      [dispatch]\n    ),\n    setCustomEid: useCallback(\n      (custom_eid: string) => {\n        dispatch({ type: ActionTypes.SET_CUSTOM_EID, payload: { custom_eid } });\n      },\n      [dispatch]\n    ),\n    setCustomRid: useCallback(\n      (custom_rid: string) => {\n        dispatch({ type: ActionTypes.SET_CUSTOM_RID, payload: { custom_rid } });\n      },\n      [dispatch]\n    ),\n    setCustomAttrs: useCallback(\n      (custom_attrs: ICustomAttr[]) => {\n        dispatch({\n          type: ActionTypes.SET_CUSTOM_ATTRS,\n          payload: { custom_attrs }\n        });\n      },\n      [dispatch]\n    ),\n    setBizDays: useCallback(\n      (biz_days: string[]) => {\n        dispatch({ type: ActionTypes.SET_BIZ_DAYS, payload: { biz_days } });\n      },\n      [dispatch]\n    ),\n    addBizDay: useCallback(\n      (biz_day: string) => {\n        dispatch({ type: ActionTypes.ADD_BIZ_DAY, payload: { biz_day } });\n      },\n      [dispatch]\n    ),\n    removeBizDay: useCallback(\n      (biz_day: string) => {\n        dispatch({ type: ActionTypes.REMOVE_BIZ_DAY, payload: { biz_day } });\n      },\n      [dispatch]\n    ),\n    setTasks: useCallback(\n      (tasks: ITask[]) => {\n        dispatch({ type: ActionTypes.SET_TASKS, payload: { tasks } });\n      },\n      [dispatch]\n    ),\n    setCustomValueMap: useCallback(\n      (custom_value_map: ICustomValueMap) => {\n        dispatch({\n          type: ActionTypes.SET_CUSTOM_VALUE_MAP,\n          payload: { custom_value_map }\n        });\n      },\n      [dispatch]\n    ),\n    updateData: useCallback(\n      () => {\n        dispatch({\n          type: ActionTypes.UPDATE_DATA\n        });\n      },\n      [dispatch]\n    )\n  };\n  return <RootContext.Provider value={value}>{children}</RootContext.Provider>;\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { ICustomValueMap, IProject, IUser, ITask, ICustomAttr } from './store';\nimport { RootContext, baseUrl } from './Provider';\nimport { Table, Button } from 'reactstrap';\nimport _ from 'lodash';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSyncAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst getTasksByUser = (items: ITask[]) => _.groupBy(items, 'assigned_to');\nexport const getCustomVal = (\n  custom_value_map: ICustomValueMap,\n  task: ITask,\n  id: number\n) => {\n  if (custom_value_map.has(task)) {\n    return Number(\n      _.get(custom_value_map.get(task), `attributes_values.${id}`, '0').replace(\n        /[^0-9.]/g,\n        ''\n      )\n    );\n  } else {\n    return 0;\n  }\n};\n\nconst getTaskSumByUser = (\n  items: ITask[],\n  custom_value_map: ICustomValueMap,\n  custom_eid: string,\n  custom_rid: string\n) => {\n  const eid = Number(custom_eid);\n  const rid = Number(custom_rid);\n  const tasksByUser = _.mapValues(getTasksByUser(items), tasks =>\n    _.chain(tasks)\n      .map(task => ({\n        e: getCustomVal(custom_value_map, task, eid),\n        r: getCustomVal(custom_value_map, task, rid)\n      }))\n      .reduce((result, val) => ({ e: result.e + val.e, r: result.r + val.r }), {\n        e: 0,\n        r: 0\n      })\n      .value()\n  );\n  return tasksByUser;\n};\nconst getCustomAttr = (items: ICustomAttr[], id: number) =>\n  items.find(item => item.id === id);\nexport const UserTasks = () => {\n  const {\n    state: {\n      url,\n      pid,\n      tasks,\n      custom_value_map,\n      custom_attrs,\n      custom_eid,\n      custom_rid\n    },\n    updateData\n  } = useContext(RootContext);\n  const [items, setItems] = useState<IUser[]>([]);\n  useEffect(\n    () => {\n      if (url && pid) {\n        (async () => {\n          const {\n            data: { members }\n          } = await axios.get<IProject>(`${baseUrl(url)}/projects/${pid}`);\n          setItems(members);\n        })();\n      }\n    },\n    [url, pid, setItems]\n  );\n  const taskSumByUser = getTaskSumByUser(\n    tasks,\n    custom_value_map,\n    custom_eid,\n    custom_rid\n  );\n  const customAttrE = getCustomAttr(custom_attrs, Number(custom_eid));\n  const customAttrR = getCustomAttr(custom_attrs, Number(custom_rid));\n  if (!customAttrE || !customAttrR) {\n    return null;\n  }\n  const unassignedSum = _.get(taskSumByUser, 'null.e', 0);\n  return (\n    <>\n      <div className=\"text-right\">\n        <Button onClick={updateData}>\n          <FontAwesomeIcon icon={faSyncAlt} />\n        </Button>\n      </div>\n      <Table bordered>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>{customAttrE.name}</th>\n            <th>{customAttrR.name}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map(item => (\n            <tr key={item.id}>\n              <td>{item.username}</td>\n              <td className=\"text-right\">\n                {_.get(taskSumByUser, `${item.id}.e`)}\n              </td>\n              <td className=\"text-right\">\n                {_.get(taskSumByUser, `${item.id}.r`)}\n              </td>\n            </tr>\n          ))}\n          <tr key=\"null\">\n            <td>unassigned</td>\n            <td className=\"text-right text-danger\">{unassignedSum}</td>\n            <td />\n          </tr>\n        </tbody>\n      </Table>\n    </>\n  );\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport {\n  ComposedChart,\n  Tooltip,\n  Legend,\n  Line,\n  XAxis,\n  YAxis,\n  Bar\n} from 'recharts';\nimport { ITask, ICustomValueMap } from './store';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { RootContext } from './Provider';\nimport { getCustomVal } from './UserTasks';\nimport { Card, CardHeader } from 'reactstrap';\ninterface IChartItem {\n  label: string;\n  estimate: number;\n  result?: number;\n  add?: number;\n}\n\nconst getTaskFinished = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      task.finished_date\n        ? moment(date).diff(moment(task.finished_date)) > 0\n        : false\n  );\n\nconst getTaskCreatedToday = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      moment(date)\n        .local()\n        .format('YYYY-MM-DD') ===\n      moment(task.created_date)\n        .local()\n        .format('YYYY-MM-DD')\n  );\n\nconst getTaskCreated = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      moment(date)\n        .endOf('days')\n        .diff(moment(task.created_date)) > 0\n  );\n\nconst getSumVal = (\n  custom_value_map: ICustomValueMap,\n  tasks: ITask[],\n  custom_eid: string\n) => {\n  return _.chain(tasks)\n    .map(task => getCustomVal(custom_value_map, task, Number(custom_eid)))\n    .sum()\n    .value();\n};\nexport const Chart = () => {\n  const [data, setData] = useState<IChartItem[]>([]);\n  const {\n    state: { tasks, biz_days, custom_value_map, custom_eid }\n  } = useContext(RootContext);\n  useEffect(\n    () => {\n      const days_len = biz_days.length;\n      if (days_len > 0 && tasks.length > 0 && custom_eid) {\n        const allTaskVal = getSumVal(\n          custom_value_map,\n          getTaskCreated(tasks, biz_days[0]),\n          custom_eid\n        );\n        const data = biz_days.map((day, idx) => {\n          const label = `day ${idx + 1}`;\n          const estimate = allTaskVal - (allTaskVal * idx) / (days_len - 1);\n          if (moment().diff(moment(day), 'days') >= 0) {\n            const result =\n              allTaskVal -\n              getSumVal(\n                custom_value_map,\n                getTaskFinished(tasks, day),\n                custom_eid\n              );\n            const add =\n              idx === 0\n                ? 0\n                : getSumVal(\n                    custom_value_map,\n                    getTaskCreatedToday(tasks, day),\n                    custom_eid\n                  );\n            return { label, estimate, result, add };\n          } else {\n            return { label, estimate };\n          }\n        });\n        setData(data);\n      } else {\n        setData([]);\n      }\n    },\n    [tasks, biz_days, custom_eid, custom_value_map, setData]\n  );\n  if (data.length === 0) {\n    return null;\n  } else {\n    return (\n      <Card>\n        <CardHeader>Burn down chart</CardHeader>\n        <ComposedChart data={data} width={800} height={400}>\n          <YAxis />\n          <XAxis dataKey=\"label\" />\n          <Tooltip />\n          <Bar dataKey=\"result\" fill=\"#8884d8\" stackId=\"a\" />\n          <Bar dataKey=\"add\" fill=\"#82ca9d\" stackId=\"a\" />\n          <Line dataKey=\"estimate\" />\n        </ComposedChart>\n      </Card>\n    );\n  }\n};\n","import React, { useCallback, useEffect, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { Input, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { RootContext, baseUrl } from './Provider';\nimport { IProject } from './store';\nexport const ProjectSelector = () => {\n  const {\n    state: { url, pid: statePid },\n    setPid\n  } = useContext(RootContext);\n  const [items, setItems] = useState<IProject[]>([]);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const pid = e.target.value;\n      if (pid) {\n        setPid(pid);\n      }\n    },\n    [setPid]\n  );\n  useEffect(\n    () => {\n      if (url) {\n        (async () => {\n          const { data: items } = await axios.get(`${baseUrl(url)}/projects`);\n          setItems(items);\n        })();\n      }\n    },\n    [url, setItems]\n  );\n\n  return (\n    <InputGroup className=\"col\">\n      <InputGroupAddon addonType=\"prepend\">Project</InputGroupAddon>\n      <Input value={statePid} type=\"select\" onChange={handleChange}>\n        <option value=\"\"> --- </option>\n        {items.map(item => (\n          <option key={item.id} value={item.id}>\n            {item.name}\n          </option>\n        ))}\n      </Input>\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useEffect, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { Input, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { RootContext, baseUrl } from './Provider';\nimport { IMilestone } from './store';\n\nexport const MilestoneSelector = () => {\n  const {\n    state: { url, pid, mid: stateMid, updated_time },\n    setMid,\n    setMilestones,\n    setTasks\n  } = useContext(RootContext);\n  const [items, setItems] = useState<IMilestone[]>([]);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        setMid(id);\n      }\n    },\n    [setMid, items]\n  );\n  useEffect(\n    () => {\n      if (url && pid) {\n        (async () => {\n          const { data: items } = await axios.get(\n            `${baseUrl(url)}/milestones`,\n            { params: { project: pid } }\n          );\n          setItems(items);\n          setMilestones(items);\n        })();\n      }\n    },\n    [url, pid]\n  );\n  useEffect(\n    () => {\n      if (url && stateMid) {\n        (async () => {\n          const { data: items } = await axios.get(`${baseUrl(url)}/tasks`, {\n            headers: {\n              'x-disable-pagination': true\n            },\n            params: {\n              milestone: stateMid\n            }\n          });\n          setTasks(items);\n        })();\n      }\n    },\n    [url, stateMid, updated_time]\n  );\n\n  return (\n    <InputGroup className=\"col\">\n      <InputGroupAddon addonType=\"prepend\">Sprint</InputGroupAddon>\n      <Input type=\"select\" value={stateMid} onChange={handleChange}>\n        <option value=\"\"> --- </option>\n        {items.map(item => (\n          <option key={item.id} value={item.id}>\n            {item.name}\n          </option>\n        ))}\n      </Input>\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useEffect, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { Input, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { ITask, ICustomValue, ICustomAttr } from './store';\nimport { RootContext, baseUrl } from './Provider';\n\nexport const CustomValuesSelector = () => {\n  const {\n    state: { url, pid, custom_eid: stateEid, custom_rid: stateRid, tasks },\n    setCustomEid,\n    setCustomRid,\n    setCustomAttrs,\n    setCustomValueMap\n  } = useContext(RootContext);\n  const [items, setItems] = useState<ICustomAttr[]>([]);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        switch (e.target.name) {\n          case 'eid': {\n            setCustomEid(id);\n            break;\n          }\n          case 'rid': {\n            setCustomRid(id);\n            break;\n          }\n        }\n      }\n    },\n    [setCustomEid, setCustomRid]\n  );\n  useEffect(\n    () => {\n      if (url && pid) {\n        (async () => {\n          const { data: items } = await axios.get(\n            `${baseUrl(url)}/task-custom-attributes`,\n            { params: { project: pid } }\n          );\n          setItems(items);\n          setCustomAttrs(items);\n        })();\n      }\n    },\n    [url, pid, setItems, setCustomAttrs]\n  );\n  useEffect(\n    () => {\n      if (url && tasks.length && stateEid && stateRid) {\n        (async () => {\n          const wmap = new WeakMap(\n            await Promise.all(\n              tasks.map(async item => {\n                const { data: custom_attr_val } = await axios.get(\n                  `${baseUrl(url)}/tasks/custom-attributes-values/${item.id}`\n                );\n                return [item, custom_attr_val] as [ITask, ICustomValue];\n              })\n            )\n          );\n          setCustomValueMap(wmap);\n        })();\n      }\n    },\n    [url, tasks, stateEid, stateRid, setCustomValueMap]\n  );\n\n  return (\n    <div className=\"row\">\n      <InputGroup className=\"col\">\n        <InputGroupAddon addonType=\"prepend\">Estimate</InputGroupAddon>\n        <Input\n          value={stateEid}\n          name=\"eid\"\n          type=\"select\"\n          onChange={handleChange}\n        >\n          <option value=\"\"> --- </option>\n          {items.map(item => (\n            <option key={item.id} value={item.id}>\n              {item.name}\n            </option>\n          ))}\n        </Input>\n      </InputGroup>\n      <InputGroup className=\"col\">\n        <InputGroupAddon addonType=\"prepend\">Result</InputGroupAddon>\n        <Input\n          value={stateRid}\n          name=\"rid\"\n          type=\"select\"\n          onChange={handleChange}\n        >\n          <option> --- </option>\n          {items.map(item => (\n            <option key={item.id} value={item.id}>\n              {item.name}\n            </option>\n          ))}\n        </Input>\n      </InputGroup>\n    </div>\n  );\n};\n","import React, { useEffect, useState, useContext, useCallback } from 'react';\nimport { Input, Label } from 'reactstrap';\nimport { IMilestone } from './store';\nimport { RootContext } from './Provider';\nimport moment, { Moment } from 'moment';\nimport biz from 'moment-business';\nimport _ from 'lodash';\nconst getMilestone = (mid: string, items: IMilestone[]) =>\n  items.find(item => String(item.id) === mid);\nconst getDays = (item: IMilestone) => {\n  const startM = moment(item.estimated_start).local();\n  const finishM = moment(item.estimated_finish).local();\n  const daysInSprint = finishM.diff(startM, 'days');\n  return _.times(daysInSprint).map(i => startM.clone().add(i, 'days'));\n};\nconst getDefaultBizDays = (items: Moment[]) =>\n  items\n    .filter(item => biz.isWeekDay(item))\n    .map(item => item.format('YYYY-MM-DD'));\n\nconst DayItem = ({ item, biz_days }: { item: Moment; biz_days: string[] }) => {\n  const { addBizDay, removeBizDay } = useContext(RootContext);\n  const value = item.format('YYYY-MM-DD');\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const bizDay = e.target.value;\n      e.target.checked ? addBizDay(bizDay) : removeBizDay(bizDay);\n    },\n    [addBizDay, removeBizDay]\n  );\n  return (\n    <div className=\"form-check form-check-inline\">\n      <Input\n        onChange={handleChange}\n        disabled={biz.isWeekendDay(item)}\n        id={value}\n        value={value}\n        type=\"checkbox\"\n        defaultChecked={_.includes(biz_days, value)}\n        className=\"form-check-input\"\n      />\n      <Label className=\"form-check-label\" for={value}>\n        {value}\n      </Label>\n    </div>\n  );\n};\nexport const DaysSelector = () => {\n  const {\n    state: { mid, milestones, biz_days },\n    setBizDays\n  } = useContext(RootContext);\n  const [items, setItems] = useState<Moment[]>([]);\n  useEffect(\n    () => {\n      const milestone = getMilestone(mid, milestones);\n      if (milestone) {\n        const items = getDays(milestone);\n        setItems(items);\n        if (biz_days.length <= 1) {\n          setBizDays(getDefaultBizDays(items));\n        }\n      }\n    },\n    [mid, milestones, biz_days]\n  );\n  if (items.length === 0) {\n    return null;\n  } else {\n    return (\n      <>\n        {items.map(item => (\n          <DayItem key={item.toString()} item={item} biz_days={biz_days} />\n        ))}\n      </>\n    );\n  }\n};\n","import React, { useContext, useState, useCallback } from 'react';\nimport { RootContext } from './Provider';\nimport { Form, Input, InputGroup, InputGroupAddon, Button } from 'reactstrap';\nimport { ProjectSelector } from './ProjectSelector';\nimport { MilestoneSelector } from './MilestoneSelector';\nimport { CustomValuesSelector } from './CustomValuesSelector';\nimport { DaysSelector } from './DaysSelector';\nexport const Controller = () => {\n  const { state, setUrl } = useContext(RootContext);\n  const [url, setStateUrl] = useState('');\n  const handleUrl = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setStateUrl(e.target.value);\n    },\n    [setStateUrl]\n  );\n  const handleSubmit = useCallback(\n    (e: React.FormEvent) => {\n      if (url) {\n        setUrl(url);\n      }\n      e.preventDefault();\n    },\n    [url, setUrl]\n  );\n  return (\n    <Form onSubmit={handleSubmit}>\n      <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">URL</InputGroupAddon>\n        <Input\n          defaultValue={state.url}\n          onChange={handleUrl}\n          placeholder=\"http://hostname:port\"\n        />\n        <InputGroupAddon addonType=\"append\">\n          <Button>Set</Button>\n        </InputGroupAddon>\n      </InputGroup>\n      <div className=\"row\">\n        <ProjectSelector />\n        <MilestoneSelector />\n      </div>\n      <CustomValuesSelector />\n      <DaysSelector />\n    </Form>\n  );\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport { RootContext } from './Provider';\nimport { ITask } from './store';\nimport { ListGroup, ListGroupItem, Card, CardHeader } from 'reactstrap';\nimport { getCustomVal } from './UserTasks';\nconst TaskItem = ({ url, item }: { item: ITask; url: string }) => {\n  const {\n    project_extra_info: { slug }\n  } = item;\n  const href = `${url}/project/${slug}/task/${item.ref}`;\n  return (\n    <ListGroupItem tag=\"a\" target=\"_blank\" href={href}>\n      {item.subject}\n    </ListGroupItem>\n  );\n};\nexport const UnSettingTasks = () => {\n  const {\n    state: { url, tasks, custom_value_map, custom_eid }\n  } = useContext(RootContext);\n  const [items, setItems] = useState<ITask[]>([]);\n  useEffect(\n    () => {\n      if (tasks.length > 0 && custom_eid) {\n        const eid = Number(custom_eid);\n        const items = tasks.filter(\n          task => getCustomVal(custom_value_map, task, eid) === 0\n        );\n        if (tasks.length > items.length) {\n          setItems(items);\n        }\n      }\n    },\n    [tasks, custom_value_map, custom_eid]\n  );\n  if (items.length === 0) {\n    return null;\n  } else {\n    return (\n      <Card>\n        <CardHeader>Unsetting tasks</CardHeader>\n        <ListGroup>\n          {items.map(item => (\n            <TaskItem url={url} key={item.id} item={item} />\n          ))}\n        </ListGroup>\n      </Card>\n    );\n  }\n};\n","import React from 'react';\nimport { Chart } from './Chart';\nimport { Controller } from './Controller';\nimport { UserTasks } from './UserTasks';\nimport { UnSettingTasks } from './UnSettingTasks';\nimport { Provider } from './Provider';\nexport const App = () => (\n  <div className=\"container\">\n    <Provider>\n      <Controller />\n      <UserTasks />\n      <UnSettingTasks />\n      <Chart />\n    </Provider>\n  </div>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}