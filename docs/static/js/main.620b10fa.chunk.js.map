{"version":3,"sources":["Controller.module.css","actions.ts","store.ts","reducer.ts","Provider.tsx","DaysSelector.tsx","UserTasks.tsx","Chart.tsx","ProjectSelector.tsx","MilestoneSelector.tsx","CustomValuesSelector.tsx","TaskStatusSelector.tsx","Controller.tsx","UnEstimatedTasks.tsx","App.tsx","serviceWorker.ts","index.tsx","UserTasks.module.css"],"names":["module","exports","header","ActionTypes","StorageKey","getFromStorage","key","localStorage","getItem","getFromStorageWithSubkey","subkey","concat","setToStorage","item","setItem","setToStorageWithSubkey","initialStateFn","url","URL","pid","PID","mid","MID","custom_eid","CUSTOM_EID","custom_rid","CUSTOM_RID","biz_days_str","BIZ_DAYS","biz_days","_","compact","split","sort","reject_task_status_ids","REJECT_TASK_STATUS_IDS","isOpen","custom_attrs","milestones","tasks","task_status","custom_value_map","WeakMap","updated_time","reducer","state","arguments","length","undefined","action","type","SET_URL","payload","Object","objectSpread","SET_PID","SET_MID","SET_MILESTONES","SET_CUSTOM_EID","SET_CUSTOM_ATTRS","SET_CUSTOM_RID","SET_BIZ_DAYS","join","ADD_BIZ_DAY","biz_day","chain","toConsumableArray","uniq","value","REMOVE_BIZ_DAY","reject","SET_TASKS","SET_TASK_STATUS","SET_CUSTOM_VALUE_MAP","SET_REJECT_TASK_STATUS_IDS","ADD_REJECT_TASK_STATUS_ID","reject_task_status_id","REMOVE_REJECT_TASK_STATUS_ID","OPEN_CONTROLLER","CLOSE_CONTROLLER","UPDATE_DATA","Date","now","baseUrl","replace","initialState","RootContext","createContext","setUrl","setPid","setMid","setMilestones","setCustomEid","setCustomRid","setCustomAttrs","setBizDays","addBizDay","removeBizDay","setTasks","setTaskStatus","setCustomValueMap","toggeRejectTaskStatus","task_status_id","is_reject","openController","closeController","updateData","Provider","_ref","children","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","useCallback","react_default","a","createElement","dayNameFromIdx","date","idx","getMilestone","items","find","String","id","weekClassName","day","text-danger","text-info","DayItem","_useContext","useContext","format","handleChange","e","bizDay","target","checked","isPlanning","eleId","Fragment","className","classNames","table-info","biz","isWeekDay","FormGroup","check","inline","Label","Input","onChange","disabled","isWeekendDay","includes","UncontrolledTooltip","indexOf","dayName","DaysSelector","_useContext2","_useContext2$state","_useState","useState","_useState2","setItems","useEffect","milestone","startM","moment","estimated_start","local","daysInSprint","estimated_finish","diff","times","map","i","clone","add","getDays","filter","weekdays","chunk","Card","CardHeader","Table","bordered","days","DaysSelector_DayItem","barStyles","getTasksByUser","groupBy","getCustomVal","task","has","val","get","Number","sum","NameAndWorkLoad","username","total","imgSrc","styles","avator","src","icon","tblCls","faGrinBeam","faGrinBeamSweat","faDizzy","index_es","Medal","_ref2","_getGrade","r","isNumber","Math","abs","getGrade","_getGrade2","grade","num","faMedal","UserRow","_ref3","sums","isPast","hpd","closedTasks","_useContext$state","customTotal","setTotal","_useState3","_useState4","progressTotal","setProgressTotal","sumItem","margedTotal","totalStr","photo","random","closed_status","is_closed","orderBy","reverse","closedTotals","mapValues","ts","reduce","result","t","status","label","status_extra_info","name","style","sortedTotals","UserTasks_NameAndWorkLoad","custom_input_td","bsSize","step","Progress","multi","bar","color","max","UserTasks_Medal","getCustomAttr","UserTasks","_useState5","_useState6","_useState7","_useState8","setHpd","_useState9","_useState10","activeLen","asyncToGenerator","regenerator_default","mark","_callee","_ref5","members","wrap","_context","prev","next","axios","sent","data","stop","this","disableSubmit","preventDefault","stopPropagation","taskSumByUser","eid","rid","getTaskSumByUser","customAttrE","customAttrR","unassignedSum","last","endOf","tasksByUser","getClosedTasks","Navbar","light","Form","onSubmit","InputGroup","placeholder","InputGroupAddon","addonType","InputGroupText","faTimes","faEquals","Button","onClick","faSyncAlt","UserTasks_UserRow","getSumVal","Chart","setData","days_len","allTaskVal","created_date","getTaskCreated","estimate","finished_date","getTaskFinished","getTaskCreatedToday","es6","width","height","dataKey","fill","stackId","ProjectSelector","statePid","MilestoneSelector","stateMid","params","project","_callee2","_ref4","_context2","headers","x-disable-pagination","CustomValuesSelector","stateEid","stateRid","_callee3","wmap","_context3","t0","Promise","all","custom_attr_val","abrupt","_x","apply","t1","StatusItem","defaultChecked","TaskStatusSelector","CardBody","TaskStatusSelector_StatusItem","Controller","stateUrl","setStateUrl","handleUrl","handleSubmit","handleHref","rotation","toggle","taskboardUrl","project_extra_info","slug","getTaskboardUrl","faChevronCircleRight","Badge","pill","getSpName","head","getRange","href","faExternalLinkAlt","Collapse","defaultValue","ProjectSelector_ProjectSelector","MilestoneSelector_MilestoneSelector","CustomValuesSelector_CustomValuesSelector","DaysSelector_DaysSelector","TaskStatusSelector_TaskStatusSelector","TaskItem","ref","ListGroupItem","tag","subject","UnEstimatedTasks","ListGroup","UnEstimatedTasks_TaskItem","App","Provider_Provider","Controller_Controller","UserTasks_UserTasks","UnEstimatedTasks_UnEstimatedTasks","Chart_Chart","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","gold","silver","bronze"],"mappings":"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","file":"static/js/main.620b10fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Controller_header__3vMNd\"};","export enum ActionTypes {\n  SET_URL = \"SET_URL\",\n  SET_PID = \"SET_PID\",\n  SET_MID = \"SET_MID\",\n  SET_MILESTONES = \"SET_MILESTONES\",\n  SET_CUSTOM_EID = \"SET_CUSTOM_EID\",\n  SET_CUSTOM_RID = \"SET_CUSTOM_RID\",\n  SET_CUSTOM_ATTRS = \"SET_CUSTOM_ATTRS\",\n  SET_BIZ_DAYS = \"SET_BIZ_DAYS\",\n  ADD_BIZ_DAY = \"ADD_BIZ_DAY\",\n  REMOVE_BIZ_DAY = \"REMOVE_BIZ_DAY\",\n  SET_TASKS = \"SET_TASKS\",\n  SET_TASK_STATUS = \"SET_TASK_STATUS\",\n  SET_CUSTOM_VALUE_MAP = \"SET_CUSTOM_VALUE_MAP\",\n  SET_REJECT_TASK_STATUS_IDS = \"SET_REJECT_TASK_STATUS_IDS\",\n  ADD_REJECT_TASK_STATUS_ID = \"ADD_REJECT_TASK_STATUS\",\n  REMOVE_REJECT_TASK_STATUS_ID = \"REMOVE_REJECT_TASK_STATUS\",\n  OPEN_CONTROLLER = \"OPEN_CONTROLLER\",\n  CLOSE_CONTROLLER = \"CLOSE_CONTROLLER\",\n  UPDATE_DATA = \"UPDATE_DATA\"\n}\n\nexport interface IAction {\n  type: ActionTypes;\n  payload?: any;\n  meta?: { [key: string]: any };\n}\n","import _ from \"lodash\";\nexport interface ICustomAttr {\n  id: number;\n  name: string;\n}\nexport interface IMilestone {\n  id: number;\n  name: string;\n  estimated_start: string;\n  estimated_finish: string;\n  slug: string;\n  project: number;\n  project_extra_info: IProjectExtraInfo;\n}\ninterface IProjectExtraInfo {\n  id: number;\n  name: string;\n  slug: string;\n}\ninterface IStatusExtraInfo {\n  name: string;\n  is_closed: boolean;\n}\nexport interface ITask {\n  id: number;\n  assigned_to: number | null;\n  created_date: string;\n  finished_date: string;\n  is_closed: boolean;\n  subject: string;\n  ref: number;\n  project: number;\n  project_extra_info: IProjectExtraInfo;\n  status: number;\n  status_extra_info: IStatusExtraInfo;\n}\nexport interface ITaskStatus {\n  id: number;\n  name: string;\n  order: number;\n  project: number;\n  is_closed: boolean;\n  slug: string;\n}\nexport interface IAttrValue {}\nexport interface ICustomValue {\n  attributes_values: {\n    [key: number]: string;\n  };\n}\nexport interface IUser {\n  id: number;\n  username: string;\n  full_name: string;\n  full_name_display: string;\n  photo: string;\n}\nexport interface IProject {\n  id: number;\n  name: string;\n  members: IUser[];\n}\nexport type ICustomValueMap = WeakMap<ITask, ICustomValue>;\nexport interface IState {\n  url: string;\n  pid: string; // url\n  mid: string; // url\n  custom_eid: string; //  pid\n  custom_rid: string; // pid\n  custom_attrs: ICustomAttr[]; // pid\n  biz_days: string[]; //mid\n  milestones: IMilestone[]; // pid\n  tasks: ITask[]; //mid\n  task_status: ITaskStatus[];\n  custom_value_map: ICustomValueMap; // pid\n  reject_task_status_ids: string[]; // pid\n  updated_time: number;\n  isOpen: boolean;\n}\n\nexport enum StorageKey {\n  URL = \"taiga_url\",\n  PID = \"taiga_pid\",\n  MID = \"taiga_mid\",\n  CUSTOM_EID = \"taiga_custom_eid\",\n  CUSTOM_RID = \"taiga_custom_rid\",\n  BIZ_DAYS = \"taiga_biz_days\",\n  REJECT_TASK_STATUS_IDS = \"reject_task_status_ids\"\n}\n\nexport const getFromStorage = (key: string) => localStorage.getItem(key) || \"\";\n\nexport const getFromStorageWithSubkey = (key: StorageKey, subkey: string) =>\n  subkey ? getFromStorage(`${subkey}/${key}`) : \"\";\n\nexport const setToStorage = (key: string, item: string) => {\n  localStorage.setItem(key, item);\n};\nexport const setToStorageWithSubkey = (\n  key: StorageKey,\n  subkey: string,\n  item: string\n) => {\n  subkey ? setToStorage(`${subkey}/${key}`, item) : null;\n};\nexport const initialStateFn = (): IState => {\n  const url = getFromStorage(StorageKey.URL);\n  const pid = getFromStorage(StorageKey.PID);\n  const mid = getFromStorage(StorageKey.MID);\n  const custom_eid = getFromStorageWithSubkey(StorageKey.CUSTOM_EID, pid);\n  const custom_rid = getFromStorageWithSubkey(StorageKey.CUSTOM_RID, pid);\n  const biz_days_str = getFromStorageWithSubkey(StorageKey.BIZ_DAYS, mid);\n  const biz_days = _.compact(biz_days_str.split(\",\")).sort();\n  const reject_task_status_ids = _.compact(\n    getFromStorageWithSubkey(StorageKey.REJECT_TASK_STATUS_IDS, pid).split(\",\")\n  );\n  const isOpen = !(url && pid && mid && custom_eid && custom_rid);\n  return {\n    url,\n    pid,\n    mid,\n    custom_eid,\n    custom_rid,\n    custom_attrs: [],\n    biz_days,\n    milestones: [],\n    tasks: [],\n    task_status: [],\n    custom_value_map: new WeakMap(),\n    reject_task_status_ids,\n    updated_time: 0,\n    isOpen\n  };\n};\n","import _ from \"lodash\";\nimport { initialStateFn, IState, StorageKey } from \"./store\";\nimport { ActionTypes, IAction } from \"./actions\";\nimport {\n  setToStorage,\n  setToStorageWithSubkey,\n  getFromStorageWithSubkey\n} from \"./store\";\nexport const reducer = (state = initialStateFn(), action: IAction) => {\n  switch (action.type) {\n    case ActionTypes.SET_URL: {\n      const { url } = action.payload;\n      setToStorage(StorageKey.URL, url);\n      return { ...state, url } as IState;\n    }\n    case ActionTypes.SET_PID: {\n      const { pid } = action.payload;\n      setToStorage(StorageKey.PID, pid);\n      return {\n        ...state,\n        pid,\n        mid: \"\",\n        custom_eid: getFromStorageWithSubkey(StorageKey.CUSTOM_EID, pid),\n        custom_rid: getFromStorageWithSubkey(StorageKey.CUSTOM_RID, pid),\n        custom_attrs: [],\n        milestones: [],\n        custom_value_map: new WeakMap()\n      } as IState;\n    }\n    case ActionTypes.SET_MID: {\n      const { mid } = action.payload;\n      setToStorage(StorageKey.MID, mid);\n      return {\n        ...state,\n        mid,\n        tasks: [],\n        biz_days: _.compact(\n          getFromStorageWithSubkey(StorageKey.BIZ_DAYS, mid).split(\",\")\n        ).sort()\n      } as IState;\n    }\n    case ActionTypes.SET_MILESTONES: {\n      const { milestones } = action.payload;\n      return { ...state, milestones } as IState;\n    }\n    case ActionTypes.SET_CUSTOM_EID: {\n      const { custom_eid } = action.payload;\n      setToStorageWithSubkey(StorageKey.CUSTOM_EID, state.pid, custom_eid);\n      return { ...state, custom_eid } as IState;\n    }\n    case ActionTypes.SET_CUSTOM_ATTRS: {\n      const { custom_attrs } = action.payload;\n      return { ...state, custom_attrs } as IState;\n    }\n    case ActionTypes.SET_CUSTOM_RID: {\n      const { custom_rid } = action.payload;\n      setToStorageWithSubkey(StorageKey.CUSTOM_RID, state.pid, custom_rid);\n      return { ...state, custom_rid } as IState;\n    }\n    case ActionTypes.SET_BIZ_DAYS: {\n      const { biz_days } = action.payload;\n      setToStorageWithSubkey(\n        StorageKey.BIZ_DAYS,\n        state.mid,\n        biz_days.join(\",\")\n      );\n      return { ...state, biz_days } as IState;\n    }\n    case ActionTypes.ADD_BIZ_DAY: {\n      const { biz_day } = action.payload;\n      const biz_days = _.chain([...state.biz_days, biz_day])\n        .uniq()\n        .sort()\n        .value();\n      setToStorageWithSubkey(\n        StorageKey.BIZ_DAYS,\n        state.mid,\n        biz_days.join(\",\")\n      );\n      return { ...state, biz_days } as IState;\n    }\n    case ActionTypes.REMOVE_BIZ_DAY: {\n      const { biz_day } = action.payload;\n      const biz_days = _.reject([...state.biz_days], item => item === biz_day);\n      setToStorageWithSubkey(\n        StorageKey.BIZ_DAYS,\n        state.mid,\n        biz_days.join(\",\")\n      );\n      return { ...state, biz_days } as IState;\n    }\n    case ActionTypes.SET_TASKS: {\n      const { tasks } = action.payload;\n      return { ...state, tasks } as IState;\n    }\n    case ActionTypes.SET_TASK_STATUS: {\n      const { task_status } = action.payload;\n      return { ...state, task_status } as IState;\n    }\n    case ActionTypes.SET_CUSTOM_VALUE_MAP: {\n      const { custom_value_map } = action.payload;\n      return { ...state, custom_value_map } as IState;\n    }\n    case ActionTypes.SET_REJECT_TASK_STATUS_IDS: {\n      const { reject_task_status_ids } = action.payload;\n      setToStorageWithSubkey(\n        StorageKey.REJECT_TASK_STATUS_IDS,\n        state.pid,\n        reject_task_status_ids.join(\",\")\n      );\n      return { ...state, reject_task_status_ids } as IState;\n    }\n    case ActionTypes.ADD_REJECT_TASK_STATUS_ID: {\n      const { reject_task_status_id } = action.payload;\n      const reject_task_status_ids = _.chain([\n        ...state.reject_task_status_ids,\n        reject_task_status_id\n      ])\n        .compact()\n        .uniq()\n        .value();\n      setToStorageWithSubkey(\n        StorageKey.REJECT_TASK_STATUS_IDS,\n        state.pid,\n        reject_task_status_ids.join(\",\")\n      );\n      return { ...state, reject_task_status_ids } as IState;\n    }\n    case ActionTypes.REMOVE_REJECT_TASK_STATUS_ID: {\n      const { reject_task_status_id } = action.payload;\n      const reject_task_status_ids = _.reject(\n        [...state.reject_task_status_ids],\n        item => item === reject_task_status_id\n      );\n      setToStorageWithSubkey(\n        StorageKey.REJECT_TASK_STATUS_IDS,\n        state.pid,\n        reject_task_status_ids.join(\",\")\n      );\n      return { ...state, reject_task_status_ids } as IState;\n    }\n    case ActionTypes.OPEN_CONTROLLER: {\n      return { ...state, isOpen: true } as IState;\n    }\n    case ActionTypes.CLOSE_CONTROLLER: {\n      return { ...state, isOpen: false } as IState;\n    }\n    case ActionTypes.UPDATE_DATA: {\n      return { ...state, updated_time: Date.now() } as IState;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import React, { createContext, useReducer, useCallback } from \"react\";\nimport { ActionTypes } from \"./actions\";\nimport {\n  initialStateFn,\n  IMilestone,\n  ICustomAttr,\n  ITask,\n  ICustomValueMap,\n  ITaskStatus\n} from \"./store\";\nimport { reducer } from \"./reducer\";\nimport _ from \"lodash\";\nexport const baseUrl = (url: string) => `${url.replace(/[¥/]$/, \"\")}/api/v1`;\n\nconst initialState = initialStateFn();\nexport const RootContext = createContext({\n  state: initialState,\n  setUrl: (url: string) => {},\n  setPid: (pid: string) => {},\n  setMid: (mid: string) => {},\n  setMilestones: (milestones: IMilestone[]) => {},\n  setCustomEid: (custom_eid: string) => {},\n  setCustomRid: (custom_rid: string) => {},\n  setCustomAttrs: (custom_attrs: ICustomAttr[]) => {},\n  setBizDays: (biz_days: string[]) => {},\n  addBizDay: (biz_day: string) => {},\n  removeBizDay: (biz_day: string) => {},\n  setTasks: (tasks: ITask[]) => {},\n  setTaskStatus: (tasks: ITaskStatus[]) => {},\n  setCustomValueMap: (custom_value_map: ICustomValueMap) => {},\n  toggeRejectTaskStatus: (task_status_id: string, is_reject: boolean) => {},\n  openController: () => {},\n  closeController: () => {},\n  updateData: () => {}\n});\n\nexport const Provider = ({ children }: { children: React.ReactNode }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = {\n    state,\n    setUrl: useCallback(\n      (url: string) => {\n        dispatch({ type: ActionTypes.SET_URL, payload: { url } });\n      },\n      [dispatch]\n    ),\n    setPid: useCallback(\n      (pid: string) => {\n        dispatch({ type: ActionTypes.SET_PID, payload: { pid } });\n      },\n      [dispatch]\n    ),\n    setMid: useCallback(\n      (mid: string) => {\n        dispatch({ type: ActionTypes.SET_MID, payload: { mid } });\n      },\n      [dispatch]\n    ),\n    setMilestones: useCallback(\n      (milestones: IMilestone[]) => {\n        dispatch({ type: ActionTypes.SET_MILESTONES, payload: { milestones } });\n      },\n      [dispatch]\n    ),\n    setCustomEid: useCallback(\n      (custom_eid: string) => {\n        dispatch({ type: ActionTypes.SET_CUSTOM_EID, payload: { custom_eid } });\n      },\n      [dispatch]\n    ),\n    setCustomRid: useCallback(\n      (custom_rid: string) => {\n        dispatch({ type: ActionTypes.SET_CUSTOM_RID, payload: { custom_rid } });\n      },\n      [dispatch]\n    ),\n    setCustomAttrs: useCallback(\n      (custom_attrs: ICustomAttr[]) => {\n        dispatch({\n          type: ActionTypes.SET_CUSTOM_ATTRS,\n          payload: { custom_attrs }\n        });\n      },\n      [dispatch]\n    ),\n    setBizDays: useCallback(\n      (biz_days: string[]) => {\n        dispatch({ type: ActionTypes.SET_BIZ_DAYS, payload: { biz_days } });\n      },\n      [dispatch]\n    ),\n    addBizDay: useCallback(\n      (biz_day: string) => {\n        dispatch({ type: ActionTypes.ADD_BIZ_DAY, payload: { biz_day } });\n      },\n      [dispatch]\n    ),\n    removeBizDay: useCallback(\n      (biz_day: string) => {\n        dispatch({ type: ActionTypes.REMOVE_BIZ_DAY, payload: { biz_day } });\n      },\n      [dispatch]\n    ),\n    setTasks: useCallback(\n      (tasks: ITask[]) => {\n        dispatch({ type: ActionTypes.SET_TASKS, payload: { tasks } });\n      },\n      [dispatch]\n    ),\n    setTaskStatus: useCallback(\n      (task_status: ITaskStatus[]) => {\n        dispatch({\n          type: ActionTypes.SET_TASK_STATUS,\n          payload: { task_status }\n        });\n      },\n      [dispatch]\n    ),\n\n    setCustomValueMap: useCallback(\n      (custom_value_map: ICustomValueMap) => {\n        dispatch({\n          type: ActionTypes.SET_CUSTOM_VALUE_MAP,\n          payload: { custom_value_map }\n        });\n      },\n      [dispatch]\n    ),\n    toggeRejectTaskStatus: useCallback(\n      (reject_task_status_id: string, is_reject: boolean) => {\n        const type = is_reject\n          ? ActionTypes.ADD_REJECT_TASK_STATUS_ID\n          : ActionTypes.REMOVE_REJECT_TASK_STATUS_ID;\n        dispatch({\n          type,\n          payload: { reject_task_status_id }\n        });\n      },\n      [dispatch]\n    ),\n    openController: useCallback(() => {\n      dispatch({ type: ActionTypes.OPEN_CONTROLLER });\n    }, [dispatch]),\n    closeController: useCallback(() => {\n      dispatch({ type: ActionTypes.CLOSE_CONTROLLER });\n    }, [dispatch]),\n    updateData: useCallback(() => {\n      dispatch({\n        type: ActionTypes.UPDATE_DATA\n      });\n    }, [dispatch])\n  };\n  return <RootContext.Provider value={value}>{children}</RootContext.Provider>;\n};\n","import React, { useEffect, useState, useContext, useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport {\n  UncontrolledTooltip,\n  Table,\n  Card,\n  CardHeader,\n  Input,\n  Label,\n  FormGroup,\n  Badge\n} from \"reactstrap\";\nimport { IMilestone } from \"./store\";\nimport { RootContext } from \"./Provider\";\nimport moment, { Moment } from \"moment\";\nimport biz from \"moment-business\";\nimport _ from \"lodash\";\nexport const isToday = (date: string) => {\n  moment()\n    .local()\n    .format(\"YYYY-MM-DD\") ===\n    moment(date)\n      .local()\n      .format(\"YYYY-MM-DD\");\n};\nexport const dayNameFromIdx = (date: string, idx: number) => {\n  if (idx === -1) {\n    return \"\";\n  }\n  if (idx === 0) {\n    return \"Planning\";\n  }\n  return `Day ${idx}`;\n};\n\nexport const dayName = (date: string, biz_days: string[]) => {\n  const idx = biz_days.indexOf(date);\n  return dayNameFromIdx(date, idx);\n};\nexport const getMilestone = (mid: string, items: IMilestone[]) =>\n  items.find(item => String(item.id) === mid);\nconst getDays = (item: IMilestone) => {\n  const startM = moment(item.estimated_start).local();\n  const finishM = moment(item.estimated_finish).local();\n  const daysInSprint = finishM.diff(startM, \"days\");\n  return _.times(daysInSprint).map(i => startM.clone().add(i, \"days\"));\n};\nconst getDefaultBizDays = (items: Moment[]) =>\n  items\n    .filter(item => biz.isWeekDay(item))\n    .map(item => item.format(\"YYYY-MM-DD\"));\n\nconst weekClassName = (day: number) => ({\n  \"text-danger\": day === 0,\n  \"text-info\": day === 6\n});\n\nconst DayItem = ({\n  item,\n  biz_days,\n  idx\n}: {\n  item: Moment | null;\n  biz_days: string[];\n  idx: number;\n}) => {\n  if (!item) {\n    return (\n      <td>\n        <br />\n      </td>\n    );\n  }\n  const { addBizDay, removeBizDay } = useContext(RootContext);\n  const value = item.format(\"YYYY-MM-DD\");\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const bizDay = e.target.value;\n      e.target.checked ? addBizDay(bizDay) : removeBizDay(bizDay);\n    },\n    [addBizDay, removeBizDay]\n  );\n  const isPlanning = value === biz_days[0];\n  const eleId = `biz-day-${value}`;\n  return (\n    <>\n      <td\n        className={classNames(weekClassName(idx), { \"table-info\": isPlanning })}\n        id={eleId}\n      >\n        {biz.isWeekDay(item) ? (\n          <FormGroup check inline>\n            <Label check>\n              <Input\n                onChange={handleChange}\n                disabled={biz.isWeekendDay(item)}\n                value={value}\n                type=\"checkbox\"\n                checked={_.includes(biz_days, value)}\n                className=\"form-check-input\"\n              />\n              {value}\n            </Label>\n          </FormGroup>\n        ) : (\n          <span>{value}</span>\n        )}\n      </td>\n      {_.includes(biz_days, value) ? (\n        <UncontrolledTooltip target={eleId}>\n          {dayName(value, biz_days)}\n        </UncontrolledTooltip>\n      ) : null}\n    </>\n  );\n};\n\nexport const DaysSelector = () => {\n  const {\n    state: { mid, milestones, biz_days },\n    setBizDays\n  } = useContext(RootContext);\n  const [items, setItems] = useState<Moment[]>([]);\n  useEffect(() => {\n    const milestone = getMilestone(mid, milestones);\n    if (milestone) {\n      const items = getDays(milestone);\n      setItems(items);\n      if (biz_days.length <= 1) {\n        setBizDays(getDefaultBizDays(items));\n      }\n    }\n  }, [mid, milestones, biz_days]);\n  if (items.length === 0) {\n    return null;\n  } else {\n    const weekdays = _.chunk(\n      [..._.times(items[0].day(), () => null), ...items],\n      7\n    );\n    return (\n      <Card>\n        <CardHeader>Business Days</CardHeader>\n        <Table bordered>\n          <thead>\n            <tr>\n              {moment.weekdays().map((item, idx) => (\n                <th\n                  key={idx}\n                  className={classNames(\"text-center\", weekClassName(idx))}\n                >\n                  {item}\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {weekdays.map((days, i) => (\n              <tr key={i}>\n                {days.map((item, idx) => (\n                  <DayItem\n                    idx={idx}\n                    key={idx}\n                    item={item}\n                    biz_days={biz_days}\n                  />\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Card>\n    );\n  }\n};\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ICustomValueMap, IProject, IUser, ITask, ICustomAttr } from \"./store\";\nimport { RootContext, baseUrl } from \"./Provider\";\nimport classNames from \"classnames\";\nimport {\n  Table,\n  Button,\n  Navbar,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Progress\n} from \"reactstrap\";\nimport _ from \"lodash\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSyncAlt,\n  faMedal,\n  faTimes,\n  faEquals,\n  faGrinBeam,\n  faGrinBeamSweat,\n  faDizzy\n} from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"./UserTasks.module.css\";\nimport moment from \"moment\";\n\nconst barStyles = [\"success\", \"warning\", \"info\", \"danger\"];\nconst getTasksByUser = (items: ITask[]) => _.groupBy(items, \"assigned_to\");\nconst getClosedTasks = (items: ITask[]) => items.filter(item => item.is_closed);\nexport const parseCustomVal = (val: string) =>\n  _.chain(val)\n    .replace(/[^0-9.+,]/g, \"\")\n    .replace(/[+]/g, \",\")\n    .split(\",\")\n    .compact()\n    .map(Number)\n    .sum()\n    .value();\n\nexport const getCustomVal = (\n  custom_value_map: ICustomValueMap,\n  task: ITask,\n  id: number\n) => {\n  if (custom_value_map.has(task)) {\n    return parseCustomVal(\n      _.get(custom_value_map.get(task), `attributes_values.${id}`, \"0\")\n    );\n  } else {\n    return 0;\n  }\n};\nconst getGrade = (e: number, r: number): [string | null, number] => {\n  if (_.isNumber(e) && _.isNumber(r) && e > 0) {\n    const diff = Math.abs(e - r) / e;\n    if (diff <= 0.05) {\n      return [\"gold\", 3];\n    }\n    if (diff <= 0.1) {\n      return [\"silver\", 2];\n    }\n    if (diff < 0.2) {\n      return [\"bronze\", 1];\n    }\n  }\n  return [null, 0];\n};\nconst NameAndWorkLoad = ({\n  username,\n  val,\n  total,\n  imgSrc\n}: {\n  username: string;\n  val: number;\n  total: number;\n  imgSrc: string;\n}) => {\n  if (!val) {\n    return (\n      <>\n        <td>\n          <img className={styles.avator} src={imgSrc} /> {username}\n        </td>\n        <td />\n      </>\n    );\n  }\n  const diff = (val - total) / total;\n  let icon;\n  let tblCls;\n  if (diff < -0.1) {\n    icon = faGrinBeam;\n    tblCls = \"\";\n  } else if (diff <= 0.1) {\n    tblCls = \"table-success\";\n    icon = faGrinBeam;\n  } else if (diff <= 0.2) {\n    tblCls = \"table-warning\";\n    icon = faGrinBeamSweat;\n  } else {\n    tblCls = \"table-danger\";\n    icon = faDizzy;\n  }\n  return (\n    <>\n      <td className={tblCls}>\n        <img className={styles.avator} src={imgSrc} /> {username}\n        <FontAwesomeIcon className=\"mx-1\" icon={icon} />\n      </td>\n      <td className={classNames(tblCls, \"text-right\")}>{val}</td>\n    </>\n  );\n};\n\nconst Medal = ({ e, r }: { e: number; r: number }) => {\n  const [grade, num] = getGrade(e, r);\n  if (grade) {\n    return (\n      <>\n        {_.times(num).map(i => (\n          <FontAwesomeIcon key={i} className={styles[grade]} icon={faMedal} />\n        ))}\n      </>\n    );\n  } else {\n    return null;\n  }\n};\ninterface IProgressTotal {\n  status: number;\n  total: number;\n  style?: string;\n  label: string;\n}\nconst UserRow = ({\n  item,\n  sums,\n  isPast,\n  total,\n  hpd,\n  closedTasks\n}: {\n  item: IUser;\n  sums: { [key: string]: { e: number; r: number } };\n  isPast: boolean;\n  total: number;\n  hpd: number;\n  closedTasks: ITask[];\n}) => {\n  const {\n    state: { custom_value_map, custom_eid, reject_task_status_ids, task_status }\n  } = useContext(RootContext);\n  const [customTotal, setTotal] = useState<number>(0);\n  const [progressTotal, setProgressTotal] = useState<IProgressTotal[]>([]);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setTotal(Number(e.target.value) || 0);\n    },\n    [setTotal]\n  );\n  const sumItem = _.get(sums, item.id);\n  const e = _.get(sumItem, \"e\");\n  const r = _.get(sumItem, \"r\");\n  const margedTotal = customTotal || total;\n  const totalStr = String(margedTotal);\n  const imgSrc = item.photo || `http://i.pravatar.cc/80?u=${Math.random()}`;\n  useEffect(() => {\n    const closed_status = _.chain(task_status)\n      .filter(item => item.is_closed)\n      .reject(item => _.includes(reject_task_status_ids, String(item.id)))\n      .orderBy(\"id\")\n      .reverse()\n      .map(item => item.id)\n      .value();\n    const closedTotals = _.chain(closedTasks)\n      .groupBy(\"status\")\n      .mapValues(ts =>\n        _.reduce(\n          ts,\n          (result, t) => {\n            result.status = t.status;\n            result.total += getCustomVal(\n              custom_value_map,\n              t,\n              Number(custom_eid)\n            );\n            result.label = t.status_extra_info.name;\n            return result;\n          },\n          { status: 0, total: 0, label: \"\", style: \"\" }\n        )\n      )\n      .value();\n    const sortedTotals = _.orderBy(closedTotals, \"status\")\n      .reverse()\n      .map(item => ({\n        ...item,\n        style: barStyles[closed_status.indexOf(item.status)]\n      }));\n    setProgressTotal(sortedTotals);\n  }, [\n    setProgressTotal,\n    custom_eid,\n    custom_value_map,\n    closedTasks,\n    task_status,\n    reject_task_status_ids\n  ]);\n  return (\n    <tr key={item.id}>\n      {total > 0 ? (\n        <>\n          <NameAndWorkLoad\n            username={item.username}\n            val={e}\n            total={margedTotal}\n            imgSrc={imgSrc}\n          />\n          <td className=\"text-right\">{total}</td>\n          <td className={styles.custom_input_td}>\n            <Input\n              bsSize=\"sm\"\n              type=\"number\"\n              className=\"text-right\"\n              value={totalStr}\n              step={hpd}\n              onChange={handleChange}\n            />\n          </td>\n        </>\n      ) : (\n        <>\n          <td>\n            <img className={styles.avator} src={imgSrc} /> {item.username}\n          </td>\n          <td className=\"text-right\">{e}</td>\n          <td className=\"text-right\">{r}</td>\n          <td>\n            {_.isNumber(e) && (\n              <Progress multi>\n                {progressTotal.map((item, idx) => (\n                  <Progress\n                    bar\n                    key={idx}\n                    value={item.total}\n                    color={item.style}\n                    max={e}\n                  >\n                    {item.label}\n                  </Progress>\n                ))}\n              </Progress>\n            )}\n          </td>\n        </>\n      )}\n\n      {isPast ? (\n        <td>\n          <Medal e={e} r={r} />\n        </td>\n      ) : null}\n    </tr>\n  );\n};\nconst getTaskSumByUser = (\n  items: ITask[],\n  custom_value_map: ICustomValueMap,\n  custom_eid: string,\n  custom_rid: string\n) => {\n  const eid = Number(custom_eid);\n  const rid = Number(custom_rid);\n  const tasksByUser = _.mapValues(getTasksByUser(items), tasks =>\n    _.chain(tasks)\n      .map(task => ({\n        e: getCustomVal(custom_value_map, task, eid),\n        r: getCustomVal(custom_value_map, task, rid)\n      }))\n      .reduce((result, val) => ({ e: result.e + val.e, r: result.r + val.r }), {\n        e: 0,\n        r: 0\n      })\n      .value()\n  );\n  return tasksByUser;\n};\nconst getCustomAttr = (items: ICustomAttr[], id: number) =>\n  items.find(item => item.id === id);\nexport const UserTasks = () => {\n  const {\n    state: {\n      url,\n      pid,\n      tasks,\n      custom_value_map,\n      custom_attrs,\n      custom_eid,\n      custom_rid,\n      biz_days\n    },\n    updateData\n  } = useContext(RootContext);\n  const [items, setItems] = useState<IUser[]>([]);\n  const [hpd, setHpd] = useState<number>(0);\n  const [total, setTotal] = useState<number>(0);\n  const activeLen = biz_days.length - 1;\n  useEffect(() => {\n    if (url && pid) {\n      (async () => {\n        const {\n          data: { members }\n        } = await axios.get<IProject>(`${baseUrl(url)}/projects/${pid}`);\n        setItems(members);\n      })();\n    }\n  }, [url, pid, setItems]);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setHpd(Number(e.target.value) || 0);\n    },\n    [setHpd]\n  );\n  const disableSubmit = useCallback((e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n  }, []);\n  useEffect(() => {\n    setTotal(hpd * activeLen);\n  }, [hpd, activeLen, setTotal]);\n  const taskSumByUser = getTaskSumByUser(\n    tasks,\n    custom_value_map,\n    custom_eid,\n    custom_rid\n  );\n  const customAttrE = getCustomAttr(custom_attrs, Number(custom_eid));\n  const customAttrR = getCustomAttr(custom_attrs, Number(custom_rid));\n  if (!customAttrE || !customAttrR || biz_days.length <= 1) {\n    return null;\n  }\n  const unassignedSum = _.get(taskSumByUser, \"null.e\", 0);\n  const isPlanning = total > 0;\n  const isPast =\n    !isPlanning &&\n    moment().diff(\n      moment(_.last(biz_days))\n        .local()\n        .endOf(\"days\")\n    ) > 0;\n  const tasksByUser = getTasksByUser(getClosedTasks(tasks));\n  return (\n    <>\n      <Navbar color=\"light\" light>\n        <Form inline={true} className=\"mr-auto\" onSubmit={disableSubmit}>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step=\"0.5\"\n              placeholder=\"hours / day\"\n              className=\"text-right\"\n              onChange={handleChange}\n            />\n            <InputGroupAddon addonType=\"append\">\n              <InputGroupText>\n                <FontAwesomeIcon className=\"mx-2\" icon={faTimes} />\n                {activeLen} [days]\n                <FontAwesomeIcon className=\"mx-2\" icon={faEquals} />\n              </InputGroupText>\n              {total > 0 ? (\n                <>\n                  <InputGroupText className=\"bg-white\">\n                    <strong>{total}</strong>\n                  </InputGroupText>\n                  <InputGroupText>hours / sprint</InputGroupText>\n                </>\n              ) : null}\n            </InputGroupAddon>\n          </InputGroup>\n        </Form>\n        <Button onClick={updateData}>\n          <FontAwesomeIcon icon={faSyncAlt} />\n        </Button>\n      </Navbar>\n      <Table bordered>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>{customAttrE.name}</th>\n            {isPlanning ? (\n              <>\n                <th>Total</th> <th>Custom</th>\n              </>\n            ) : (\n              <>\n                <th>{customAttrR.name}</th>\n                <th>Progress</th>\n              </>\n            )}\n            {isPast ? <th>Grade</th> : null}\n          </tr>\n        </thead>\n        <tbody>\n          {items.map(item => (\n            <UserRow\n              key={item.id}\n              isPast={isPast}\n              item={item}\n              sums={taskSumByUser}\n              total={total}\n              hpd={hpd}\n              closedTasks={tasksByUser[item.id] || []}\n            />\n          ))}\n          <tr key=\"null\">\n            <td>unassigned</td>\n            <td className=\"text-right text-danger\">{unassignedSum}</td>\n            <td />\n            <td />\n            {isPast ? <td /> : null}\n          </tr>\n        </tbody>\n      </Table>\n    </>\n  );\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport {\n  ComposedChart,\n  Tooltip,\n  Legend,\n  Line,\n  XAxis,\n  YAxis,\n  Bar\n} from \"recharts\";\nimport { ITask, ICustomValueMap } from \"./store\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { RootContext } from \"./Provider\";\nimport { dayNameFromIdx } from \"./DaysSelector\";\nimport { getCustomVal } from \"./UserTasks\";\nimport { Card, CardHeader } from \"reactstrap\";\ninterface IChartItem {\n  label: string;\n  estimate: number;\n  result?: number;\n  add?: number;\n}\n\nconst getTaskFinished = (tasks: ITask[], date: string) =>\n  tasks.filter(task =>\n    task.finished_date\n      ? moment(date)\n          .local()\n          .endOf(\"days\")\n          .diff(moment(task.finished_date)) > 0\n      : false\n  );\n\nconst getTaskCreatedToday = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      moment(date)\n        .local()\n        .format(\"YYYY-MM-DD\") ===\n      moment(task.created_date)\n        .local()\n        .format(\"YYYY-MM-DD\")\n  );\n\nconst getTaskCreated = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      moment(date)\n        .endOf(\"days\")\n        .diff(moment(task.created_date)) > 0\n  );\n\nconst getSumVal = (\n  custom_value_map: ICustomValueMap,\n  tasks: ITask[],\n  custom_eid: string\n) => {\n  return _.chain(tasks)\n    .map(task => getCustomVal(custom_value_map, task, Number(custom_eid)))\n    .sum()\n    .value();\n};\nexport const Chart = () => {\n  const [data, setData] = useState<IChartItem[]>([]);\n  const {\n    state: { tasks, biz_days, custom_value_map, custom_eid }\n  } = useContext(RootContext);\n  useEffect(() => {\n    const days_len = biz_days.length;\n    if (days_len > 0 && tasks.length > 0 && custom_eid) {\n      const allTaskVal = getSumVal(\n        custom_value_map,\n        getTaskCreated(tasks, biz_days[0]),\n        custom_eid\n      );\n      const data = biz_days.map((day, idx) => {\n        const label = dayNameFromIdx(day, idx);\n        const estimate = allTaskVal - (allTaskVal * idx) / (days_len - 1);\n        if (\n          moment()\n            .local()\n            .endOf(\"days\")\n            .diff(moment(day)) > 0\n        ) {\n          const result =\n            allTaskVal -\n            getSumVal(\n              custom_value_map,\n              getTaskFinished(tasks, day),\n              custom_eid\n            );\n          const add =\n            idx === 0\n              ? 0\n              : getSumVal(\n                  custom_value_map,\n                  getTaskCreatedToday(tasks, day),\n                  custom_eid\n                );\n          return { label, estimate, result, add };\n        } else {\n          return { label, estimate };\n        }\n      });\n      setData(data);\n    } else {\n      setData([]);\n    }\n  }, [tasks, biz_days, custom_eid, custom_value_map, setData]);\n  if (data.length === 0) {\n    return null;\n  } else {\n    return (\n      <Card>\n        <CardHeader>Burn down chart</CardHeader>\n        <ComposedChart data={data} width={800} height={400}>\n          <YAxis />\n          <XAxis dataKey=\"label\" />\n          <Tooltip />\n          <Bar dataKey=\"result\" fill=\"#8884d8\" stackId=\"a\" />\n          <Bar dataKey=\"add\" fill=\"#82ca9d\" stackId=\"a\" />\n          <Line dataKey=\"estimate\" />\n        </ComposedChart>\n      </Card>\n    );\n  }\n};\n","import React, { useCallback, useEffect, useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { Input, InputGroup, InputGroupAddon } from \"reactstrap\";\nimport { RootContext, baseUrl } from \"./Provider\";\nimport { IProject } from \"./store\";\nexport const ProjectSelector = () => {\n  const {\n    state: { url, pid: statePid },\n    setPid\n  } = useContext(RootContext);\n  const [items, setItems] = useState<IProject[]>([]);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const pid = e.target.value;\n      if (pid) {\n        setPid(pid);\n      }\n    },\n    [setPid]\n  );\n  useEffect(() => {\n    if (url) {\n      (async () => {\n        const { data: items } = await axios.get(`${baseUrl(url)}/projects`);\n        setItems(items);\n      })();\n    }\n  }, [url, setItems]);\n\n  return (\n    <InputGroup className=\"col\">\n      <InputGroupAddon addonType=\"prepend\">Project</InputGroupAddon>\n      <Input value={statePid} type=\"select\" onChange={handleChange}>\n        <option value=\"\"> --- </option>\n        {items.map(item => (\n          <option key={item.id} value={item.id}>\n            {item.name}\n          </option>\n        ))}\n      </Input>\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useEffect, useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { Input, InputGroup, InputGroupAddon } from \"reactstrap\";\nimport { RootContext, baseUrl } from \"./Provider\";\nimport { IMilestone, ITask } from \"./store\";\nimport _ from \"lodash\";\n\nexport const MilestoneSelector = () => {\n  const {\n    state: { url, pid, mid: stateMid, updated_time, reject_task_status_ids },\n    setMid,\n    setMilestones,\n    setTasks\n  } = useContext(RootContext);\n  const [items, setItems] = useState<IMilestone[]>([]);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        setMid(id);\n      }\n    },\n    [setMid, items]\n  );\n  useEffect(() => {\n    if (url && pid) {\n      (async () => {\n        const { data: items } = await axios.get(`${baseUrl(url)}/milestones`, {\n          params: { project: pid }\n        });\n        setItems(items);\n        setMilestones(items);\n      })();\n    }\n  }, [url, pid]);\n  useEffect(() => {\n    if (url && stateMid) {\n      (async () => {\n        const { data: items } = await axios.get<ITask[]>(\n          `${baseUrl(url)}/tasks`,\n          {\n            headers: {\n              \"x-disable-pagination\": true\n            },\n            params: {\n              milestone: stateMid\n            }\n          }\n        );\n        const tasks = items.filter(\n          item => !_.includes(reject_task_status_ids, String(item.status))\n        );\n        setTasks(tasks);\n      })();\n    }\n  }, [url, stateMid, updated_time, reject_task_status_ids]);\n\n  return (\n    <InputGroup className=\"col\">\n      <InputGroupAddon addonType=\"prepend\">Sprint</InputGroupAddon>\n      <Input type=\"select\" value={stateMid} onChange={handleChange}>\n        <option value=\"\"> --- </option>\n        {items.map(item => (\n          <option key={item.id} value={item.id}>\n            {item.name}\n          </option>\n        ))}\n      </Input>\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useEffect, useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { Input, InputGroup, InputGroupAddon } from \"reactstrap\";\nimport { ITask, ICustomValue, ICustomAttr } from \"./store\";\nimport { RootContext, baseUrl } from \"./Provider\";\n\nexport const CustomValuesSelector = () => {\n  const {\n    state: { url, pid, custom_eid: stateEid, custom_rid: stateRid, tasks },\n    setCustomEid,\n    setCustomRid,\n    setCustomAttrs,\n    setCustomValueMap\n  } = useContext(RootContext);\n  const [items, setItems] = useState<ICustomAttr[]>([]);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        switch (e.target.name) {\n          case \"eid\": {\n            setCustomEid(id);\n            break;\n          }\n          case \"rid\": {\n            setCustomRid(id);\n            break;\n          }\n        }\n      }\n    },\n    [setCustomEid, setCustomRid]\n  );\n  useEffect(() => {\n    if (url && pid) {\n      (async () => {\n        const { data: items } = await axios.get(\n          `${baseUrl(url)}/task-custom-attributes`,\n          { params: { project: pid } }\n        );\n        setItems(items);\n        setCustomAttrs(items);\n      })();\n    }\n  }, [url, pid, setItems, setCustomAttrs]);\n  useEffect(() => {\n    if (url && tasks.length && stateEid && stateRid) {\n      (async () => {\n        const wmap = new WeakMap(\n          await Promise.all(\n            tasks.map(async item => {\n              const { data: custom_attr_val } = await axios.get(\n                `${baseUrl(url)}/tasks/custom-attributes-values/${item.id}`\n              );\n              return [item, custom_attr_val] as [ITask, ICustomValue];\n            })\n          )\n        );\n        setCustomValueMap(wmap);\n      })();\n    }\n  }, [url, tasks, stateEid, stateRid, setCustomValueMap]);\n\n  return (\n    <div className=\"row\">\n      <InputGroup className=\"col\">\n        <InputGroupAddon addonType=\"prepend\">Estimate</InputGroupAddon>\n        <Input\n          value={stateEid}\n          name=\"eid\"\n          type=\"select\"\n          onChange={handleChange}\n        >\n          <option value=\"\"> --- </option>\n          {items.map(item => (\n            <option key={item.id} value={item.id}>\n              {item.name}\n            </option>\n          ))}\n        </Input>\n      </InputGroup>\n      <InputGroup className=\"col\">\n        <InputGroupAddon addonType=\"prepend\">Result</InputGroupAddon>\n        <Input\n          value={stateRid}\n          name=\"rid\"\n          type=\"select\"\n          onChange={handleChange}\n        >\n          <option> --- </option>\n          {items.map(item => (\n            <option key={item.id} value={item.id}>\n              {item.name}\n            </option>\n          ))}\n        </Input>\n      </InputGroup>\n    </div>\n  );\n};\n","import React, { useCallback, useEffect, useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport { RootContext, baseUrl } from \"./Provider\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Form,\n  Input,\n  FormGroup,\n  Label\n} from \"reactstrap\";\nimport { ITaskStatus } from \"./store\";\nconst StatusItem = ({ item }: { item: ITaskStatus }) => {\n  const {\n    state: { reject_task_status_ids },\n    toggeRejectTaskStatus\n  } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      toggeRejectTaskStatus(String(id), !e.target.checked);\n    },\n    [toggeRejectTaskStatus]\n  );\n  return (\n    <FormGroup check inline>\n      <Label check>\n        <Input\n          onChange={handleChange}\n          type=\"checkbox\"\n          value={item.id}\n          defaultChecked={!_.includes(reject_task_status_ids, String(item.id))}\n        />\n        {item.name}\n      </Label>\n    </FormGroup>\n  );\n};\nexport const TaskStatusSelector = () => {\n  const {\n    state: { url, pid },\n    setTaskStatus\n  } = useContext(RootContext);\n  const [items, setItems] = useState<ITaskStatus[]>([]);\n  useEffect(() => {\n    if (url && pid) {\n      (async () => {\n        const { data: items } = await axios.get(\n          `${baseUrl(url)}/task-statuses`,\n          {\n            params: { project: pid }\n          }\n        );\n        setItems(items);\n        setTaskStatus(items);\n      })();\n    }\n  }, [url, pid]);\n  if (items.length === 0) {\n    return null;\n  }\n  return (\n    <Card>\n      <CardHeader>Task status</CardHeader>\n      <CardBody>\n        {items.map(item => (\n          <StatusItem key={item.id} item={item} />\n        ))}\n      </CardBody>\n    </Card>\n  );\n};\n","import React, { useContext, useState, useCallback } from \"react\";\nimport _ from \"lodash\";\nimport classNames from \"classnames\";\nimport { RootContext } from \"./Provider\";\nimport {\n  Card,\n  CardHeader,\n  Collapse,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Button,\n  Badge\n} from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronCircleRight,\n  faExternalLinkAlt\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { ProjectSelector } from \"./ProjectSelector\";\nimport { MilestoneSelector } from \"./MilestoneSelector\";\nimport { CustomValuesSelector } from \"./CustomValuesSelector\";\nimport { DaysSelector, getMilestone } from \"./DaysSelector\";\nimport { TaskStatusSelector } from \"./TaskStatusSelector\";\nimport { IMilestone } from \"./store\";\nimport styles from \"./Controller.module.css\";\nconst getSpName = (mid: string, items: IMilestone[]) =>\n  _.get(getMilestone(mid, items), \"name\", \"\");\nconst getTaskboardUrl = (url: string, mid: string, items: IMilestone[]) => {\n  const milestone = getMilestone(mid, items);\n  if (url && milestone) {\n    return `${url}/project/${milestone.project_extra_info.slug}/taskboard/${\n      milestone.slug\n    }`;\n  } else {\n    return \"\";\n  }\n};\n\nconst getRange = (biz_days: string[]) => {\n  if (biz_days.length > 1) {\n    return `[${_.head(biz_days)} - ${_.last(biz_days)}]`;\n  } else {\n    return \"\";\n  }\n};\nexport const Controller = () => {\n  const {\n    state: { url: stateUrl, isOpen, mid, milestones, biz_days },\n    setUrl,\n    openController,\n    closeController\n  } = useContext(RootContext);\n  const [url, setStateUrl] = useState(\"\");\n  const handleUrl = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setStateUrl(e.target.value);\n    },\n    [setStateUrl]\n  );\n  const handleSubmit = useCallback(\n    (e: React.FormEvent) => {\n      if (url) {\n        setUrl(url);\n      }\n      e.preventDefault();\n    },\n    [url, setUrl]\n  );\n  const handleHref = useCallback((e: React.FormEvent) => {\n    e.stopPropagation();\n  }, []);\n  const rotation = isOpen ? 90 : undefined;\n  const toggle = useCallback(() => {\n    if (isOpen) {\n      closeController();\n    } else {\n      openController();\n    }\n  }, [openController, closeController, isOpen]);\n  const taskboardUrl = getTaskboardUrl(stateUrl, mid, milestones);\n  return (\n    <Card>\n      <CardHeader className={classNames(styles.header)} onClick={toggle}>\n        <FontAwesomeIcon rotation={rotation} icon={faChevronCircleRight} />\n        <Badge color=\"primary\" pill className=\"p-1 m-1\">\n          <span>{getSpName(mid, milestones)}</span>\n        </Badge>\n        <Badge className=\"p-1 m-1\">\n          <span>{getRange(biz_days)}</span>\n        </Badge>\n        {taskboardUrl ? (\n          <a\n            target=\"_blank\"\n            onClick={handleHref}\n            className=\"float-right\"\n            href={taskboardUrl}\n          >\n            <FontAwesomeIcon className=\"mr-1\" icon={faExternalLinkAlt} />\n            Taskboard\n          </a>\n        ) : null}\n      </CardHeader>\n      <Collapse isOpen={isOpen}>\n        <Form onSubmit={handleSubmit}>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">URL</InputGroupAddon>\n            <Input\n              defaultValue={stateUrl}\n              onChange={handleUrl}\n              placeholder=\"http://hostname:port\"\n            />\n            <InputGroupAddon addonType=\"append\">\n              <Button>Set</Button>\n            </InputGroupAddon>\n          </InputGroup>\n        </Form>\n        <div className=\"row\">\n          <ProjectSelector />\n          <MilestoneSelector />\n        </div>\n        <CustomValuesSelector />\n        <DaysSelector />\n        <TaskStatusSelector />\n      </Collapse>\n    </Card>\n  );\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { RootContext } from \"./Provider\";\nimport { ITask } from \"./store\";\nimport { ListGroup, ListGroupItem, Card, CardHeader } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faExternalLinkAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { getCustomVal } from \"./UserTasks\";\nconst TaskItem = ({ url, item }: { item: ITask; url: string }) => {\n  const {\n    project_extra_info: { slug }\n  } = item;\n  const href = `${url}/project/${slug}/task/${item.ref}`;\n  return (\n    <ListGroupItem tag=\"a\" target=\"_blank\" href={href}>\n      <FontAwesomeIcon icon={faExternalLinkAlt} /> {item.subject}\n    </ListGroupItem>\n  );\n};\nexport const UnEstimatedTasks = () => {\n  const {\n    state: { url, tasks, custom_value_map, custom_eid }\n  } = useContext(RootContext);\n  const [items, setItems] = useState<ITask[]>([]);\n  useEffect(() => {\n    if (tasks.length > 0 && custom_eid) {\n      const eid = Number(custom_eid);\n      const items = tasks.filter(\n        task => getCustomVal(custom_value_map, task, eid) === 0\n      );\n      if (tasks.length > items.length) {\n        setItems(items);\n      }\n    }\n  }, [tasks, custom_value_map, custom_eid]);\n  if (items.length === 0) {\n    return null;\n  } else {\n    return (\n      <Card>\n        <CardHeader>Un estimated tasks</CardHeader>\n        <ListGroup>\n          {items.map(item => (\n            <TaskItem url={url} key={item.id} item={item} />\n          ))}\n        </ListGroup>\n      </Card>\n    );\n  }\n};\n","import React from \"react\";\nimport { Chart } from \"./Chart\";\nimport { Controller } from \"./Controller\";\nimport { UserTasks } from \"./UserTasks\";\nimport { UnEstimatedTasks } from \"./UnEstimatedTasks\";\nimport { Provider } from \"./Provider\";\nexport const App = () => (\n  <div className=\"container\">\n    <Provider>\n      <Controller />\n      <UserTasks />\n      <UnEstimatedTasks />\n      <Chart />\n    </Provider>\n  </div>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gold\":\"UserTasks_gold__2_Oza\",\"silver\":\"UserTasks_silver__FUnAn\",\"bronze\":\"UserTasks_bronze__24R1R\",\"custom_input_td\":\"UserTasks_custom_input_td__2MdyH\",\"avator\":\"UserTasks_avator__3C5_y\"};"],"sourceRoot":""}