{"version":3,"sources":["actions.ts","store.ts","reducer.ts","Provider.tsx","UserTasks.tsx","Chart.tsx","ProjectSelector.tsx","MilestoneSelector.tsx","CustomValuesSelector.tsx","DaysSelector.tsx","Controller.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ActionTypes","StorageKey","getFromStorage","key","localStorage","getItem","getFromStorageWithSubkey","subkey","concat","setToStorage","item","setItem","setToStorageWithSubkey","initialStateFn","url","URL","pid","PID","mid","MID","custom_eid","CUSTOM_EID","custom_rid","CUSTOM_RID","biz_days_str","BIZ_DAYS","custom_attrs","biz_days","_","compact","split","sort","milestones","tasks","custom_value_map","WeakMap","reducer","state","arguments","length","undefined","action","type","SET_URL","payload","Object","objectSpread","SET_PID","SET_MID","SET_MILESTONES","SET_CUSTOM_EID","SET_CUSTOM_ATTRS","SET_CUSTOM_RID","SET_BIZ_DAYS","join","ADD_BIZ_DAY","biz_day","chain","toConsumableArray","uniq","value","REMOVE_BIZ_DAY","reject","SET_TASKS","SET_CUSTOM_VALUE_MAP","baseUrl","replace","initialState","RootContext","createContext","setUrl","setPid","setMid","setMilestones","setCustomEid","setCustomRid","setCustomAttrs","setBizDays","addBizDay","removeBizDay","setTasks","setCustomValueMap","Provider","_ref","children","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","useCallback","react_default","a","createElement","getCustomVal","task","id","has","Number","get","getTaskSumByUser","items","eid","rid","mapValues","groupBy","getTasksByUser","map","e","r","reduce","result","val","getCustomAttr","find","UserTasks","_useContext$state","useContext","_useState","useState","_useState2","setItems","useEffect","asyncToGenerator","regenerator_default","mark","_callee","_ref2","members","wrap","_context","prev","next","axios","sent","data","stop","this","taskSumByUser","customAttrE","customAttrR","reactstrap_es","name","username","getSumVal","sum","Chart","setData","days_len","allTaskVal","date","filter","moment","diff","created_date","getTaskCreated","day","idx","label","estimate","finished_date","getTaskFinished","add","format","getTaskCreatedToday","ComposedChart","width","height","YAxis","XAxis","dataKey","Tooltip","Bar","fill","stackId","Line","ProjectSelector","_useContext","statePid","handleChange","target","className","addonType","onChange","MilestoneSelector","stateMid","params","project","_callee2","_ref4","_context2","headers","x-disable-pagination","milestone","CustomValuesSelector","stateEid","stateRid","_callee3","wmap","_context3","t0","Promise","all","_ref5","custom_attr_val","abrupt","_x","apply","t1","DayItem","bizDay","checked","disabled","biz","isWeekendDay","defaultChecked","includes","for","DaysSelector","_useContext2","_useContext2$state","String","getMilestone","startM","estimated_start","local","daysInSprint","estimated_finish","times","i","clone","getDays","isWeekDay","Fragment","DaysSelector_DayItem","toString","Controller","setStateUrl","handleUrl","handleSubmit","preventDefault","onSubmit","defaultValue","placeholder","ProjectSelector_ProjectSelector","MilestoneSelector_MilestoneSelector","CustomValuesSelector_CustomValuesSelector","DaysSelector_DaysSelector","App","Provider_Provider","Controller_Controller","UserTasks_UserTasks","Chart_Chart","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.679eebe9.chunk.js","sourcesContent":["export enum ActionTypes {\n  SET_URL = 'SET_URL',\n  SET_PID = 'SET_PID',\n  SET_MID = 'SET_MID',\n  SET_MILESTONES = 'SET_MILESTONES',\n  SET_CUSTOM_EID = 'SET_CUSTOM_EID',\n  SET_CUSTOM_RID = 'SET_CUSTOM_RID',\n  SET_CUSTOM_ATTRS = 'SET_CUSTOM_ATTRS',\n  SET_BIZ_DAYS = 'SET_BIZ_DAYS',\n  ADD_BIZ_DAY = 'ADD_BIZ_DAY',\n  REMOVE_BIZ_DAY = 'REMOVE_BIZ_DAY',\n  SET_TASKS = 'SET_TASKS',\n  SET_CUSTOM_VALUE_MAP = 'SET_CUSTOM_VALUE_MAP'\n}\n\nexport interface IAction {\n  type: ActionTypes;\n  payload?: any;\n  meta?: { [key: string]: any };\n}\n","import _ from 'lodash';\nexport interface ICustomAttr {\n  id: number;\n  name: string;\n}\nexport interface IMilestone {\n  id: number;\n  name: string;\n  estimated_start: string;\n  estimated_finish: string;\n}\nexport interface ITask {\n  id: number;\n  assigned_to: number | null;\n  created_date: string;\n  finished_date: string;\n  is_closed: boolean;\n  subject: string;\n}\nexport interface IAttrValue {}\nexport interface ICustomValue {\n  attributes_values: {\n    [key: number]: string;\n  };\n}\nexport interface IUser {\n  id: number;\n  username: string;\n  full_name: string;\n  full_name_display: string;\n  photo: string;\n}\nexport interface IProject {\n  id: number;\n  name: string;\n  members: IUser[];\n}\nexport type ICustomValueMap = WeakMap<ITask, ICustomValue>;\nexport interface IState {\n  url: string;\n  pid: string; // url\n  mid: string; // url\n  custom_eid: string; //  pid\n  custom_rid: string; // pid\n  custom_attrs: ICustomAttr[]; // pid\n  biz_days: string[]; //mid\n  milestones: IMilestone[]; // pid\n  tasks: ITask[]; //mid\n  custom_value_map: ICustomValueMap; // pid\n}\n\nexport enum StorageKey {\n  URL = 'taiga_url',\n  PID = 'taiga_pid',\n  MID = 'taiga_mid',\n  CUSTOM_EID = 'taiga_custom_eid',\n  CUSTOM_RID = 'taiga_custom_rid',\n  BIZ_DAYS = 'taiga_biz_days'\n}\n\nexport const getFromStorage = (key: string) => localStorage.getItem(key) || '';\n\nexport const getFromStorageWithSubkey = (key: StorageKey, subkey: string) =>\n  subkey ? getFromStorage(`${subkey}/${key}`) : '';\n\nexport const setToStorage = (key: string, item: string) => {\n  localStorage.setItem(key, item);\n};\nexport const setToStorageWithSubkey = (\n  key: StorageKey,\n  subkey: string,\n  item: string\n) => {\n  subkey ? setToStorage(`${subkey}/${key}`, item) : null;\n};\nexport const initialStateFn = (): IState => {\n  const url = getFromStorage(StorageKey.URL);\n  const pid = getFromStorage(StorageKey.PID);\n  const mid = getFromStorage(StorageKey.MID);\n  const custom_eid = getFromStorageWithSubkey(StorageKey.CUSTOM_EID, pid);\n  const custom_rid = getFromStorageWithSubkey(StorageKey.CUSTOM_RID, pid);\n  const biz_days_str = getFromStorageWithSubkey(StorageKey.BIZ_DAYS, mid);\n  const biz_days = _.compact(biz_days_str.split(',')).sort();\n  return {\n    url,\n    pid,\n    mid,\n    custom_eid,\n    custom_rid,\n    custom_attrs: [],\n    biz_days,\n    milestones: [],\n    tasks: [],\n    custom_value_map: new WeakMap()\n  };\n};\n","import _ from 'lodash';\nimport { initialStateFn, IState, StorageKey } from './store';\nimport { ActionTypes, IAction } from './actions';\nimport {\n  setToStorage,\n  setToStorageWithSubkey,\n  getFromStorageWithSubkey\n} from './store';\nexport const reducer = (state = initialStateFn(), action: IAction) => {\n  switch (action.type) {\n    case ActionTypes.SET_URL: {\n      const { url } = action.payload;\n      setToStorage(StorageKey.URL, url);\n      return { ...state, url } as IState;\n    }\n    case ActionTypes.SET_PID: {\n      const { pid } = action.payload;\n      setToStorage(StorageKey.PID, pid);\n      return {\n        ...state,\n        pid,\n        mid: '',\n        custom_eid: getFromStorageWithSubkey(StorageKey.CUSTOM_EID, pid),\n        custom_rid: getFromStorageWithSubkey(StorageKey.CUSTOM_RID, pid),\n        custom_attrs: [],\n        milestones: [],\n        custom_value_map: new WeakMap()\n      } as IState;\n    }\n    case ActionTypes.SET_MID: {\n      const { mid } = action.payload;\n      setToStorage(StorageKey.MID, mid);\n      return {\n        ...state,\n        mid,\n        tasks: [],\n        biz_days: _.compact(\n          getFromStorageWithSubkey(StorageKey.BIZ_DAYS, mid).split(',')\n        ).sort()\n      } as IState;\n    }\n    case ActionTypes.SET_MILESTONES: {\n      const { milestones } = action.payload;\n      return { ...state, milestones } as IState;\n    }\n    case ActionTypes.SET_CUSTOM_EID: {\n      const { custom_eid } = action.payload;\n      setToStorageWithSubkey(StorageKey.CUSTOM_EID, state.pid, custom_eid);\n      return { ...state, custom_eid } as IState;\n    }\n    case ActionTypes.SET_CUSTOM_ATTRS: {\n      const { custom_attrs } = action.payload;\n      return { ...state, custom_attrs } as IState;\n    }\n    case ActionTypes.SET_CUSTOM_RID: {\n      const { custom_rid } = action.payload;\n      setToStorageWithSubkey(StorageKey.CUSTOM_RID, state.pid, custom_rid);\n      return { ...state, custom_rid } as IState;\n    }\n    case ActionTypes.SET_BIZ_DAYS: {\n      const { biz_days } = action.payload;\n      setToStorageWithSubkey(\n        StorageKey.BIZ_DAYS,\n        state.mid,\n        biz_days.join(',')\n      );\n      return { ...state, biz_days } as IState;\n    }\n    case ActionTypes.ADD_BIZ_DAY: {\n      const { biz_day } = action.payload;\n      const biz_days = _.chain([...state.biz_days, biz_day])\n        .uniq()\n        .sort()\n        .value();\n      setToStorageWithSubkey(\n        StorageKey.BIZ_DAYS,\n        state.mid,\n        biz_days.join(',')\n      );\n      return { ...state, biz_days } as IState;\n    }\n    case ActionTypes.REMOVE_BIZ_DAY: {\n      const { biz_day } = action.payload;\n      const biz_days = _.reject([...state.biz_days], item => item === biz_day);\n      setToStorageWithSubkey(\n        StorageKey.BIZ_DAYS,\n        state.mid,\n        biz_days.join(',')\n      );\n      return { ...state, biz_days } as IState;\n    }\n    case ActionTypes.SET_TASKS: {\n      const { tasks } = action.payload;\n      return { ...state, tasks } as IState;\n    }\n    case ActionTypes.SET_CUSTOM_VALUE_MAP: {\n      const { custom_value_map } = action.payload;\n      return { ...state, custom_value_map } as IState;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import React, { createContext, useReducer, useCallback } from 'react';\nimport { ActionTypes } from './actions';\nimport {\n  initialStateFn,\n  IMilestone,\n  ICustomAttr,\n  ITask,\n  ICustomValueMap\n} from './store';\nimport { reducer } from './reducer';\nimport _ from 'lodash';\nexport const baseUrl = (url: string) => `${url.replace(/[¥/]$/, '')}/api/v1`;\n\nconst initialState = initialStateFn();\nexport const RootContext = createContext({\n  state: initialState,\n  setUrl: (url: string) => {},\n  setPid: (pid: string) => {},\n  setMid: (mid: string) => {},\n  setMilestones: (milestones: IMilestone[]) => {},\n  setCustomEid: (custom_eid: string) => {},\n  setCustomRid: (custom_rid: string) => {},\n  setCustomAttrs: (custom_attrs: ICustomAttr[]) => {},\n  setBizDays: (biz_days: string[]) => {},\n  addBizDay: (biz_day: string) => {},\n  removeBizDay: (biz_day: string) => {},\n  setTasks: (tasks: ITask[]) => {},\n  setCustomValueMap: (custom_value_map: ICustomValueMap) => {}\n});\n\nexport const Provider = ({ children }: { children: React.ReactNode }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = {\n    state,\n    setUrl: useCallback(\n      (url: string) => {\n        dispatch({ type: ActionTypes.SET_URL, payload: { url } });\n      },\n      [dispatch]\n    ),\n    setPid: useCallback(\n      (pid: string) => {\n        dispatch({ type: ActionTypes.SET_PID, payload: { pid } });\n      },\n      [dispatch]\n    ),\n    setMid: useCallback(\n      (mid: string) => {\n        dispatch({ type: ActionTypes.SET_MID, payload: { mid } });\n      },\n      [dispatch]\n    ),\n    setMilestones: useCallback(\n      (milestones: IMilestone[]) => {\n        dispatch({ type: ActionTypes.SET_MILESTONES, payload: { milestones } });\n      },\n      [dispatch]\n    ),\n    setCustomEid: useCallback(\n      (custom_eid: string) => {\n        dispatch({ type: ActionTypes.SET_CUSTOM_EID, payload: { custom_eid } });\n      },\n      [dispatch]\n    ),\n    setCustomRid: useCallback(\n      (custom_rid: string) => {\n        dispatch({ type: ActionTypes.SET_CUSTOM_RID, payload: { custom_rid } });\n      },\n      [dispatch]\n    ),\n    setCustomAttrs: useCallback(\n      (custom_attrs: ICustomAttr[]) => {\n        dispatch({\n          type: ActionTypes.SET_CUSTOM_ATTRS,\n          payload: { custom_attrs }\n        });\n      },\n      [dispatch]\n    ),\n    setBizDays: useCallback(\n      (biz_days: string[]) => {\n        dispatch({ type: ActionTypes.SET_BIZ_DAYS, payload: { biz_days } });\n      },\n      [dispatch]\n    ),\n    addBizDay: useCallback(\n      (biz_day: string) => {\n        dispatch({ type: ActionTypes.ADD_BIZ_DAY, payload: { biz_day } });\n      },\n      [dispatch]\n    ),\n    removeBizDay: useCallback(\n      (biz_day: string) => {\n        dispatch({ type: ActionTypes.REMOVE_BIZ_DAY, payload: { biz_day } });\n      },\n      [dispatch]\n    ),\n    setTasks: useCallback(\n      (tasks: ITask[]) => {\n        dispatch({ type: ActionTypes.SET_TASKS, payload: { tasks } });\n      },\n      [dispatch]\n    ),\n    setCustomValueMap: useCallback(\n      (custom_value_map: ICustomValueMap) => {\n        dispatch({\n          type: ActionTypes.SET_CUSTOM_VALUE_MAP,\n          payload: { custom_value_map }\n        });\n      },\n      [dispatch]\n    )\n  };\n  return <RootContext.Provider value={value}>{children}</RootContext.Provider>;\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { ICustomValueMap, IProject, IUser, ITask, ICustomAttr } from './store';\nimport { RootContext, baseUrl } from './Provider';\nimport { Table } from 'reactstrap';\nimport _ from 'lodash';\n\nconst getTasksByUser = (items: ITask[]) => _.groupBy(items, 'assigned_to');\nexport const getCustomVal = (\n  custom_value_map: ICustomValueMap,\n  task: ITask,\n  id: number\n) => {\n  if (custom_value_map.has(task)) {\n    return Number(\n      _.get(custom_value_map.get(task), `attributes_values.${id}`, '0').replace(\n        /[^0-9.]/g,\n        ''\n      )\n    );\n  } else {\n    return 0;\n  }\n};\n\nconst getTaskSumByUser = (\n  items: ITask[],\n  custom_value_map: ICustomValueMap,\n  custom_eid: string,\n  custom_rid: string\n) => {\n  const eid = Number(custom_eid);\n  const rid = Number(custom_rid);\n  const tasksByUser = _.mapValues(getTasksByUser(items), tasks =>\n    _.chain(tasks)\n      .map(task => ({\n        e: getCustomVal(custom_value_map, task, eid),\n        r: getCustomVal(custom_value_map, task, rid)\n      }))\n      .reduce((result, val) => ({ e: result.e + val.e, r: result.r + val.r }), {\n        e: 0,\n        r: 0\n      })\n      .value()\n  );\n  return tasksByUser;\n};\nconst getCustomAttr = (items: ICustomAttr[], id: number) =>\n  items.find(item => item.id === id);\nexport const UserTasks = () => {\n  const {\n    state: {\n      url,\n      pid,\n      tasks,\n      custom_value_map,\n      custom_attrs,\n      custom_eid,\n      custom_rid\n    }\n  } = useContext(RootContext);\n  const [items, setItems] = useState<IUser[]>([]);\n  useEffect(\n    () => {\n      if (url && pid) {\n        (async () => {\n          const {\n            data: { members }\n          } = await axios.get<IProject>(`${baseUrl(url)}/projects/${pid}`);\n          setItems(members);\n        })();\n      }\n    },\n    [url, pid, setItems]\n  );\n  const taskSumByUser = getTaskSumByUser(\n    tasks,\n    custom_value_map,\n    custom_eid,\n    custom_rid\n  );\n  const customAttrE = getCustomAttr(custom_attrs, Number(custom_eid));\n  const customAttrR = getCustomAttr(custom_attrs, Number(custom_rid));\n  if (!customAttrE || !customAttrR) {\n    return null;\n  }\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>{customAttrE.name}</th>\n          <th>{customAttrR.name}</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(item => (\n          <tr key={item.id}>\n            <td>{item.username}</td>\n            <td>{_.get(taskSumByUser, `${item.id}.e`)}</td>\n            <td>{_.get(taskSumByUser, `${item.id}.r`)}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport {\n  ComposedChart,\n  Tooltip,\n  Legend,\n  Line,\n  XAxis,\n  YAxis,\n  Bar\n} from 'recharts';\nimport { ITask, ICustomValueMap } from './store';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { RootContext } from './Provider';\nimport { getCustomVal } from './UserTasks';\ninterface IChartItem {\n  label: string;\n  estimate: number;\n  result?: number;\n  add?: number;\n}\n\nconst getTaskFinished = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      task.finished_date\n        ? moment(date).diff(moment(task.finished_date)) > 0\n        : false\n  );\n\nconst getTaskCreatedToday = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      moment(date).format('YYYY-MM-DD') ===\n      moment(task.created_date).format('YYYY-MM-DD')\n  );\n\nconst getTaskCreated = (tasks: ITask[], date: string) =>\n  tasks.filter(task => moment(date).diff(moment(task.created_date)) > 0);\n\nconst getSumVal = (\n  custom_value_map: ICustomValueMap,\n  tasks: ITask[],\n  custom_eid: string\n) => {\n  return _.chain(tasks)\n    .map(task => getCustomVal(custom_value_map, task, Number(custom_eid)))\n    .sum()\n    .value();\n};\nexport const Chart = () => {\n  const [data, setData] = useState<IChartItem[]>([]);\n  const {\n    state: { tasks, biz_days, custom_value_map, custom_eid }\n  } = useContext(RootContext);\n  useEffect(\n    () => {\n      const days_len = biz_days.length;\n      if (days_len > 1 && tasks.length > 0 && custom_eid) {\n        const allTaskVal = getSumVal(\n          custom_value_map,\n          getTaskCreated(tasks, biz_days[1]),\n          custom_eid\n        );\n        const data = biz_days.map((day, idx) => {\n          const label = `day ${idx + 1}`;\n          const estimate = allTaskVal - (allTaskVal * idx) / (days_len - 1);\n          if (moment().diff(moment(day), 'days') >= 0) {\n            const result =\n              allTaskVal -\n              getSumVal(\n                custom_value_map,\n                getTaskFinished(tasks, day),\n                custom_eid\n              );\n            const add =\n              idx === 0\n                ? 0\n                : getSumVal(\n                    custom_value_map,\n                    getTaskCreatedToday(tasks, day),\n                    custom_eid\n                  );\n            return { label, estimate, result, add };\n          } else {\n            return { label, estimate };\n          }\n        });\n        setData(data);\n      } else {\n        setData([]);\n      }\n    },\n    [tasks, biz_days, custom_eid, custom_value_map, setData]\n  );\n  if (data.length === 0) {\n    return null;\n  } else {\n    return (\n      <ComposedChart data={data} width={800} height={400}>\n        <YAxis />\n        <XAxis dataKey=\"label\" />\n        <Tooltip />\n        <Bar dataKey=\"result\" fill=\"#8884d8\" stackId=\"a\" />\n        <Bar dataKey=\"add\" fill=\"#82ca9d\" stackId=\"a\" />\n        <Line dataKey=\"estimate\" />\n      </ComposedChart>\n    );\n  }\n};\n","import React, { useCallback, useEffect, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { Input, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { RootContext, baseUrl } from './Provider';\nimport { IProject } from './store';\nexport const ProjectSelector = () => {\n  const {\n    state: { url, pid: statePid },\n    setPid\n  } = useContext(RootContext);\n  const [items, setItems] = useState<IProject[]>([]);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const pid = e.target.value;\n      if (pid) {\n        setPid(pid);\n      }\n    },\n    [setPid]\n  );\n  useEffect(\n    () => {\n      if (url) {\n        (async () => {\n          const { data: items } = await axios.get(`${baseUrl(url)}/projects`);\n          setItems(items);\n        })();\n      }\n    },\n    [url, setItems]\n  );\n\n  return (\n    <InputGroup className=\"col\">\n      <InputGroupAddon addonType=\"prepend\">Project</InputGroupAddon>\n      <Input value={statePid} type=\"select\" onChange={handleChange}>\n        <option value=\"\"> --- </option>\n        {items.map(item => (\n          <option key={item.id} value={item.id}>\n            {item.name}\n          </option>\n        ))}\n      </Input>\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useEffect, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { Input, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { RootContext, baseUrl } from './Provider';\nimport { IMilestone } from './store';\n\nexport const MilestoneSelector = () => {\n  const {\n    state: { url, pid, mid: stateMid },\n    setMid,\n    setMilestones,\n    setTasks\n  } = useContext(RootContext);\n  const [items, setItems] = useState<IMilestone[]>([]);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        setMid(id);\n      }\n    },\n    [setMid, items]\n  );\n  useEffect(\n    () => {\n      if (url && pid) {\n        (async () => {\n          const { data: items } = await axios.get(\n            `${baseUrl(url)}/milestones`,\n            { params: { project: pid } }\n          );\n          setItems(items);\n          setMilestones(items);\n        })();\n      }\n    },\n    [url, pid, setItems, setMilestones]\n  );\n  useEffect(\n    () => {\n      if (url && stateMid) {\n        (async () => {\n          const { data: items } = await axios.get(`${baseUrl(url)}/tasks`, {\n            headers: {\n              'x-disable-pagination': true\n            },\n            params: {\n              milestone: stateMid\n            }\n          });\n          setTasks(items);\n        })();\n      }\n    },\n    [url, stateMid, setTasks]\n  );\n\n  return (\n    <InputGroup className=\"col\">\n      <InputGroupAddon addonType=\"prepend\">Sprint</InputGroupAddon>\n      <Input type=\"select\" value={stateMid} onChange={handleChange}>\n        <option value=\"\"> --- </option>\n        {items.map(item => (\n          <option key={item.id} value={item.id}>\n            {item.name}\n          </option>\n        ))}\n      </Input>\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useEffect, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { Input, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { ITask, ICustomValue, ICustomAttr } from './store';\nimport { RootContext, baseUrl } from './Provider';\n\nexport const CustomValuesSelector = () => {\n  const {\n    state: { url, pid, custom_eid: stateEid, custom_rid: stateRid, tasks },\n    setCustomEid,\n    setCustomRid,\n    setCustomAttrs,\n    setCustomValueMap\n  } = useContext(RootContext);\n  const [items, setItems] = useState<ICustomAttr[]>([]);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        switch (e.target.name) {\n          case 'eid': {\n            setCustomEid(id);\n            break;\n          }\n          case 'rid': {\n            setCustomRid(id);\n            break;\n          }\n        }\n      }\n    },\n    [setCustomEid, setCustomRid]\n  );\n  useEffect(\n    () => {\n      if (url && pid) {\n        (async () => {\n          const { data: items } = await axios.get(\n            `${baseUrl(url)}/task-custom-attributes`,\n            { params: { project: pid } }\n          );\n          setItems(items);\n          setCustomAttrs(items);\n        })();\n      }\n    },\n    [url, pid, setItems, setCustomAttrs]\n  );\n  useEffect(\n    () => {\n      if (url && tasks.length && stateEid && stateRid) {\n        (async () => {\n          const wmap = new WeakMap(\n            await Promise.all(\n              tasks.map(async item => {\n                const { data: custom_attr_val } = await axios.get(\n                  `${baseUrl(url)}/tasks/custom-attributes-values/${item.id}`\n                );\n                return [item, custom_attr_val] as [ITask, ICustomValue];\n              })\n            )\n          );\n          setCustomValueMap(wmap);\n        })();\n      }\n    },\n    [url, tasks, stateEid, stateRid, setCustomValueMap]\n  );\n\n  return (\n    <div className=\"row\">\n      <InputGroup className=\"col\">\n        <InputGroupAddon addonType=\"prepend\">Estimate</InputGroupAddon>\n        <Input\n          value={stateEid}\n          name=\"eid\"\n          type=\"select\"\n          onChange={handleChange}\n        >\n          <option value=\"\"> --- </option>\n          {items.map(item => (\n            <option key={item.id} value={item.id}>\n              {item.name}\n            </option>\n          ))}\n        </Input>\n      </InputGroup>\n      <InputGroup className=\"col\">\n        <InputGroupAddon addonType=\"prepend\">Result</InputGroupAddon>\n        <Input\n          value={stateRid}\n          name=\"rid\"\n          type=\"select\"\n          onChange={handleChange}\n        >\n          <option> --- </option>\n          {items.map(item => (\n            <option key={item.id} value={item.id}>\n              {item.name}\n            </option>\n          ))}\n        </Input>\n      </InputGroup>\n    </div>\n  );\n};\n","import React, { useEffect, useState, useContext, useCallback } from 'react';\nimport { Input, Label } from 'reactstrap';\nimport { IMilestone } from './store';\nimport { RootContext } from './Provider';\nimport moment, { Moment } from 'moment';\nimport biz from 'moment-business';\nimport _ from 'lodash';\nconst getMilestone = (mid: string, items: IMilestone[]) =>\n  items.find(item => String(item.id) === mid);\nconst getDays = (item: IMilestone) => {\n  const startM = moment(item.estimated_start).local();\n  const finishM = moment(item.estimated_finish).local();\n  const daysInSprint = finishM.diff(startM, 'days');\n  return _.times(daysInSprint).map(i => startM.clone().add(i, 'days'));\n};\nconst getDefaultBizDays = (items: Moment[]) =>\n  items\n    .filter(item => biz.isWeekDay(item))\n    .map(item => item.format('YYYY-MM-DD'));\n\nconst DayItem = ({ item, biz_days }: { item: Moment; biz_days: string[] }) => {\n  const { addBizDay, removeBizDay } = useContext(RootContext);\n  const value = item.format('YYYY-MM-DD');\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const bizDay = e.target.value;\n      e.target.checked ? addBizDay(bizDay) : removeBizDay(bizDay);\n    },\n    [addBizDay, removeBizDay]\n  );\n  return (\n    <div className=\"form-check form-check-inline\">\n      <Input\n        onChange={handleChange}\n        disabled={biz.isWeekendDay(item)}\n        id={value}\n        value={value}\n        type=\"checkbox\"\n        defaultChecked={_.includes(biz_days, value)}\n        className=\"form-check-input\"\n      />\n      <Label className=\"form-check-label\" for={value}>\n        {value}\n      </Label>\n    </div>\n  );\n};\nexport const DaysSelector = () => {\n  const {\n    state: { mid, milestones, biz_days },\n    setBizDays\n  } = useContext(RootContext);\n  const [items, setItems] = useState<Moment[]>([]);\n  useEffect(\n    () => {\n      const milestone = getMilestone(mid, milestones);\n      if (milestone) {\n        const items = getDays(milestone);\n        setItems(items);\n        if (biz_days.length <= 1) {\n          setBizDays(getDefaultBizDays(items));\n        }\n      }\n    },\n    [mid, milestones, biz_days]\n  );\n  if (items.length === 0) {\n    return null;\n  } else {\n    return (\n      <>\n        {items.map(item => (\n          <DayItem key={item.toString()} item={item} biz_days={biz_days} />\n        ))}\n      </>\n    );\n  }\n};\n","import React, { useContext, useState, useCallback } from 'react';\nimport { RootContext } from './Provider';\nimport { Form, Input, InputGroup, InputGroupAddon, Button } from 'reactstrap';\nimport { ProjectSelector } from './ProjectSelector';\nimport { MilestoneSelector } from './MilestoneSelector';\nimport { CustomValuesSelector } from './CustomValuesSelector';\nimport { DaysSelector } from './DaysSelector';\nexport const Controller = () => {\n  const { state, setUrl } = useContext(RootContext);\n  const [url, setStateUrl] = useState('');\n  const handleUrl = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setStateUrl(e.target.value);\n    },\n    [setStateUrl]\n  );\n  const handleSubmit = useCallback(\n    (e: React.FormEvent) => {\n      if (url) {\n        setUrl(url);\n      }\n      e.preventDefault();\n    },\n    [url, setUrl]\n  );\n  return (\n    <Form onSubmit={handleSubmit}>\n      <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">URL</InputGroupAddon>\n        <Input\n          defaultValue={state.url}\n          onChange={handleUrl}\n          placeholder=\"http://hostname:port\"\n        />\n        <InputGroupAddon addonType=\"append\">\n          <Button>Set</Button>\n        </InputGroupAddon>\n      </InputGroup>\n      <div className=\"row\">\n        <ProjectSelector />\n        <MilestoneSelector />\n      </div>\n      <CustomValuesSelector />\n      <DaysSelector />\n    </Form>\n  );\n};\n","import React from 'react';\nimport { Chart } from './Chart';\nimport { Controller } from './Controller';\nimport { UserTasks } from './UserTasks';\nimport { Provider } from './Provider';\nexport const App = () => (\n  <div className=\"container\">\n    <Provider>\n      <Controller />\n      <UserTasks />\n      <Chart />\n    </Provider>\n  </div>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}