{"version":3,"sources":["Controller.module.css","actions.ts","store.ts","reducer.ts","Provider.tsx","DaysSelector.tsx","UserTasks.tsx","Chart.tsx","ProjectSelector.tsx","MilestoneSelector.tsx","CustomValuesSelector.tsx","TaskStatusSelector.tsx","Controller.tsx","UnSettingTasks.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","header","ActionTypes","StorageKey","getFromStorage","key","localStorage","getItem","getFromStorageWithSubkey","subkey","concat","setToStorage","item","setItem","setToStorageWithSubkey","initialStateFn","url","URL","pid","PID","mid","MID","custom_eid","CUSTOM_EID","custom_rid","CUSTOM_RID","biz_days_str","BIZ_DAYS","biz_days","_","compact","split","sort","reject_task_status_ids","REJECT_TASK_STATUS_IDS","isOpen","custom_attrs","milestones","tasks","custom_value_map","WeakMap","updated_time","reducer","state","arguments","length","undefined","action","type","SET_URL","payload","Object","objectSpread","SET_PID","SET_MID","SET_MILESTONES","SET_CUSTOM_EID","SET_CUSTOM_ATTRS","SET_CUSTOM_RID","SET_BIZ_DAYS","join","ADD_BIZ_DAY","biz_day","chain","toConsumableArray","uniq","value","REMOVE_BIZ_DAY","reject","SET_TASKS","SET_CUSTOM_VALUE_MAP","SET_REJECT_TASK_STATUS_IDS","ADD_REJECT_TASK_STATUS_ID","reject_task_status_id","REMOVE_REJECT_TASK_STATUS_ID","OPEN_CONTROLLER","CLOSE_CONTROLLER","UPDATE_DATA","Date","now","baseUrl","replace","initialState","RootContext","createContext","setUrl","setPid","setMid","setMilestones","setCustomEid","setCustomRid","setCustomAttrs","setBizDays","addBizDay","removeBizDay","setTasks","setCustomValueMap","toggeRejectTaskStatus","task_status_id","is_reject","openController","closeController","updateData","Provider","_ref","children","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","useCallback","react_default","a","createElement","dayNameFromIdx","date","idx","getMilestone","items","find","String","id","weekClassName","day","text-danger","text-info","DayItem","_useContext","useContext","format","handleChange","e","bizDay","target","checked","isPlanning","eleId","Fragment","className","classNames","table-info","biz","isWeekDay","reactstrap_es","check","inline","onChange","disabled","isWeekendDay","defaultChecked","includes","indexOf","dayName","DaysSelector","_useContext2","_useContext2$state","_useState","useState","_useState2","setItems","useEffect","milestone","startM","moment","estimated_start","local","daysInSprint","estimated_finish","diff","times","map","i","clone","add","getDays","filter","weekdays","chunk","bordered","days","DaysSelector_DayItem","getCustomVal","task","has","val","get","Number","sum","getTaskSumByUser","eid","rid","mapValues","groupBy","getTasksByUser","r","reduce","result","getCustomAttr","UserTasks","_useContext$state","asyncToGenerator","regenerator_default","mark","_callee","_ref2","members","wrap","_context","prev","next","axios","sent","data","stop","this","taskSumByUser","customAttrE","customAttrR","unassignedSum","onClick","index_es","icon","faSyncAlt","name","username","getSumVal","Chart","setData","days_len","allTaskVal","endOf","created_date","getTaskCreated","label","estimate","finished_date","getTaskFinished","getTaskCreatedToday","ComposedChart","width","height","YAxis","XAxis","dataKey","Tooltip","Bar","fill","stackId","Line","ProjectSelector","statePid","addonType","MilestoneSelector","stateMid","params","project","_callee2","_ref4","_context2","headers","x-disable-pagination","status","CustomValuesSelector","stateEid","stateRid","_callee3","wmap","_context3","t0","Promise","all","_ref5","custom_attr_val","abrupt","_x","apply","t1","StatusItem","TaskStatusSelector","_ref3","TaskStatusSelector_StatusItem","Controller","stateUrl","setStateUrl","handleUrl","handleSubmit","preventDefault","handleHref","stopPropagation","rotation","toggle","taskboardUrl","project_extra_info","slug","getTaskboardUrl","styles","faChevronCircleRight","color","pill","getSpName","head","last","getRange","href","faExternalLinkAlt","onSubmit","defaultValue","placeholder","ProjectSelector_ProjectSelector","MilestoneSelector_MilestoneSelector","CustomValuesSelector_CustomValuesSelector","DaysSelector_DaysSelector","TaskStatusSelector_TaskStatusSelector","TaskItem","ref","tag","subject","UnSettingTasks","UnSettingTasks_TaskItem","App","Provider_Provider","Controller_Controller","UserTasks_UserTasks","UnSettingTasks_UnSettingTasks","Chart_Chart","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.859be844.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Controller_header__3vMNd\"};","export enum ActionTypes {\n  SET_URL = 'SET_URL',\n  SET_PID = 'SET_PID',\n  SET_MID = 'SET_MID',\n  SET_MILESTONES = 'SET_MILESTONES',\n  SET_CUSTOM_EID = 'SET_CUSTOM_EID',\n  SET_CUSTOM_RID = 'SET_CUSTOM_RID',\n  SET_CUSTOM_ATTRS = 'SET_CUSTOM_ATTRS',\n  SET_BIZ_DAYS = 'SET_BIZ_DAYS',\n  ADD_BIZ_DAY = 'ADD_BIZ_DAY',\n  REMOVE_BIZ_DAY = 'REMOVE_BIZ_DAY',\n  SET_TASKS = 'SET_TASKS',\n  SET_CUSTOM_VALUE_MAP = 'SET_CUSTOM_VALUE_MAP',\n  SET_REJECT_TASK_STATUS_IDS = 'SET_REJECT_TASK_STATUS_IDS',\n  ADD_REJECT_TASK_STATUS_ID = 'ADD_REJECT_TASK_STATUS',\n  REMOVE_REJECT_TASK_STATUS_ID = 'REMOVE_REJECT_TASK_STATUS',\n  OPEN_CONTROLLER = 'OPEN_CONTROLLER',\n  CLOSE_CONTROLLER = 'CLOSE_CONTROLLER',\n  UPDATE_DATA = 'UPDATE_DATA'\n}\n\nexport interface IAction {\n  type: ActionTypes;\n  payload?: any;\n  meta?: { [key: string]: any };\n}\n","import _ from 'lodash';\nexport interface ICustomAttr {\n  id: number;\n  name: string;\n}\nexport interface IMilestone {\n  id: number;\n  name: string;\n  estimated_start: string;\n  estimated_finish: string;\n  slug: string;\n  project: number;\n  project_extra_info: IProjectExtraInfo;\n}\ninterface IProjectExtraInfo {\n  id: number;\n  name: string;\n  slug: string;\n}\ninterface IStatusExtraInfo {\n  name: string;\n  is_closed: boolean;\n}\nexport interface ITask {\n  id: number;\n  assigned_to: number | null;\n  created_date: string;\n  finished_date: string;\n  is_closed: boolean;\n  subject: string;\n  ref: number;\n  project: number;\n  project_extra_info: IProjectExtraInfo;\n  status: number;\n  status_extra_info: IStatusExtraInfo;\n}\nexport interface ITaskStatus {\n  id: number;\n  name: string;\n  order: number;\n  project: number;\n  is_closed: boolean;\n  slug: string;\n}\nexport interface IAttrValue {}\nexport interface ICustomValue {\n  attributes_values: {\n    [key: number]: string;\n  };\n}\nexport interface IUser {\n  id: number;\n  username: string;\n  full_name: string;\n  full_name_display: string;\n  photo: string;\n}\nexport interface IProject {\n  id: number;\n  name: string;\n  members: IUser[];\n}\nexport type ICustomValueMap = WeakMap<ITask, ICustomValue>;\nexport interface IState {\n  url: string;\n  pid: string; // url\n  mid: string; // url\n  custom_eid: string; //  pid\n  custom_rid: string; // pid\n  custom_attrs: ICustomAttr[]; // pid\n  biz_days: string[]; //mid\n  milestones: IMilestone[]; // pid\n  tasks: ITask[]; //mid\n  custom_value_map: ICustomValueMap; // pid\n  reject_task_status_ids: string[]; // pid\n  updated_time: number;\n  isOpen: boolean;\n}\n\nexport enum StorageKey {\n  URL = 'taiga_url',\n  PID = 'taiga_pid',\n  MID = 'taiga_mid',\n  CUSTOM_EID = 'taiga_custom_eid',\n  CUSTOM_RID = 'taiga_custom_rid',\n  BIZ_DAYS = 'taiga_biz_days',\n  REJECT_TASK_STATUS_IDS = 'reject_task_status_ids'\n}\n\nexport const getFromStorage = (key: string) => localStorage.getItem(key) || '';\n\nexport const getFromStorageWithSubkey = (key: StorageKey, subkey: string) =>\n  subkey ? getFromStorage(`${subkey}/${key}`) : '';\n\nexport const setToStorage = (key: string, item: string) => {\n  localStorage.setItem(key, item);\n};\nexport const setToStorageWithSubkey = (\n  key: StorageKey,\n  subkey: string,\n  item: string\n) => {\n  subkey ? setToStorage(`${subkey}/${key}`, item) : null;\n};\nexport const initialStateFn = (): IState => {\n  const url = getFromStorage(StorageKey.URL);\n  const pid = getFromStorage(StorageKey.PID);\n  const mid = getFromStorage(StorageKey.MID);\n  const custom_eid = getFromStorageWithSubkey(StorageKey.CUSTOM_EID, pid);\n  const custom_rid = getFromStorageWithSubkey(StorageKey.CUSTOM_RID, pid);\n  const biz_days_str = getFromStorageWithSubkey(StorageKey.BIZ_DAYS, mid);\n  const biz_days = _.compact(biz_days_str.split(',')).sort();\n  const reject_task_status_ids = _.compact(\n    getFromStorageWithSubkey(StorageKey.REJECT_TASK_STATUS_IDS, pid).split(',')\n  );\n  const isOpen = !(url && pid && mid && custom_eid && custom_rid);\n  return {\n    url,\n    pid,\n    mid,\n    custom_eid,\n    custom_rid,\n    custom_attrs: [],\n    biz_days,\n    milestones: [],\n    tasks: [],\n    custom_value_map: new WeakMap(),\n    reject_task_status_ids,\n    updated_time: 0,\n    isOpen\n  };\n};\n","import _ from 'lodash';\nimport { initialStateFn, IState, StorageKey } from './store';\nimport { ActionTypes, IAction } from './actions';\nimport {\n  setToStorage,\n  setToStorageWithSubkey,\n  getFromStorageWithSubkey\n} from './store';\nexport const reducer = (state = initialStateFn(), action: IAction) => {\n  switch (action.type) {\n    case ActionTypes.SET_URL: {\n      const { url } = action.payload;\n      setToStorage(StorageKey.URL, url);\n      return { ...state, url } as IState;\n    }\n    case ActionTypes.SET_PID: {\n      const { pid } = action.payload;\n      setToStorage(StorageKey.PID, pid);\n      return {\n        ...state,\n        pid,\n        mid: '',\n        custom_eid: getFromStorageWithSubkey(StorageKey.CUSTOM_EID, pid),\n        custom_rid: getFromStorageWithSubkey(StorageKey.CUSTOM_RID, pid),\n        custom_attrs: [],\n        milestones: [],\n        custom_value_map: new WeakMap()\n      } as IState;\n    }\n    case ActionTypes.SET_MID: {\n      const { mid } = action.payload;\n      setToStorage(StorageKey.MID, mid);\n      return {\n        ...state,\n        mid,\n        tasks: [],\n        biz_days: _.compact(\n          getFromStorageWithSubkey(StorageKey.BIZ_DAYS, mid).split(',')\n        ).sort()\n      } as IState;\n    }\n    case ActionTypes.SET_MILESTONES: {\n      const { milestones } = action.payload;\n      return { ...state, milestones } as IState;\n    }\n    case ActionTypes.SET_CUSTOM_EID: {\n      const { custom_eid } = action.payload;\n      setToStorageWithSubkey(StorageKey.CUSTOM_EID, state.pid, custom_eid);\n      return { ...state, custom_eid } as IState;\n    }\n    case ActionTypes.SET_CUSTOM_ATTRS: {\n      const { custom_attrs } = action.payload;\n      return { ...state, custom_attrs } as IState;\n    }\n    case ActionTypes.SET_CUSTOM_RID: {\n      const { custom_rid } = action.payload;\n      setToStorageWithSubkey(StorageKey.CUSTOM_RID, state.pid, custom_rid);\n      return { ...state, custom_rid } as IState;\n    }\n    case ActionTypes.SET_BIZ_DAYS: {\n      const { biz_days } = action.payload;\n      setToStorageWithSubkey(\n        StorageKey.BIZ_DAYS,\n        state.mid,\n        biz_days.join(',')\n      );\n      return { ...state, biz_days } as IState;\n    }\n    case ActionTypes.ADD_BIZ_DAY: {\n      const { biz_day } = action.payload;\n      const biz_days = _.chain([...state.biz_days, biz_day])\n        .uniq()\n        .sort()\n        .value();\n      setToStorageWithSubkey(\n        StorageKey.BIZ_DAYS,\n        state.mid,\n        biz_days.join(',')\n      );\n      return { ...state, biz_days } as IState;\n    }\n    case ActionTypes.REMOVE_BIZ_DAY: {\n      const { biz_day } = action.payload;\n      const biz_days = _.reject([...state.biz_days], item => item === biz_day);\n      setToStorageWithSubkey(\n        StorageKey.BIZ_DAYS,\n        state.mid,\n        biz_days.join(',')\n      );\n      return { ...state, biz_days } as IState;\n    }\n    case ActionTypes.SET_TASKS: {\n      const { tasks } = action.payload;\n      return { ...state, tasks } as IState;\n    }\n    case ActionTypes.SET_CUSTOM_VALUE_MAP: {\n      const { custom_value_map } = action.payload;\n      return { ...state, custom_value_map } as IState;\n    }\n    case ActionTypes.SET_REJECT_TASK_STATUS_IDS: {\n      const { reject_task_status_ids } = action.payload;\n      setToStorageWithSubkey(\n        StorageKey.REJECT_TASK_STATUS_IDS,\n        state.pid,\n        reject_task_status_ids.join(',')\n      );\n      return { ...state, reject_task_status_ids } as IState;\n    }\n    case ActionTypes.ADD_REJECT_TASK_STATUS_ID: {\n      const { reject_task_status_id } = action.payload;\n      const reject_task_status_ids = _.chain([\n        ...state.reject_task_status_ids,\n        reject_task_status_id\n      ])\n        .compact()\n        .uniq()\n        .value();\n      setToStorageWithSubkey(\n        StorageKey.REJECT_TASK_STATUS_IDS,\n        state.pid,\n        reject_task_status_ids.join(',')\n      );\n      return { ...state, reject_task_status_ids } as IState;\n    }\n    case ActionTypes.REMOVE_REJECT_TASK_STATUS_ID: {\n      const { reject_task_status_id } = action.payload;\n      const reject_task_status_ids = _.reject(\n        [...state.reject_task_status_ids],\n        item => item === reject_task_status_id\n      );\n      setToStorageWithSubkey(\n        StorageKey.REJECT_TASK_STATUS_IDS,\n        state.pid,\n        reject_task_status_ids.join(',')\n      );\n      return { ...state, reject_task_status_ids } as IState;\n    }\n    case ActionTypes.OPEN_CONTROLLER: {\n      return { ...state, isOpen: true } as IState;\n    }\n    case ActionTypes.CLOSE_CONTROLLER: {\n      return { ...state, isOpen: false } as IState;\n    }\n    case ActionTypes.UPDATE_DATA: {\n      return { ...state, updated_time: Date.now() } as IState;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import React, { createContext, useReducer, useCallback } from 'react';\nimport { ActionTypes } from './actions';\nimport {\n  initialStateFn,\n  IMilestone,\n  ICustomAttr,\n  ITask,\n  ICustomValueMap\n} from './store';\nimport { reducer } from './reducer';\nimport _ from 'lodash';\nexport const baseUrl = (url: string) => `${url.replace(/[¥/]$/, '')}/api/v1`;\n\nconst initialState = initialStateFn();\nexport const RootContext = createContext({\n  state: initialState,\n  setUrl: (url: string) => {},\n  setPid: (pid: string) => {},\n  setMid: (mid: string) => {},\n  setMilestones: (milestones: IMilestone[]) => {},\n  setCustomEid: (custom_eid: string) => {},\n  setCustomRid: (custom_rid: string) => {},\n  setCustomAttrs: (custom_attrs: ICustomAttr[]) => {},\n  setBizDays: (biz_days: string[]) => {},\n  addBizDay: (biz_day: string) => {},\n  removeBizDay: (biz_day: string) => {},\n  setTasks: (tasks: ITask[]) => {},\n  setCustomValueMap: (custom_value_map: ICustomValueMap) => {},\n  toggeRejectTaskStatus: (task_status_id: string, is_reject: boolean) => {},\n  openController: () => {},\n  closeController: () => {},\n  updateData: () => {}\n});\n\nexport const Provider = ({ children }: { children: React.ReactNode }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = {\n    state,\n    setUrl: useCallback(\n      (url: string) => {\n        dispatch({ type: ActionTypes.SET_URL, payload: { url } });\n      },\n      [dispatch]\n    ),\n    setPid: useCallback(\n      (pid: string) => {\n        dispatch({ type: ActionTypes.SET_PID, payload: { pid } });\n      },\n      [dispatch]\n    ),\n    setMid: useCallback(\n      (mid: string) => {\n        dispatch({ type: ActionTypes.SET_MID, payload: { mid } });\n      },\n      [dispatch]\n    ),\n    setMilestones: useCallback(\n      (milestones: IMilestone[]) => {\n        dispatch({ type: ActionTypes.SET_MILESTONES, payload: { milestones } });\n      },\n      [dispatch]\n    ),\n    setCustomEid: useCallback(\n      (custom_eid: string) => {\n        dispatch({ type: ActionTypes.SET_CUSTOM_EID, payload: { custom_eid } });\n      },\n      [dispatch]\n    ),\n    setCustomRid: useCallback(\n      (custom_rid: string) => {\n        dispatch({ type: ActionTypes.SET_CUSTOM_RID, payload: { custom_rid } });\n      },\n      [dispatch]\n    ),\n    setCustomAttrs: useCallback(\n      (custom_attrs: ICustomAttr[]) => {\n        dispatch({\n          type: ActionTypes.SET_CUSTOM_ATTRS,\n          payload: { custom_attrs }\n        });\n      },\n      [dispatch]\n    ),\n    setBizDays: useCallback(\n      (biz_days: string[]) => {\n        dispatch({ type: ActionTypes.SET_BIZ_DAYS, payload: { biz_days } });\n      },\n      [dispatch]\n    ),\n    addBizDay: useCallback(\n      (biz_day: string) => {\n        dispatch({ type: ActionTypes.ADD_BIZ_DAY, payload: { biz_day } });\n      },\n      [dispatch]\n    ),\n    removeBizDay: useCallback(\n      (biz_day: string) => {\n        dispatch({ type: ActionTypes.REMOVE_BIZ_DAY, payload: { biz_day } });\n      },\n      [dispatch]\n    ),\n    setTasks: useCallback(\n      (tasks: ITask[]) => {\n        dispatch({ type: ActionTypes.SET_TASKS, payload: { tasks } });\n      },\n      [dispatch]\n    ),\n    setCustomValueMap: useCallback(\n      (custom_value_map: ICustomValueMap) => {\n        dispatch({\n          type: ActionTypes.SET_CUSTOM_VALUE_MAP,\n          payload: { custom_value_map }\n        });\n      },\n      [dispatch]\n    ),\n    toggeRejectTaskStatus: useCallback(\n      (reject_task_status_id: string, is_reject: boolean) => {\n        const type = is_reject\n          ? ActionTypes.ADD_REJECT_TASK_STATUS_ID\n          : ActionTypes.REMOVE_REJECT_TASK_STATUS_ID;\n        dispatch({\n          type,\n          payload: { reject_task_status_id }\n        });\n      },\n      [dispatch]\n    ),\n    openController: useCallback(\n      () => {\n        dispatch({ type: ActionTypes.OPEN_CONTROLLER });\n      },\n      [dispatch]\n    ),\n    closeController: useCallback(\n      () => {\n        dispatch({ type: ActionTypes.CLOSE_CONTROLLER });\n      },\n      [dispatch]\n    ),\n    updateData: useCallback(\n      () => {\n        dispatch({\n          type: ActionTypes.UPDATE_DATA\n        });\n      },\n      [dispatch]\n    )\n  };\n  return <RootContext.Provider value={value}>{children}</RootContext.Provider>;\n};\n","import React, { useEffect, useState, useContext, useCallback } from 'react';\nimport classNames from 'classnames';\nimport {\n  UncontrolledTooltip,\n  Table,\n  Card,\n  CardHeader,\n  Input,\n  Label,\n  FormGroup,\n  Badge\n} from 'reactstrap';\nimport { IMilestone } from './store';\nimport { RootContext } from './Provider';\nimport moment, { Moment } from 'moment';\nimport biz from 'moment-business';\nimport _ from 'lodash';\nexport const isToday = (date: string) => {\n  moment()\n    .local()\n    .format('YYYY-MM-DD') ===\n    moment(date)\n      .local()\n      .format('YYYY-MM-DD');\n};\nexport const dayNameFromIdx = (date: string, idx: number) => {\n  if (idx === -1) {\n    return '';\n  }\n  if (idx === 0) {\n    return 'Planning';\n  }\n  return `Day ${idx}`;\n};\n\nexport const dayName = (date: string, biz_days: string[]) => {\n  const idx = biz_days.indexOf(date);\n  return dayNameFromIdx(date, idx);\n};\nexport const getMilestone = (mid: string, items: IMilestone[]) =>\n  items.find(item => String(item.id) === mid);\nconst getDays = (item: IMilestone) => {\n  const startM = moment(item.estimated_start).local();\n  const finishM = moment(item.estimated_finish).local();\n  const daysInSprint = finishM.diff(startM, 'days');\n  return _.times(daysInSprint).map(i => startM.clone().add(i, 'days'));\n};\nconst getDefaultBizDays = (items: Moment[]) =>\n  items\n    .filter(item => biz.isWeekDay(item))\n    .map(item => item.format('YYYY-MM-DD'));\n\nconst weekClassName = (day: number) => ({\n  'text-danger': day === 0,\n  'text-info': day === 6\n});\n\nconst DayItem = ({\n  item,\n  biz_days,\n  idx\n}: {\n  item: Moment | null;\n  biz_days: string[];\n  idx: number;\n}) => {\n  if (!item) {\n    return (\n      <td>\n        <br />\n      </td>\n    );\n  }\n  const { addBizDay, removeBizDay } = useContext(RootContext);\n  const value = item.format('YYYY-MM-DD');\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const bizDay = e.target.value;\n      e.target.checked ? addBizDay(bizDay) : removeBizDay(bizDay);\n    },\n    [addBizDay, removeBizDay]\n  );\n  const isPlanning = value === biz_days[0];\n  const eleId = `biz-day-${value}`;\n  return (\n    <>\n      <td\n        className={classNames(weekClassName(idx), { 'table-info': isPlanning })}\n        id={eleId}\n      >\n        {biz.isWeekDay(item) ? (\n          <FormGroup check inline>\n            <Label check>\n              <Input\n                onChange={handleChange}\n                disabled={biz.isWeekendDay(item)}\n                value={value}\n                type=\"checkbox\"\n                defaultChecked={_.includes(biz_days, value)}\n                className=\"form-check-input\"\n              />\n              {value}\n            </Label>\n          </FormGroup>\n        ) : (\n          <span>{value}</span>\n        )}\n      </td>\n      {_.includes(biz_days, value) ? (\n        <UncontrolledTooltip target={eleId}>\n          {dayName(value, biz_days)}\n        </UncontrolledTooltip>\n      ) : null}\n    </>\n  );\n};\n\nexport const DaysSelector = () => {\n  const {\n    state: { mid, milestones, biz_days },\n    setBizDays\n  } = useContext(RootContext);\n  const [items, setItems] = useState<Moment[]>([]);\n  useEffect(\n    () => {\n      const milestone = getMilestone(mid, milestones);\n      if (milestone) {\n        const items = getDays(milestone);\n        setItems(items);\n        if (biz_days.length <= 1) {\n          setBizDays(getDefaultBizDays(items));\n        }\n      }\n    },\n    [mid, milestones, biz_days]\n  );\n  if (items.length === 0) {\n    return null;\n  } else {\n    const weekdays = _.chunk(\n      [..._.times(items[0].day(), () => null), ...items],\n      7\n    );\n    return (\n      <Card>\n        <CardHeader>Business Days</CardHeader>\n        <Table bordered>\n          <thead>\n            <tr>\n              {moment.weekdays().map((item, idx) => (\n                <th\n                  key={idx}\n                  className={classNames('text-center', weekClassName(idx))}\n                >\n                  {item}\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {weekdays.map((days, i) => (\n              <tr key={i}>\n                {days.map((item, idx) => (\n                  <DayItem\n                    idx={idx}\n                    key={idx}\n                    item={item}\n                    biz_days={biz_days}\n                  />\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Card>\n    );\n  }\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { ICustomValueMap, IProject, IUser, ITask, ICustomAttr } from './store';\nimport { RootContext, baseUrl } from './Provider';\nimport { Table, Button } from 'reactstrap';\nimport _ from 'lodash';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSyncAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst getTasksByUser = (items: ITask[]) => _.groupBy(items, 'assigned_to');\nexport const parseCustomVal = (val: string) =>\n  _.chain(val)\n    .replace(/[^0-9.+,]/g, '')\n    .replace(/[+]/g, ',')\n    .split(',')\n    .compact()\n    .map(Number)\n    .sum()\n    .value();\n\nexport const getCustomVal = (\n  custom_value_map: ICustomValueMap,\n  task: ITask,\n  id: number\n) => {\n  if (custom_value_map.has(task)) {\n    return parseCustomVal(\n      _.get(custom_value_map.get(task), `attributes_values.${id}`, '0')\n    );\n  } else {\n    return 0;\n  }\n};\n\nconst getTaskSumByUser = (\n  items: ITask[],\n  custom_value_map: ICustomValueMap,\n  custom_eid: string,\n  custom_rid: string\n) => {\n  const eid = Number(custom_eid);\n  const rid = Number(custom_rid);\n  const tasksByUser = _.mapValues(getTasksByUser(items), tasks =>\n    _.chain(tasks)\n      .map(task => ({\n        e: getCustomVal(custom_value_map, task, eid),\n        r: getCustomVal(custom_value_map, task, rid)\n      }))\n      .reduce((result, val) => ({ e: result.e + val.e, r: result.r + val.r }), {\n        e: 0,\n        r: 0\n      })\n      .value()\n  );\n  return tasksByUser;\n};\nconst getCustomAttr = (items: ICustomAttr[], id: number) =>\n  items.find(item => item.id === id);\nexport const UserTasks = () => {\n  const {\n    state: {\n      url,\n      pid,\n      tasks,\n      custom_value_map,\n      custom_attrs,\n      custom_eid,\n      custom_rid\n    },\n    updateData\n  } = useContext(RootContext);\n  const [items, setItems] = useState<IUser[]>([]);\n  useEffect(\n    () => {\n      if (url && pid) {\n        (async () => {\n          const {\n            data: { members }\n          } = await axios.get<IProject>(`${baseUrl(url)}/projects/${pid}`);\n          setItems(members);\n        })();\n      }\n    },\n    [url, pid, setItems]\n  );\n  const taskSumByUser = getTaskSumByUser(\n    tasks,\n    custom_value_map,\n    custom_eid,\n    custom_rid\n  );\n  const customAttrE = getCustomAttr(custom_attrs, Number(custom_eid));\n  const customAttrR = getCustomAttr(custom_attrs, Number(custom_rid));\n  if (!customAttrE || !customAttrR) {\n    return null;\n  }\n  const unassignedSum = _.get(taskSumByUser, 'null.e', 0);\n  return (\n    <>\n      <div className=\"text-right\">\n        <Button onClick={updateData}>\n          <FontAwesomeIcon icon={faSyncAlt} />\n        </Button>\n      </div>\n      <Table bordered>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>{customAttrE.name}</th>\n            <th>{customAttrR.name}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map(item => (\n            <tr key={item.id}>\n              <td>{item.username}</td>\n              <td className=\"text-right\">\n                {_.get(taskSumByUser, `${item.id}.e`)}\n              </td>\n              <td className=\"text-right\">\n                {_.get(taskSumByUser, `${item.id}.r`)}\n              </td>\n            </tr>\n          ))}\n          <tr key=\"null\">\n            <td>unassigned</td>\n            <td className=\"text-right text-danger\">{unassignedSum}</td>\n            <td />\n          </tr>\n        </tbody>\n      </Table>\n    </>\n  );\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport {\n  ComposedChart,\n  Tooltip,\n  Legend,\n  Line,\n  XAxis,\n  YAxis,\n  Bar\n} from 'recharts';\nimport { ITask, ICustomValueMap } from './store';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { RootContext } from './Provider';\nimport { dayNameFromIdx } from './DaysSelector';\nimport { getCustomVal } from './UserTasks';\nimport { Card, CardHeader } from 'reactstrap';\ninterface IChartItem {\n  label: string;\n  estimate: number;\n  result?: number;\n  add?: number;\n}\n\nconst getTaskFinished = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      task.finished_date\n        ? moment(date)\n            .local()\n            .endOf('days')\n            .diff(moment(task.finished_date)) > 0\n        : false\n  );\n\nconst getTaskCreatedToday = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      moment(date)\n        .local()\n        .format('YYYY-MM-DD') ===\n      moment(task.created_date)\n        .local()\n        .format('YYYY-MM-DD')\n  );\n\nconst getTaskCreated = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      moment(date)\n        .endOf('days')\n        .diff(moment(task.created_date)) > 0\n  );\n\nconst getSumVal = (\n  custom_value_map: ICustomValueMap,\n  tasks: ITask[],\n  custom_eid: string\n) => {\n  return _.chain(tasks)\n    .map(task => getCustomVal(custom_value_map, task, Number(custom_eid)))\n    .sum()\n    .value();\n};\nexport const Chart = () => {\n  const [data, setData] = useState<IChartItem[]>([]);\n  const {\n    state: { tasks, biz_days, custom_value_map, custom_eid }\n  } = useContext(RootContext);\n  useEffect(\n    () => {\n      const days_len = biz_days.length;\n      if (days_len > 0 && tasks.length > 0 && custom_eid) {\n        const allTaskVal = getSumVal(\n          custom_value_map,\n          getTaskCreated(tasks, biz_days[0]),\n          custom_eid\n        );\n        const data = biz_days.map((day, idx) => {\n          const label = dayNameFromIdx(day, idx);\n          const estimate = allTaskVal - (allTaskVal * idx) / (days_len - 1);\n          if (\n            moment()\n              .local()\n              .endOf('days')\n              .diff(moment(day)) > 0\n          ) {\n            const result =\n              allTaskVal -\n              getSumVal(\n                custom_value_map,\n                getTaskFinished(tasks, day),\n                custom_eid\n              );\n            const add =\n              idx === 0\n                ? 0\n                : getSumVal(\n                    custom_value_map,\n                    getTaskCreatedToday(tasks, day),\n                    custom_eid\n                  );\n            return { label, estimate, result, add };\n          } else {\n            return { label, estimate };\n          }\n        });\n        setData(data);\n      } else {\n        setData([]);\n      }\n    },\n    [tasks, biz_days, custom_eid, custom_value_map, setData]\n  );\n  if (data.length === 0) {\n    return null;\n  } else {\n    return (\n      <Card>\n        <CardHeader>Burn down chart</CardHeader>\n        <ComposedChart data={data} width={800} height={400}>\n          <YAxis />\n          <XAxis dataKey=\"label\" />\n          <Tooltip />\n          <Bar dataKey=\"result\" fill=\"#8884d8\" stackId=\"a\" />\n          <Bar dataKey=\"add\" fill=\"#82ca9d\" stackId=\"a\" />\n          <Line dataKey=\"estimate\" />\n        </ComposedChart>\n      </Card>\n    );\n  }\n};\n","import React, { useCallback, useEffect, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { Input, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { RootContext, baseUrl } from './Provider';\nimport { IProject } from './store';\nexport const ProjectSelector = () => {\n  const {\n    state: { url, pid: statePid },\n    setPid\n  } = useContext(RootContext);\n  const [items, setItems] = useState<IProject[]>([]);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const pid = e.target.value;\n      if (pid) {\n        setPid(pid);\n      }\n    },\n    [setPid]\n  );\n  useEffect(\n    () => {\n      if (url) {\n        (async () => {\n          const { data: items } = await axios.get(`${baseUrl(url)}/projects`);\n          setItems(items);\n        })();\n      }\n    },\n    [url, setItems]\n  );\n\n  return (\n    <InputGroup className=\"col\">\n      <InputGroupAddon addonType=\"prepend\">Project</InputGroupAddon>\n      <Input value={statePid} type=\"select\" onChange={handleChange}>\n        <option value=\"\"> --- </option>\n        {items.map(item => (\n          <option key={item.id} value={item.id}>\n            {item.name}\n          </option>\n        ))}\n      </Input>\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useEffect, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { Input, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { RootContext, baseUrl } from './Provider';\nimport { IMilestone, ITask } from './store';\nimport _ from 'lodash';\n\nexport const MilestoneSelector = () => {\n  const {\n    state: { url, pid, mid: stateMid, updated_time, reject_task_status_ids },\n    setMid,\n    setMilestones,\n    setTasks\n  } = useContext(RootContext);\n  const [items, setItems] = useState<IMilestone[]>([]);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        setMid(id);\n      }\n    },\n    [setMid, items]\n  );\n  useEffect(\n    () => {\n      if (url && pid) {\n        (async () => {\n          const { data: items } = await axios.get(\n            `${baseUrl(url)}/milestones`,\n            { params: { project: pid } }\n          );\n          setItems(items);\n          setMilestones(items);\n        })();\n      }\n    },\n    [url, pid]\n  );\n  useEffect(\n    () => {\n      if (url && stateMid) {\n        (async () => {\n          const { data: items } = await axios.get<ITask[]>(\n            `${baseUrl(url)}/tasks`,\n            {\n              headers: {\n                'x-disable-pagination': true\n              },\n              params: {\n                milestone: stateMid\n              }\n            }\n          );\n          const tasks = items.filter(\n            item => !_.includes(reject_task_status_ids, String(item.status))\n          );\n          setTasks(tasks);\n        })();\n      }\n    },\n    [url, stateMid, updated_time, reject_task_status_ids]\n  );\n\n  return (\n    <InputGroup className=\"col\">\n      <InputGroupAddon addonType=\"prepend\">Sprint</InputGroupAddon>\n      <Input type=\"select\" value={stateMid} onChange={handleChange}>\n        <option value=\"\"> --- </option>\n        {items.map(item => (\n          <option key={item.id} value={item.id}>\n            {item.name}\n          </option>\n        ))}\n      </Input>\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useEffect, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { Input, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { ITask, ICustomValue, ICustomAttr } from './store';\nimport { RootContext, baseUrl } from './Provider';\n\nexport const CustomValuesSelector = () => {\n  const {\n    state: { url, pid, custom_eid: stateEid, custom_rid: stateRid, tasks },\n    setCustomEid,\n    setCustomRid,\n    setCustomAttrs,\n    setCustomValueMap\n  } = useContext(RootContext);\n  const [items, setItems] = useState<ICustomAttr[]>([]);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        switch (e.target.name) {\n          case 'eid': {\n            setCustomEid(id);\n            break;\n          }\n          case 'rid': {\n            setCustomRid(id);\n            break;\n          }\n        }\n      }\n    },\n    [setCustomEid, setCustomRid]\n  );\n  useEffect(\n    () => {\n      if (url && pid) {\n        (async () => {\n          const { data: items } = await axios.get(\n            `${baseUrl(url)}/task-custom-attributes`,\n            { params: { project: pid } }\n          );\n          setItems(items);\n          setCustomAttrs(items);\n        })();\n      }\n    },\n    [url, pid, setItems, setCustomAttrs]\n  );\n  useEffect(\n    () => {\n      if (url && tasks.length && stateEid && stateRid) {\n        (async () => {\n          const wmap = new WeakMap(\n            await Promise.all(\n              tasks.map(async item => {\n                const { data: custom_attr_val } = await axios.get(\n                  `${baseUrl(url)}/tasks/custom-attributes-values/${item.id}`\n                );\n                return [item, custom_attr_val] as [ITask, ICustomValue];\n              })\n            )\n          );\n          setCustomValueMap(wmap);\n        })();\n      }\n    },\n    [url, tasks, stateEid, stateRid, setCustomValueMap]\n  );\n\n  return (\n    <div className=\"row\">\n      <InputGroup className=\"col\">\n        <InputGroupAddon addonType=\"prepend\">Estimate</InputGroupAddon>\n        <Input\n          value={stateEid}\n          name=\"eid\"\n          type=\"select\"\n          onChange={handleChange}\n        >\n          <option value=\"\"> --- </option>\n          {items.map(item => (\n            <option key={item.id} value={item.id}>\n              {item.name}\n            </option>\n          ))}\n        </Input>\n      </InputGroup>\n      <InputGroup className=\"col\">\n        <InputGroupAddon addonType=\"prepend\">Result</InputGroupAddon>\n        <Input\n          value={stateRid}\n          name=\"rid\"\n          type=\"select\"\n          onChange={handleChange}\n        >\n          <option> --- </option>\n          {items.map(item => (\n            <option key={item.id} value={item.id}>\n              {item.name}\n            </option>\n          ))}\n        </Input>\n      </InputGroup>\n    </div>\n  );\n};\n","import React, { useCallback, useEffect, useContext, useState } from 'react';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport { RootContext, baseUrl } from './Provider';\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Form,\n  Input,\n  FormGroup,\n  Label\n} from 'reactstrap';\nimport { ITaskStatus } from './store';\nconst StatusItem = ({ item }: { item: ITaskStatus }) => {\n  const {\n    state: { reject_task_status_ids },\n    toggeRejectTaskStatus\n  } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      toggeRejectTaskStatus(String(id), !e.target.checked);\n    },\n    [toggeRejectTaskStatus]\n  );\n  return (\n    <FormGroup check inline>\n      <Label check>\n        <Input\n          onChange={handleChange}\n          type=\"checkbox\"\n          value={item.id}\n          defaultChecked={!_.includes(reject_task_status_ids, String(item.id))}\n        />\n        {item.name}\n      </Label>\n    </FormGroup>\n  );\n};\nexport const TaskStatusSelector = () => {\n  const {\n    state: { url, pid }\n  } = useContext(RootContext);\n  const [items, setItems] = useState<ITaskStatus[]>([]);\n  useEffect(\n    () => {\n      if (url && pid) {\n        (async () => {\n          const { data: items } = await axios.get(\n            `${baseUrl(url)}/task-statuses`,\n            {\n              params: { project: pid }\n            }\n          );\n          setItems(items);\n        })();\n      }\n    },\n    [url, pid]\n  );\n  if (items.length === 0) {\n    return null;\n  }\n  return (\n    <Card>\n      <CardHeader>Task status</CardHeader>\n      <CardBody>\n        {items.map(item => (\n          <StatusItem key={item.id} item={item} />\n        ))}\n      </CardBody>\n    </Card>\n  );\n};\n","import React, { useContext, useState, useCallback } from 'react';\nimport _ from 'lodash';\nimport classNames from 'classnames';\nimport { RootContext } from './Provider';\nimport {\n  Card,\n  CardHeader,\n  Collapse,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Button,\n  Badge\n} from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faChevronCircleRight,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport { ProjectSelector } from './ProjectSelector';\nimport { MilestoneSelector } from './MilestoneSelector';\nimport { CustomValuesSelector } from './CustomValuesSelector';\nimport { DaysSelector, getMilestone } from './DaysSelector';\nimport { TaskStatusSelector } from './TaskStatusSelector';\nimport { IMilestone } from './store';\nimport styles from './Controller.module.css';\nconst getSpName = (mid: string, items: IMilestone[]) =>\n  _.get(getMilestone(mid, items), 'name', '');\nconst getTaskboardUrl = (url: string, mid: string, items: IMilestone[]) => {\n  const milestone = getMilestone(mid, items);\n  if (url && milestone) {\n    return `${url}/project/${milestone.project_extra_info.slug}/taskboard/${\n      milestone.slug\n    }`;\n  } else {\n    return '';\n  }\n};\n\nconst getRange = (biz_days: string[]) => {\n  if (biz_days.length > 1) {\n    return `[${_.head(biz_days)} - ${_.last(biz_days)}]`;\n  } else {\n    return '';\n  }\n};\nexport const Controller = () => {\n  const {\n    state: { url: stateUrl, isOpen, mid, milestones, biz_days },\n    setUrl,\n    openController,\n    closeController\n  } = useContext(RootContext);\n  const [url, setStateUrl] = useState('');\n  const handleUrl = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setStateUrl(e.target.value);\n    },\n    [setStateUrl]\n  );\n  const handleSubmit = useCallback(\n    (e: React.FormEvent) => {\n      if (url) {\n        setUrl(url);\n      }\n      e.preventDefault();\n    },\n    [url, setUrl]\n  );\n  const handleHref = useCallback((e: React.FormEvent) => {\n    e.stopPropagation();\n  }, []);\n  const rotation = isOpen ? 90 : undefined;\n  const toggle = useCallback(\n    () => {\n      if (isOpen) {\n        closeController();\n      } else {\n        openController();\n      }\n    },\n    [openController, closeController, isOpen]\n  );\n  const taskboardUrl = getTaskboardUrl(stateUrl, mid, milestones);\n  return (\n    <Card>\n      <CardHeader className={classNames(styles.header)} onClick={toggle}>\n        <FontAwesomeIcon rotation={rotation} icon={faChevronCircleRight} />\n        <Badge color=\"primary\" pill className=\"p-1 m-1\">\n          <span>{getSpName(mid, milestones)}</span>\n        </Badge>\n        <Badge className=\"p-1 m-1\">\n          <span>{getRange(biz_days)}</span>\n        </Badge>\n        {taskboardUrl ? (\n          <a\n            target=\"_blank\"\n            onClick={handleHref}\n            className=\"float-right\"\n            href={taskboardUrl}\n          >\n            <FontAwesomeIcon className=\"mr-1\" icon={faExternalLinkAlt} />\n            Taskboard\n          </a>\n        ) : null}\n      </CardHeader>\n      <Collapse isOpen={isOpen}>\n        <Form onSubmit={handleSubmit}>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">URL</InputGroupAddon>\n            <Input\n              defaultValue={stateUrl}\n              onChange={handleUrl}\n              placeholder=\"http://hostname:port\"\n            />\n            <InputGroupAddon addonType=\"append\">\n              <Button>Set</Button>\n            </InputGroupAddon>\n          </InputGroup>\n        </Form>\n        <div className=\"row\">\n          <ProjectSelector />\n          <MilestoneSelector />\n        </div>\n        <CustomValuesSelector />\n        <DaysSelector />\n        <TaskStatusSelector />\n      </Collapse>\n    </Card>\n  );\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport { RootContext } from './Provider';\nimport { ITask } from './store';\nimport { ListGroup, ListGroupItem, Card, CardHeader } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\nimport { getCustomVal } from './UserTasks';\nconst TaskItem = ({ url, item }: { item: ITask; url: string }) => {\n  const {\n    project_extra_info: { slug }\n  } = item;\n  const href = `${url}/project/${slug}/task/${item.ref}`;\n  return (\n    <ListGroupItem tag=\"a\" target=\"_blank\" href={href}>\n      <FontAwesomeIcon icon={faExternalLinkAlt} /> {item.subject}\n    </ListGroupItem>\n  );\n};\nexport const UnSettingTasks = () => {\n  const {\n    state: { url, tasks, custom_value_map, custom_eid }\n  } = useContext(RootContext);\n  const [items, setItems] = useState<ITask[]>([]);\n  useEffect(\n    () => {\n      if (tasks.length > 0 && custom_eid) {\n        const eid = Number(custom_eid);\n        const items = tasks.filter(\n          task => getCustomVal(custom_value_map, task, eid) === 0\n        );\n        if (tasks.length > items.length) {\n          setItems(items);\n        }\n      }\n    },\n    [tasks, custom_value_map, custom_eid]\n  );\n  if (items.length === 0) {\n    return null;\n  } else {\n    return (\n      <Card>\n        <CardHeader>Unsetting tasks</CardHeader>\n        <ListGroup>\n          {items.map(item => (\n            <TaskItem url={url} key={item.id} item={item} />\n          ))}\n        </ListGroup>\n      </Card>\n    );\n  }\n};\n","import React from 'react';\nimport { Chart } from './Chart';\nimport { Controller } from './Controller';\nimport { UserTasks } from './UserTasks';\nimport { UnSettingTasks } from './UnSettingTasks';\nimport { Provider } from './Provider';\nexport const App = () => (\n  <div className=\"container\">\n    <Provider>\n      <Controller />\n      <UserTasks />\n      <UnSettingTasks />\n      <Chart />\n    </Provider>\n  </div>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}