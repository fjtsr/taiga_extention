{"version":3,"sources":["Controller.module.css","actions.ts","store.ts","reducer.ts","Provider.tsx","DaysSelector.tsx","UserTasks.tsx","Chart.tsx","ProjectSelector.tsx","MilestoneSelector.tsx","CustomValuesSelector.tsx","TaskStatusSelector.tsx","Controller.tsx","UnSetTasks.tsx","App.tsx","serviceWorker.ts","index.tsx","UserTasks.module.css"],"names":["module","exports","header","ActionTypes","StorageKey","getFromStorage","key","localStorage","getItem","getFromStorageWithSubkey","subkey","concat","setToStorage","item","setItem","setToStorageWithSubkey","initialStateFn","url","URL","pid","PID","mid","MID","custom_eid","CUSTOM_EID","custom_rid","CUSTOM_RID","biz_days_str","BIZ_DAYS","biz_days","_","compact","split","sort","reject_task_status_ids","REJECT_TASK_STATUS_IDS","isOpen","custom_attrs","milestones","tasks","task_status","custom_value_map","WeakMap","updated_time","reducer","state","arguments","length","undefined","action","type","SET_URL","payload","Object","objectSpread","SET_PID","SET_MID","SET_MILESTONES","SET_CUSTOM_EID","SET_CUSTOM_ATTRS","SET_CUSTOM_RID","SET_BIZ_DAYS","join","ADD_BIZ_DAY","biz_day","chain","toConsumableArray","uniq","value","REMOVE_BIZ_DAY","reject","SET_TASKS","SET_TASK_STATUS","SET_CUSTOM_VALUE_MAP","SET_REJECT_TASK_STATUS_IDS","ADD_REJECT_TASK_STATUS_ID","reject_task_status_id","REMOVE_REJECT_TASK_STATUS_ID","OPEN_CONTROLLER","CLOSE_CONTROLLER","UPDATE_DATA","Date","now","baseUrl","replace","initialState","RootContext","createContext","setUrl","setPid","setMid","setMilestones","setCustomEid","setCustomRid","setCustomAttrs","setBizDays","addBizDay","removeBizDay","setTasks","setTaskStatus","setCustomValueMap","toggeRejectTaskStatus","task_status_id","is_reject","openController","closeController","updateData","Provider","_ref","children","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","useCallback","react_default","a","createElement","dayNameFromIdx","date","idx","getMilestone","items","find","String","id","weekClassName","day","text-danger","text-info","DayItem","_useContext","useContext","format","handleChange","e","bizDay","target","checked","isPlanning","eleId","Fragment","className","classNames","table-info","biz","isWeekDay","reactstrap_es","check","inline","onChange","disabled","isWeekendDay","includes","indexOf","dayName","DaysSelector","_useContext2","_useContext2$state","_useState","useState","_useState2","setItems","useEffect","milestone","startM","moment","estimated_start","local","daysInSprint","estimated_finish","diff","times","map","i","clone","add","getDays","filter","weekdays","chunk","bordered","days","DaysSelector_DayItem","barStyles","getTasksByUser","groupBy","getCustomVal","task","has","val","get","Number","sum","NameAndWorkLoad","username","total","imgSrc","styles","avator","src","icon","tblCls","faGrinBeam","faGrinBeamSweat","faDizzy","index_es","Medal","_ref2","_getGrade","r","isNumber","Math","abs","getGrade","_getGrade2","grade","num","faMedal","UserRow","_ref3","sums","isPast","hpd","closedTasks","_useContext$state","customTotal","setTotal","_useState3","_useState4","progressTotal","setProgressTotal","sumItem","margedTotal","totalStr","photo","random","closed_status","is_closed","orderBy","reverse","closedTotals","mapValues","ts","reduce","result","t","status","label","status_extra_info","name","style","sortedTotals","UserTasks_NameAndWorkLoad","custom_input_td","bsSize","step","multi","bar","color","max","UserTasks_Medal","getCustomAttr","UserTasks","_useState5","_useState6","_useState7","_useState8","setHpd","_useState9","_useState10","activeLen","asyncToGenerator","regenerator_default","mark","_callee","_ref5","members","wrap","_context","prev","next","axios","sent","data","stop","this","disableSubmit","preventDefault","stopPropagation","taskSumByUser","eid","rid","getTaskSumByUser","customAttrE","customAttrR","unassignedSum","last","endOf","tasksByUser","getClosedTasks","light","onSubmit","placeholder","addonType","faTimes","faEquals","onClick","faSyncAlt","UserTasks_UserRow","getSumVal","Chart","setData","days_len","allTaskVal","created_date","getTaskCreated","estimate","finished_date","getTaskFinished","getTaskCreatedToday","ComposedChart","width","height","YAxis","XAxis","dataKey","Tooltip","Bar","fill","stackId","Line","ProjectSelector","statePid","MilestoneSelector","stateMid","params","project","_callee2","_ref4","_context2","headers","x-disable-pagination","CustomValuesSelector","stateEid","stateRid","_callee3","wmap","_context3","t0","Promise","all","custom_attr_val","abrupt","_x","apply","t1","StatusItem","defaultChecked","TaskStatusSelector","TaskStatusSelector_StatusItem","Controller","stateUrl","setStateUrl","handleUrl","handleSubmit","handleHref","rotation","toggle","taskboardUrl","project_extra_info","slug","getTaskboardUrl","faChevronCircleRight","pill","getSpName","head","getRange","href","faExternalLinkAlt","defaultValue","ProjectSelector_ProjectSelector","MilestoneSelector_MilestoneSelector","CustomValuesSelector_CustomValuesSelector","DaysSelector_DaysSelector","TaskStatusSelector_TaskStatusSelector","TaskItem","ref","tag","subject","UnSettingTasks","UnSetTasks_TaskItem","App","Provider_Provider","Controller_Controller","UserTasks_UserTasks","UnSetTasks_UnSettingTasks","Chart_Chart","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","gold","silver","bronze"],"mappings":"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","file":"static/js/main.c822aad6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Controller_header__3vMNd\"};","export enum ActionTypes {\n  SET_URL = 'SET_URL',\n  SET_PID = 'SET_PID',\n  SET_MID = 'SET_MID',\n  SET_MILESTONES = 'SET_MILESTONES',\n  SET_CUSTOM_EID = 'SET_CUSTOM_EID',\n  SET_CUSTOM_RID = 'SET_CUSTOM_RID',\n  SET_CUSTOM_ATTRS = 'SET_CUSTOM_ATTRS',\n  SET_BIZ_DAYS = 'SET_BIZ_DAYS',\n  ADD_BIZ_DAY = 'ADD_BIZ_DAY',\n  REMOVE_BIZ_DAY = 'REMOVE_BIZ_DAY',\n  SET_TASKS = 'SET_TASKS',\n  SET_TASK_STATUS = 'SET_TASK_STATUS',\n  SET_CUSTOM_VALUE_MAP = 'SET_CUSTOM_VALUE_MAP',\n  SET_REJECT_TASK_STATUS_IDS = 'SET_REJECT_TASK_STATUS_IDS',\n  ADD_REJECT_TASK_STATUS_ID = 'ADD_REJECT_TASK_STATUS',\n  REMOVE_REJECT_TASK_STATUS_ID = 'REMOVE_REJECT_TASK_STATUS',\n  OPEN_CONTROLLER = 'OPEN_CONTROLLER',\n  CLOSE_CONTROLLER = 'CLOSE_CONTROLLER',\n  UPDATE_DATA = 'UPDATE_DATA'\n}\n\nexport interface IAction {\n  type: ActionTypes;\n  payload?: any;\n  meta?: { [key: string]: any };\n}\n","import _ from 'lodash';\nexport interface ICustomAttr {\n  id: number;\n  name: string;\n}\nexport interface IMilestone {\n  id: number;\n  name: string;\n  estimated_start: string;\n  estimated_finish: string;\n  slug: string;\n  project: number;\n  project_extra_info: IProjectExtraInfo;\n}\ninterface IProjectExtraInfo {\n  id: number;\n  name: string;\n  slug: string;\n}\ninterface IStatusExtraInfo {\n  name: string;\n  is_closed: boolean;\n}\nexport interface ITask {\n  id: number;\n  assigned_to: number | null;\n  created_date: string;\n  finished_date: string;\n  is_closed: boolean;\n  subject: string;\n  ref: number;\n  project: number;\n  project_extra_info: IProjectExtraInfo;\n  status: number;\n  status_extra_info: IStatusExtraInfo;\n}\nexport interface ITaskStatus {\n  id: number;\n  name: string;\n  order: number;\n  project: number;\n  is_closed: boolean;\n  slug: string;\n}\nexport interface IAttrValue {}\nexport interface ICustomValue {\n  attributes_values: {\n    [key: number]: string;\n  };\n}\nexport interface IUser {\n  id: number;\n  username: string;\n  full_name: string;\n  full_name_display: string;\n  photo: string;\n}\nexport interface IProject {\n  id: number;\n  name: string;\n  members: IUser[];\n}\nexport type ICustomValueMap = WeakMap<ITask, ICustomValue>;\nexport interface IState {\n  url: string;\n  pid: string; // url\n  mid: string; // url\n  custom_eid: string; //  pid\n  custom_rid: string; // pid\n  custom_attrs: ICustomAttr[]; // pid\n  biz_days: string[]; //mid\n  milestones: IMilestone[]; // pid\n  tasks: ITask[]; //mid\n  task_status: ITaskStatus[];\n  custom_value_map: ICustomValueMap; // pid\n  reject_task_status_ids: string[]; // pid\n  updated_time: number;\n  isOpen: boolean;\n}\n\nexport enum StorageKey {\n  URL = 'taiga_url',\n  PID = 'taiga_pid',\n  MID = 'taiga_mid',\n  CUSTOM_EID = 'taiga_custom_eid',\n  CUSTOM_RID = 'taiga_custom_rid',\n  BIZ_DAYS = 'taiga_biz_days',\n  REJECT_TASK_STATUS_IDS = 'reject_task_status_ids'\n}\n\nexport const getFromStorage = (key: string) => localStorage.getItem(key) || '';\n\nexport const getFromStorageWithSubkey = (key: StorageKey, subkey: string) =>\n  subkey ? getFromStorage(`${subkey}/${key}`) : '';\n\nexport const setToStorage = (key: string, item: string) => {\n  localStorage.setItem(key, item);\n};\nexport const setToStorageWithSubkey = (\n  key: StorageKey,\n  subkey: string,\n  item: string\n) => {\n  subkey ? setToStorage(`${subkey}/${key}`, item) : null;\n};\nexport const initialStateFn = (): IState => {\n  const url = getFromStorage(StorageKey.URL);\n  const pid = getFromStorage(StorageKey.PID);\n  const mid = getFromStorage(StorageKey.MID);\n  const custom_eid = getFromStorageWithSubkey(StorageKey.CUSTOM_EID, pid);\n  const custom_rid = getFromStorageWithSubkey(StorageKey.CUSTOM_RID, pid);\n  const biz_days_str = getFromStorageWithSubkey(StorageKey.BIZ_DAYS, mid);\n  const biz_days = _.compact(biz_days_str.split(',')).sort();\n  const reject_task_status_ids = _.compact(\n    getFromStorageWithSubkey(StorageKey.REJECT_TASK_STATUS_IDS, pid).split(',')\n  );\n  const isOpen = !(url && pid && mid && custom_eid && custom_rid);\n  return {\n    url,\n    pid,\n    mid,\n    custom_eid,\n    custom_rid,\n    custom_attrs: [],\n    biz_days,\n    milestones: [],\n    tasks: [],\n    task_status: [],\n    custom_value_map: new WeakMap(),\n    reject_task_status_ids,\n    updated_time: 0,\n    isOpen\n  };\n};\n","import _ from 'lodash';\nimport { initialStateFn, IState, StorageKey } from './store';\nimport { ActionTypes, IAction } from './actions';\nimport {\n  setToStorage,\n  setToStorageWithSubkey,\n  getFromStorageWithSubkey\n} from './store';\nexport const reducer = (state = initialStateFn(), action: IAction) => {\n  switch (action.type) {\n    case ActionTypes.SET_URL: {\n      const { url } = action.payload;\n      setToStorage(StorageKey.URL, url);\n      return { ...state, url } as IState;\n    }\n    case ActionTypes.SET_PID: {\n      const { pid } = action.payload;\n      setToStorage(StorageKey.PID, pid);\n      return {\n        ...state,\n        pid,\n        mid: '',\n        custom_eid: getFromStorageWithSubkey(StorageKey.CUSTOM_EID, pid),\n        custom_rid: getFromStorageWithSubkey(StorageKey.CUSTOM_RID, pid),\n        custom_attrs: [],\n        milestones: [],\n        custom_value_map: new WeakMap()\n      } as IState;\n    }\n    case ActionTypes.SET_MID: {\n      const { mid } = action.payload;\n      setToStorage(StorageKey.MID, mid);\n      return {\n        ...state,\n        mid,\n        tasks: [],\n        biz_days: _.compact(\n          getFromStorageWithSubkey(StorageKey.BIZ_DAYS, mid).split(',')\n        ).sort()\n      } as IState;\n    }\n    case ActionTypes.SET_MILESTONES: {\n      const { milestones } = action.payload;\n      return { ...state, milestones } as IState;\n    }\n    case ActionTypes.SET_CUSTOM_EID: {\n      const { custom_eid } = action.payload;\n      setToStorageWithSubkey(StorageKey.CUSTOM_EID, state.pid, custom_eid);\n      return { ...state, custom_eid } as IState;\n    }\n    case ActionTypes.SET_CUSTOM_ATTRS: {\n      const { custom_attrs } = action.payload;\n      return { ...state, custom_attrs } as IState;\n    }\n    case ActionTypes.SET_CUSTOM_RID: {\n      const { custom_rid } = action.payload;\n      setToStorageWithSubkey(StorageKey.CUSTOM_RID, state.pid, custom_rid);\n      return { ...state, custom_rid } as IState;\n    }\n    case ActionTypes.SET_BIZ_DAYS: {\n      const { biz_days } = action.payload;\n      setToStorageWithSubkey(\n        StorageKey.BIZ_DAYS,\n        state.mid,\n        biz_days.join(',')\n      );\n      return { ...state, biz_days } as IState;\n    }\n    case ActionTypes.ADD_BIZ_DAY: {\n      const { biz_day } = action.payload;\n      const biz_days = _.chain([...state.biz_days, biz_day])\n        .uniq()\n        .sort()\n        .value();\n      setToStorageWithSubkey(\n        StorageKey.BIZ_DAYS,\n        state.mid,\n        biz_days.join(',')\n      );\n      return { ...state, biz_days } as IState;\n    }\n    case ActionTypes.REMOVE_BIZ_DAY: {\n      const { biz_day } = action.payload;\n      const biz_days = _.reject([...state.biz_days], item => item === biz_day);\n      setToStorageWithSubkey(\n        StorageKey.BIZ_DAYS,\n        state.mid,\n        biz_days.join(',')\n      );\n      return { ...state, biz_days } as IState;\n    }\n    case ActionTypes.SET_TASKS: {\n      const { tasks } = action.payload;\n      return { ...state, tasks } as IState;\n    }\n    case ActionTypes.SET_TASK_STATUS: {\n      const { task_status } = action.payload;\n      return { ...state, task_status } as IState;\n    }\n    case ActionTypes.SET_CUSTOM_VALUE_MAP: {\n      const { custom_value_map } = action.payload;\n      return { ...state, custom_value_map } as IState;\n    }\n    case ActionTypes.SET_REJECT_TASK_STATUS_IDS: {\n      const { reject_task_status_ids } = action.payload;\n      setToStorageWithSubkey(\n        StorageKey.REJECT_TASK_STATUS_IDS,\n        state.pid,\n        reject_task_status_ids.join(',')\n      );\n      return { ...state, reject_task_status_ids } as IState;\n    }\n    case ActionTypes.ADD_REJECT_TASK_STATUS_ID: {\n      const { reject_task_status_id } = action.payload;\n      const reject_task_status_ids = _.chain([\n        ...state.reject_task_status_ids,\n        reject_task_status_id\n      ])\n        .compact()\n        .uniq()\n        .value();\n      setToStorageWithSubkey(\n        StorageKey.REJECT_TASK_STATUS_IDS,\n        state.pid,\n        reject_task_status_ids.join(',')\n      );\n      return { ...state, reject_task_status_ids } as IState;\n    }\n    case ActionTypes.REMOVE_REJECT_TASK_STATUS_ID: {\n      const { reject_task_status_id } = action.payload;\n      const reject_task_status_ids = _.reject(\n        [...state.reject_task_status_ids],\n        item => item === reject_task_status_id\n      );\n      setToStorageWithSubkey(\n        StorageKey.REJECT_TASK_STATUS_IDS,\n        state.pid,\n        reject_task_status_ids.join(',')\n      );\n      return { ...state, reject_task_status_ids } as IState;\n    }\n    case ActionTypes.OPEN_CONTROLLER: {\n      return { ...state, isOpen: true } as IState;\n    }\n    case ActionTypes.CLOSE_CONTROLLER: {\n      return { ...state, isOpen: false } as IState;\n    }\n    case ActionTypes.UPDATE_DATA: {\n      return { ...state, updated_time: Date.now() } as IState;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import React, { createContext, useReducer, useCallback } from 'react';\nimport { ActionTypes } from './actions';\nimport {\n  initialStateFn,\n  IMilestone,\n  ICustomAttr,\n  ITask,\n  ICustomValueMap,\n  ITaskStatus\n} from './store';\nimport { reducer } from './reducer';\nimport _ from 'lodash';\nexport const baseUrl = (url: string) => `${url.replace(/[¥/]$/, '')}/api/v1`;\n\nconst initialState = initialStateFn();\nexport const RootContext = createContext({\n  state: initialState,\n  setUrl: (url: string) => {},\n  setPid: (pid: string) => {},\n  setMid: (mid: string) => {},\n  setMilestones: (milestones: IMilestone[]) => {},\n  setCustomEid: (custom_eid: string) => {},\n  setCustomRid: (custom_rid: string) => {},\n  setCustomAttrs: (custom_attrs: ICustomAttr[]) => {},\n  setBizDays: (biz_days: string[]) => {},\n  addBizDay: (biz_day: string) => {},\n  removeBizDay: (biz_day: string) => {},\n  setTasks: (tasks: ITask[]) => {},\n  setTaskStatus: (tasks: ITaskStatus[]) => {},\n  setCustomValueMap: (custom_value_map: ICustomValueMap) => {},\n  toggeRejectTaskStatus: (task_status_id: string, is_reject: boolean) => {},\n  openController: () => {},\n  closeController: () => {},\n  updateData: () => {}\n});\n\nexport const Provider = ({ children }: { children: React.ReactNode }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = {\n    state,\n    setUrl: useCallback(\n      (url: string) => {\n        dispatch({ type: ActionTypes.SET_URL, payload: { url } });\n      },\n      [dispatch]\n    ),\n    setPid: useCallback(\n      (pid: string) => {\n        dispatch({ type: ActionTypes.SET_PID, payload: { pid } });\n      },\n      [dispatch]\n    ),\n    setMid: useCallback(\n      (mid: string) => {\n        dispatch({ type: ActionTypes.SET_MID, payload: { mid } });\n      },\n      [dispatch]\n    ),\n    setMilestones: useCallback(\n      (milestones: IMilestone[]) => {\n        dispatch({ type: ActionTypes.SET_MILESTONES, payload: { milestones } });\n      },\n      [dispatch]\n    ),\n    setCustomEid: useCallback(\n      (custom_eid: string) => {\n        dispatch({ type: ActionTypes.SET_CUSTOM_EID, payload: { custom_eid } });\n      },\n      [dispatch]\n    ),\n    setCustomRid: useCallback(\n      (custom_rid: string) => {\n        dispatch({ type: ActionTypes.SET_CUSTOM_RID, payload: { custom_rid } });\n      },\n      [dispatch]\n    ),\n    setCustomAttrs: useCallback(\n      (custom_attrs: ICustomAttr[]) => {\n        dispatch({\n          type: ActionTypes.SET_CUSTOM_ATTRS,\n          payload: { custom_attrs }\n        });\n      },\n      [dispatch]\n    ),\n    setBizDays: useCallback(\n      (biz_days: string[]) => {\n        dispatch({ type: ActionTypes.SET_BIZ_DAYS, payload: { biz_days } });\n      },\n      [dispatch]\n    ),\n    addBizDay: useCallback(\n      (biz_day: string) => {\n        dispatch({ type: ActionTypes.ADD_BIZ_DAY, payload: { biz_day } });\n      },\n      [dispatch]\n    ),\n    removeBizDay: useCallback(\n      (biz_day: string) => {\n        dispatch({ type: ActionTypes.REMOVE_BIZ_DAY, payload: { biz_day } });\n      },\n      [dispatch]\n    ),\n    setTasks: useCallback(\n      (tasks: ITask[]) => {\n        dispatch({ type: ActionTypes.SET_TASKS, payload: { tasks } });\n      },\n      [dispatch]\n    ),\n    setTaskStatus: useCallback(\n      (task_status: ITaskStatus[]) => {\n        dispatch({\n          type: ActionTypes.SET_TASK_STATUS,\n          payload: { task_status }\n        });\n      },\n      [dispatch]\n    ),\n\n    setCustomValueMap: useCallback(\n      (custom_value_map: ICustomValueMap) => {\n        dispatch({\n          type: ActionTypes.SET_CUSTOM_VALUE_MAP,\n          payload: { custom_value_map }\n        });\n      },\n      [dispatch]\n    ),\n    toggeRejectTaskStatus: useCallback(\n      (reject_task_status_id: string, is_reject: boolean) => {\n        const type = is_reject\n          ? ActionTypes.ADD_REJECT_TASK_STATUS_ID\n          : ActionTypes.REMOVE_REJECT_TASK_STATUS_ID;\n        dispatch({\n          type,\n          payload: { reject_task_status_id }\n        });\n      },\n      [dispatch]\n    ),\n    openController: useCallback(\n      () => {\n        dispatch({ type: ActionTypes.OPEN_CONTROLLER });\n      },\n      [dispatch]\n    ),\n    closeController: useCallback(\n      () => {\n        dispatch({ type: ActionTypes.CLOSE_CONTROLLER });\n      },\n      [dispatch]\n    ),\n    updateData: useCallback(\n      () => {\n        dispatch({\n          type: ActionTypes.UPDATE_DATA\n        });\n      },\n      [dispatch]\n    )\n  };\n  return <RootContext.Provider value={value}>{children}</RootContext.Provider>;\n};\n","import React, { useEffect, useState, useContext, useCallback } from 'react';\nimport classNames from 'classnames';\nimport {\n  UncontrolledTooltip,\n  Table,\n  Card,\n  CardHeader,\n  Input,\n  Label,\n  FormGroup,\n  Badge\n} from 'reactstrap';\nimport { IMilestone } from './store';\nimport { RootContext } from './Provider';\nimport moment, { Moment } from 'moment';\nimport biz from 'moment-business';\nimport _ from 'lodash';\nexport const isToday = (date: string) => {\n  moment()\n    .local()\n    .format('YYYY-MM-DD') ===\n    moment(date)\n      .local()\n      .format('YYYY-MM-DD');\n};\nexport const dayNameFromIdx = (date: string, idx: number) => {\n  if (idx === -1) {\n    return '';\n  }\n  if (idx === 0) {\n    return 'Planning';\n  }\n  return `Day ${idx}`;\n};\n\nexport const dayName = (date: string, biz_days: string[]) => {\n  const idx = biz_days.indexOf(date);\n  return dayNameFromIdx(date, idx);\n};\nexport const getMilestone = (mid: string, items: IMilestone[]) =>\n  items.find(item => String(item.id) === mid);\nconst getDays = (item: IMilestone) => {\n  const startM = moment(item.estimated_start).local();\n  const finishM = moment(item.estimated_finish).local();\n  const daysInSprint = finishM.diff(startM, 'days');\n  return _.times(daysInSprint).map(i => startM.clone().add(i, 'days'));\n};\nconst getDefaultBizDays = (items: Moment[]) =>\n  items\n    .filter(item => biz.isWeekDay(item))\n    .map(item => item.format('YYYY-MM-DD'));\n\nconst weekClassName = (day: number) => ({\n  'text-danger': day === 0,\n  'text-info': day === 6\n});\n\nconst DayItem = ({\n  item,\n  biz_days,\n  idx\n}: {\n  item: Moment | null;\n  biz_days: string[];\n  idx: number;\n}) => {\n  if (!item) {\n    return (\n      <td>\n        <br />\n      </td>\n    );\n  }\n  const { addBizDay, removeBizDay } = useContext(RootContext);\n  const value = item.format('YYYY-MM-DD');\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const bizDay = e.target.value;\n      e.target.checked ? addBizDay(bizDay) : removeBizDay(bizDay);\n    },\n    [addBizDay, removeBizDay]\n  );\n  const isPlanning = value === biz_days[0];\n  const eleId = `biz-day-${value}`;\n  return (\n    <>\n      <td\n        className={classNames(weekClassName(idx), { 'table-info': isPlanning })}\n        id={eleId}\n      >\n        {biz.isWeekDay(item) ? (\n          <FormGroup check inline>\n            <Label check>\n              <Input\n                onChange={handleChange}\n                disabled={biz.isWeekendDay(item)}\n                value={value}\n                type=\"checkbox\"\n                checked={_.includes(biz_days, value)}\n                className=\"form-check-input\"\n              />\n              {value}\n            </Label>\n          </FormGroup>\n        ) : (\n          <span>{value}</span>\n        )}\n      </td>\n      {_.includes(biz_days, value) ? (\n        <UncontrolledTooltip target={eleId}>\n          {dayName(value, biz_days)}\n        </UncontrolledTooltip>\n      ) : null}\n    </>\n  );\n};\n\nexport const DaysSelector = () => {\n  const {\n    state: { mid, milestones, biz_days },\n    setBizDays\n  } = useContext(RootContext);\n  const [items, setItems] = useState<Moment[]>([]);\n  useEffect(\n    () => {\n      const milestone = getMilestone(mid, milestones);\n      if (milestone) {\n        const items = getDays(milestone);\n        setItems(items);\n        if (biz_days.length <= 1) {\n          setBizDays(getDefaultBizDays(items));\n        }\n      }\n    },\n    [mid, milestones, biz_days]\n  );\n  if (items.length === 0) {\n    return null;\n  } else {\n    const weekdays = _.chunk(\n      [..._.times(items[0].day(), () => null), ...items],\n      7\n    );\n    return (\n      <Card>\n        <CardHeader>Business Days</CardHeader>\n        <Table bordered>\n          <thead>\n            <tr>\n              {moment.weekdays().map((item, idx) => (\n                <th\n                  key={idx}\n                  className={classNames('text-center', weekClassName(idx))}\n                >\n                  {item}\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {weekdays.map((days, i) => (\n              <tr key={i}>\n                {days.map((item, idx) => (\n                  <DayItem\n                    idx={idx}\n                    key={idx}\n                    item={item}\n                    biz_days={biz_days}\n                  />\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Card>\n    );\n  }\n};\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { ICustomValueMap, IProject, IUser, ITask, ICustomAttr } from './store';\nimport { RootContext, baseUrl } from './Provider';\nimport classNames from 'classnames';\nimport {\n  Table,\n  Button,\n  Navbar,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Progress\n} from 'reactstrap';\nimport _ from 'lodash';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSyncAlt,\n  faMedal,\n  faTimes,\n  faEquals,\n  faGrinBeam,\n  faGrinBeamSweat,\n  faDizzy\n} from '@fortawesome/free-solid-svg-icons';\nimport styles from './UserTasks.module.css';\nimport moment from 'moment';\n\nconst barStyles = ['success', 'warning', 'info', 'danger'];\nconst getTasksByUser = (items: ITask[]) => _.groupBy(items, 'assigned_to');\nconst getClosedTasks = (items: ITask[]) => items.filter(item => item.is_closed);\nexport const parseCustomVal = (val: string) =>\n  _.chain(val)\n    .replace(/[^0-9.+,]/g, '')\n    .replace(/[+]/g, ',')\n    .split(',')\n    .compact()\n    .map(Number)\n    .sum()\n    .value();\n\nexport const getCustomVal = (\n  custom_value_map: ICustomValueMap,\n  task: ITask,\n  id: number\n) => {\n  if (custom_value_map.has(task)) {\n    return parseCustomVal(\n      _.get(custom_value_map.get(task), `attributes_values.${id}`, '0')\n    );\n  } else {\n    return 0;\n  }\n};\nconst getGrade = (e: number, r: number): [string | null, number] => {\n  if (_.isNumber(e) && _.isNumber(r) && e > 0) {\n    const diff = Math.abs(e - r) / e;\n    if (diff <= 0.05) {\n      return ['gold', 3];\n    }\n    if (diff <= 0.1) {\n      return ['silver', 2];\n    }\n    if (diff < 0.2) {\n      return ['bronze', 1];\n    }\n  }\n  return [null, 0];\n};\nconst NameAndWorkLoad = ({\n  username,\n  val,\n  total,\n  imgSrc\n}: {\n  username: string;\n  val: number;\n  total: number;\n  imgSrc: string;\n}) => {\n  if (!val) {\n    return (\n      <>\n        <td>\n          <img className={styles.avator} src={imgSrc} /> {username}\n        </td>\n        <td />\n      </>\n    );\n  }\n  const diff = (val - total) / total;\n  let icon;\n  let tblCls;\n  if (diff < -0.1) {\n    icon = faGrinBeam;\n    tblCls = '';\n  } else if (diff <= 0.1) {\n    tblCls = 'table-success';\n    icon = faGrinBeam;\n  } else if (diff <= 0.2) {\n    tblCls = 'table-warning';\n    icon = faGrinBeamSweat;\n  } else {\n    tblCls = 'table-danger';\n    icon = faDizzy;\n  }\n  return (\n    <>\n      <td className={tblCls}>\n        <img className={styles.avator} src={imgSrc} /> {username}\n        <FontAwesomeIcon className=\"mx-1\" icon={icon} />\n      </td>\n      <td className={classNames(tblCls, 'text-right')}>{val}</td>\n    </>\n  );\n};\n\nconst Medal = ({ e, r }: { e: number; r: number }) => {\n  const [grade, num] = getGrade(e, r);\n  if (grade) {\n    return (\n      <>\n        {_.times(num).map(i => (\n          <FontAwesomeIcon key={i} className={styles[grade]} icon={faMedal} />\n        ))}\n      </>\n    );\n  } else {\n    return null;\n  }\n};\ninterface IProgressTotal {\n  status: number;\n  total: number;\n  style?: string;\n  label: string;\n}\nconst UserRow = ({\n  item,\n  sums,\n  isPast,\n  total,\n  hpd,\n  closedTasks\n}: {\n  item: IUser;\n  sums: { [key: string]: { e: number; r: number } };\n  isPast: boolean;\n  total: number;\n  hpd: number;\n  closedTasks: ITask[];\n}) => {\n  const {\n    state: { custom_value_map, custom_eid, reject_task_status_ids, task_status }\n  } = useContext(RootContext);\n  const [customTotal, setTotal] = useState<number>(0);\n  const [progressTotal, setProgressTotal] = useState<IProgressTotal[]>([]);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setTotal(Number(e.target.value) || 0);\n    },\n    [setTotal]\n  );\n  const sumItem = _.get(sums, item.id);\n  const e = _.get(sumItem, 'e');\n  const r = _.get(sumItem, 'r');\n  const margedTotal = customTotal || total;\n  const totalStr = String(margedTotal);\n  const imgSrc = item.photo || `http://i.pravatar.cc/80?u=${Math.random()}`;\n  useEffect(\n    () => {\n      const closed_status = _.chain(task_status)\n        .filter(item => item.is_closed)\n        .reject(item => _.includes(reject_task_status_ids, String(item.id)))\n        .orderBy('id')\n        .reverse()\n        .map(item => item.id)\n        .value();\n      const closedTotals = _.chain(closedTasks)\n        .groupBy('status')\n        .mapValues(ts =>\n          _.reduce(\n            ts,\n            (result, t) => {\n              result.status = t.status;\n              result.total += getCustomVal(\n                custom_value_map,\n                t,\n                Number(custom_eid)\n              );\n              result.label = t.status_extra_info.name;\n              return result;\n            },\n            { status: 0, total: 0, label: '', style: '' }\n          )\n        )\n        .value();\n      const sortedTotals = _.orderBy(closedTotals, 'status')\n        .reverse()\n        .map(item => ({\n          ...item,\n          style: barStyles[closed_status.indexOf(item.status)]\n        }));\n      setProgressTotal(sortedTotals);\n    },\n    [\n      setProgressTotal,\n      custom_eid,\n      custom_value_map,\n      closedTasks,\n      task_status,\n      reject_task_status_ids\n    ]\n  );\n  return (\n    <tr key={item.id}>\n      {total > 0 ? (\n        <>\n          <NameAndWorkLoad\n            username={item.username}\n            val={e}\n            total={margedTotal}\n            imgSrc={imgSrc}\n          />\n          <td className=\"text-right\">{total}</td>\n          <td className={styles.custom_input_td}>\n            <Input\n              bsSize=\"sm\"\n              type=\"number\"\n              className=\"text-right\"\n              value={totalStr}\n              step={hpd}\n              onChange={handleChange}\n            />\n          </td>\n        </>\n      ) : (\n        <>\n          <td>\n            <img className={styles.avator} src={imgSrc} /> {item.username}\n          </td>\n          <td className=\"text-right\">{e}</td>\n          <td className=\"text-right\">{r}</td>\n          <td>\n            {_.isNumber(e) && (\n              <Progress multi>\n                {progressTotal.map((item, idx) => (\n                  <Progress\n                    bar\n                    key={idx}\n                    value={item.total}\n                    color={item.style}\n                    max={e}\n                  >\n                    {item.label}\n                  </Progress>\n                ))}\n              </Progress>\n            )}\n          </td>\n        </>\n      )}\n\n      {isPast ? (\n        <td>\n          <Medal e={e} r={r} />\n        </td>\n      ) : null}\n    </tr>\n  );\n};\nconst getTaskSumByUser = (\n  items: ITask[],\n  custom_value_map: ICustomValueMap,\n  custom_eid: string,\n  custom_rid: string\n) => {\n  const eid = Number(custom_eid);\n  const rid = Number(custom_rid);\n  const tasksByUser = _.mapValues(getTasksByUser(items), tasks =>\n    _.chain(tasks)\n      .map(task => ({\n        e: getCustomVal(custom_value_map, task, eid),\n        r: getCustomVal(custom_value_map, task, rid)\n      }))\n      .reduce((result, val) => ({ e: result.e + val.e, r: result.r + val.r }), {\n        e: 0,\n        r: 0\n      })\n      .value()\n  );\n  return tasksByUser;\n};\nconst getCustomAttr = (items: ICustomAttr[], id: number) =>\n  items.find(item => item.id === id);\nexport const UserTasks = () => {\n  const {\n    state: {\n      url,\n      pid,\n      tasks,\n      custom_value_map,\n      custom_attrs,\n      custom_eid,\n      custom_rid,\n      biz_days\n    },\n    updateData\n  } = useContext(RootContext);\n  const [items, setItems] = useState<IUser[]>([]);\n  const [hpd, setHpd] = useState<number>(0);\n  const [total, setTotal] = useState<number>(0);\n  const activeLen = biz_days.length - 1;\n  useEffect(\n    () => {\n      if (url && pid) {\n        (async () => {\n          const {\n            data: { members }\n          } = await axios.get<IProject>(`${baseUrl(url)}/projects/${pid}`);\n          setItems(members);\n        })();\n      }\n    },\n    [url, pid, setItems]\n  );\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setHpd(Number(e.target.value) || 0);\n    },\n    [setHpd]\n  );\n  const disableSubmit = useCallback((e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n  }, []);\n  useEffect(\n    () => {\n      setTotal(hpd * activeLen);\n    },\n    [hpd, activeLen, setTotal]\n  );\n  const taskSumByUser = getTaskSumByUser(\n    tasks,\n    custom_value_map,\n    custom_eid,\n    custom_rid\n  );\n  const customAttrE = getCustomAttr(custom_attrs, Number(custom_eid));\n  const customAttrR = getCustomAttr(custom_attrs, Number(custom_rid));\n  if (!customAttrE || !customAttrR || biz_days.length <= 1) {\n    return null;\n  }\n  const unassignedSum = _.get(taskSumByUser, 'null.e', 0);\n  const isPlanning = total > 0;\n  const isPast =\n    !isPlanning &&\n    moment().diff(\n      moment(_.last(biz_days))\n        .local()\n        .endOf('days')\n    ) > 0;\n  const tasksByUser = getTasksByUser(getClosedTasks(tasks));\n  return (\n    <>\n      <Navbar color=\"light\" light>\n        <Form inline={true} className=\"mr-auto\" onSubmit={disableSubmit}>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step=\"0.5\"\n              placeholder=\"hours / day\"\n              className=\"text-right\"\n              onChange={handleChange}\n            />\n            <InputGroupAddon addonType=\"append\">\n              <InputGroupText>\n                <FontAwesomeIcon className=\"mx-2\" icon={faTimes} />\n                {activeLen} [days]\n                <FontAwesomeIcon className=\"mx-2\" icon={faEquals} />\n              </InputGroupText>\n              {total > 0 ? (\n                <>\n                  <InputGroupText className=\"bg-white\">\n                    <strong>{total}</strong>\n                  </InputGroupText>\n                  <InputGroupText>hours / sprint</InputGroupText>\n                </>\n              ) : null}\n            </InputGroupAddon>\n          </InputGroup>\n        </Form>\n        <Button onClick={updateData}>\n          <FontAwesomeIcon icon={faSyncAlt} />\n        </Button>\n      </Navbar>\n      <Table bordered>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>{customAttrE.name}</th>\n            {isPlanning ? (\n              <>\n                <th>Total</th> <th>Custom</th>\n              </>\n            ) : (\n              <>\n                <th>{customAttrR.name}</th>\n                <th>Progress</th>\n              </>\n            )}\n            {isPast ? <th>Grade</th> : null}\n          </tr>\n        </thead>\n        <tbody>\n          {items.map(item => (\n            <UserRow\n              key={item.id}\n              isPast={isPast}\n              item={item}\n              sums={taskSumByUser}\n              total={total}\n              hpd={hpd}\n              closedTasks={tasksByUser[item.id] || []}\n            />\n          ))}\n          <tr key=\"null\">\n            <td>unassigned</td>\n            <td className=\"text-right text-danger\">{unassignedSum}</td>\n            <td />\n            <td />\n            {isPast || isPlanning ? <td /> : null}\n          </tr>\n        </tbody>\n      </Table>\n    </>\n  );\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport {\n  ComposedChart,\n  Tooltip,\n  Legend,\n  Line,\n  XAxis,\n  YAxis,\n  Bar\n} from 'recharts';\nimport { ITask, ICustomValueMap } from './store';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { RootContext } from './Provider';\nimport { dayNameFromIdx } from './DaysSelector';\nimport { getCustomVal } from './UserTasks';\nimport { Card, CardHeader } from 'reactstrap';\ninterface IChartItem {\n  label: string;\n  estimate: number;\n  result?: number;\n  add?: number;\n}\n\nconst getTaskFinished = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      task.finished_date\n        ? moment(date)\n            .local()\n            .endOf('days')\n            .diff(moment(task.finished_date)) > 0\n        : false\n  );\n\nconst getTaskCreatedToday = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      moment(date)\n        .local()\n        .format('YYYY-MM-DD') ===\n      moment(task.created_date)\n        .local()\n        .format('YYYY-MM-DD')\n  );\n\nconst getTaskCreated = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      moment(date)\n        .endOf('days')\n        .diff(moment(task.created_date)) > 0\n  );\n\nconst getSumVal = (\n  custom_value_map: ICustomValueMap,\n  tasks: ITask[],\n  custom_eid: string\n) => {\n  return _.chain(tasks)\n    .map(task => getCustomVal(custom_value_map, task, Number(custom_eid)))\n    .sum()\n    .value();\n};\nexport const Chart = () => {\n  const [data, setData] = useState<IChartItem[]>([]);\n  const {\n    state: { tasks, biz_days, custom_value_map, custom_eid }\n  } = useContext(RootContext);\n  useEffect(\n    () => {\n      const days_len = biz_days.length;\n      if (days_len > 0 && tasks.length > 0 && custom_eid) {\n        const allTaskVal = getSumVal(\n          custom_value_map,\n          getTaskCreated(tasks, biz_days[0]),\n          custom_eid\n        );\n        const data = biz_days.map((day, idx) => {\n          const label = dayNameFromIdx(day, idx);\n          const estimate = allTaskVal - (allTaskVal * idx) / (days_len - 1);\n          if (\n            moment()\n              .local()\n              .endOf('days')\n              .diff(moment(day)) > 0\n          ) {\n            const result =\n              allTaskVal -\n              getSumVal(\n                custom_value_map,\n                getTaskFinished(tasks, day),\n                custom_eid\n              );\n            const add =\n              idx === 0\n                ? 0\n                : getSumVal(\n                    custom_value_map,\n                    getTaskCreatedToday(tasks, day),\n                    custom_eid\n                  );\n            return { label, estimate, result, add };\n          } else {\n            return { label, estimate };\n          }\n        });\n        setData(data);\n      } else {\n        setData([]);\n      }\n    },\n    [tasks, biz_days, custom_eid, custom_value_map, setData]\n  );\n  if (data.length === 0) {\n    return null;\n  } else {\n    return (\n      <Card>\n        <CardHeader>Burn down chart</CardHeader>\n        <ComposedChart data={data} width={800} height={400}>\n          <YAxis />\n          <XAxis dataKey=\"label\" />\n          <Tooltip />\n          <Bar dataKey=\"result\" fill=\"#8884d8\" stackId=\"a\" />\n          <Bar dataKey=\"add\" fill=\"#82ca9d\" stackId=\"a\" />\n          <Line dataKey=\"estimate\" />\n        </ComposedChart>\n      </Card>\n    );\n  }\n};\n","import React, { useCallback, useEffect, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { Input, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { RootContext, baseUrl } from './Provider';\nimport { IProject } from './store';\nexport const ProjectSelector = () => {\n  const {\n    state: { url, pid: statePid },\n    setPid\n  } = useContext(RootContext);\n  const [items, setItems] = useState<IProject[]>([]);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const pid = e.target.value;\n      if (pid) {\n        setPid(pid);\n      }\n    },\n    [setPid]\n  );\n  useEffect(\n    () => {\n      if (url) {\n        (async () => {\n          const { data: items } = await axios.get(`${baseUrl(url)}/projects`);\n          setItems(items);\n        })();\n      }\n    },\n    [url, setItems]\n  );\n\n  return (\n    <InputGroup className=\"col\">\n      <InputGroupAddon addonType=\"prepend\">Project</InputGroupAddon>\n      <Input value={statePid} type=\"select\" onChange={handleChange}>\n        <option value=\"\"> --- </option>\n        {items.map(item => (\n          <option key={item.id} value={item.id}>\n            {item.name}\n          </option>\n        ))}\n      </Input>\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useEffect, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { Input, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { RootContext, baseUrl } from './Provider';\nimport { IMilestone, ITask } from './store';\nimport _ from 'lodash';\n\nexport const MilestoneSelector = () => {\n  const {\n    state: { url, pid, mid: stateMid, updated_time, reject_task_status_ids },\n    setMid,\n    setMilestones,\n    setTasks\n  } = useContext(RootContext);\n  const [items, setItems] = useState<IMilestone[]>([]);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        setMid(id);\n      }\n    },\n    [setMid, items]\n  );\n  useEffect(\n    () => {\n      if (url && pid) {\n        (async () => {\n          const { data: items } = await axios.get(\n            `${baseUrl(url)}/milestones`,\n            { params: { project: pid } }\n          );\n          setItems(items);\n          setMilestones(items);\n        })();\n      }\n    },\n    [url, pid]\n  );\n  useEffect(\n    () => {\n      if (url && stateMid) {\n        (async () => {\n          const { data: items } = await axios.get<ITask[]>(\n            `${baseUrl(url)}/tasks`,\n            {\n              headers: {\n                'x-disable-pagination': true\n              },\n              params: {\n                milestone: stateMid\n              }\n            }\n          );\n          const tasks = items.filter(\n            item => !_.includes(reject_task_status_ids, String(item.status))\n          );\n          setTasks(tasks);\n        })();\n      }\n    },\n    [url, stateMid, updated_time, reject_task_status_ids]\n  );\n\n  return (\n    <InputGroup className=\"col\">\n      <InputGroupAddon addonType=\"prepend\">Sprint</InputGroupAddon>\n      <Input type=\"select\" value={stateMid} onChange={handleChange}>\n        <option value=\"\"> --- </option>\n        {items.map(item => (\n          <option key={item.id} value={item.id}>\n            {item.name}\n          </option>\n        ))}\n      </Input>\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useEffect, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { Input, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { ITask, ICustomValue, ICustomAttr } from './store';\nimport { RootContext, baseUrl } from './Provider';\n\nexport const CustomValuesSelector = () => {\n  const {\n    state: { url, pid, custom_eid: stateEid, custom_rid: stateRid, tasks },\n    setCustomEid,\n    setCustomRid,\n    setCustomAttrs,\n    setCustomValueMap\n  } = useContext(RootContext);\n  const [items, setItems] = useState<ICustomAttr[]>([]);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        switch (e.target.name) {\n          case 'eid': {\n            setCustomEid(id);\n            break;\n          }\n          case 'rid': {\n            setCustomRid(id);\n            break;\n          }\n        }\n      }\n    },\n    [setCustomEid, setCustomRid]\n  );\n  useEffect(\n    () => {\n      if (url && pid) {\n        (async () => {\n          const { data: items } = await axios.get(\n            `${baseUrl(url)}/task-custom-attributes`,\n            { params: { project: pid } }\n          );\n          setItems(items);\n          setCustomAttrs(items);\n        })();\n      }\n    },\n    [url, pid, setItems, setCustomAttrs]\n  );\n  useEffect(\n    () => {\n      if (url && tasks.length && stateEid && stateRid) {\n        (async () => {\n          const wmap = new WeakMap(\n            await Promise.all(\n              tasks.map(async item => {\n                const { data: custom_attr_val } = await axios.get(\n                  `${baseUrl(url)}/tasks/custom-attributes-values/${item.id}`\n                );\n                return [item, custom_attr_val] as [ITask, ICustomValue];\n              })\n            )\n          );\n          setCustomValueMap(wmap);\n        })();\n      }\n    },\n    [url, tasks, stateEid, stateRid, setCustomValueMap]\n  );\n\n  return (\n    <div className=\"row\">\n      <InputGroup className=\"col\">\n        <InputGroupAddon addonType=\"prepend\">Estimate</InputGroupAddon>\n        <Input\n          value={stateEid}\n          name=\"eid\"\n          type=\"select\"\n          onChange={handleChange}\n        >\n          <option value=\"\"> --- </option>\n          {items.map(item => (\n            <option key={item.id} value={item.id}>\n              {item.name}\n            </option>\n          ))}\n        </Input>\n      </InputGroup>\n      <InputGroup className=\"col\">\n        <InputGroupAddon addonType=\"prepend\">Result</InputGroupAddon>\n        <Input\n          value={stateRid}\n          name=\"rid\"\n          type=\"select\"\n          onChange={handleChange}\n        >\n          <option> --- </option>\n          {items.map(item => (\n            <option key={item.id} value={item.id}>\n              {item.name}\n            </option>\n          ))}\n        </Input>\n      </InputGroup>\n    </div>\n  );\n};\n","import React, { useCallback, useEffect, useContext, useState } from 'react';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport { RootContext, baseUrl } from './Provider';\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Form,\n  Input,\n  FormGroup,\n  Label\n} from 'reactstrap';\nimport { ITaskStatus } from './store';\nconst StatusItem = ({ item }: { item: ITaskStatus }) => {\n  const {\n    state: { reject_task_status_ids },\n    toggeRejectTaskStatus\n  } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      toggeRejectTaskStatus(String(id), !e.target.checked);\n    },\n    [toggeRejectTaskStatus]\n  );\n  return (\n    <FormGroup check inline>\n      <Label check>\n        <Input\n          onChange={handleChange}\n          type=\"checkbox\"\n          value={item.id}\n          defaultChecked={!_.includes(reject_task_status_ids, String(item.id))}\n        />\n        {item.name}\n      </Label>\n    </FormGroup>\n  );\n};\nexport const TaskStatusSelector = () => {\n  const {\n    state: { url, pid },\n    setTaskStatus\n  } = useContext(RootContext);\n  const [items, setItems] = useState<ITaskStatus[]>([]);\n  useEffect(\n    () => {\n      if (url && pid) {\n        (async () => {\n          const { data: items } = await axios.get(\n            `${baseUrl(url)}/task-statuses`,\n            {\n              params: { project: pid }\n            }\n          );\n          setItems(items);\n          setTaskStatus(items);\n        })();\n      }\n    },\n    [url, pid]\n  );\n  if (items.length === 0) {\n    return null;\n  }\n  return (\n    <Card>\n      <CardHeader>Task status</CardHeader>\n      <CardBody>\n        {items.map(item => (\n          <StatusItem key={item.id} item={item} />\n        ))}\n      </CardBody>\n    </Card>\n  );\n};\n","import React, { useContext, useState, useCallback } from 'react';\nimport _ from 'lodash';\nimport classNames from 'classnames';\nimport { RootContext } from './Provider';\nimport {\n  Card,\n  CardHeader,\n  Collapse,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Button,\n  Badge\n} from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faChevronCircleRight,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport { ProjectSelector } from './ProjectSelector';\nimport { MilestoneSelector } from './MilestoneSelector';\nimport { CustomValuesSelector } from './CustomValuesSelector';\nimport { DaysSelector, getMilestone } from './DaysSelector';\nimport { TaskStatusSelector } from './TaskStatusSelector';\nimport { IMilestone } from './store';\nimport styles from './Controller.module.css';\nconst getSpName = (mid: string, items: IMilestone[]) =>\n  _.get(getMilestone(mid, items), 'name', '');\nconst getTaskboardUrl = (url: string, mid: string, items: IMilestone[]) => {\n  const milestone = getMilestone(mid, items);\n  if (url && milestone) {\n    return `${url}/project/${milestone.project_extra_info.slug}/taskboard/${\n      milestone.slug\n    }`;\n  } else {\n    return '';\n  }\n};\n\nconst getRange = (biz_days: string[]) => {\n  if (biz_days.length > 1) {\n    return `[${_.head(biz_days)} - ${_.last(biz_days)}]`;\n  } else {\n    return '';\n  }\n};\nexport const Controller = () => {\n  const {\n    state: { url: stateUrl, isOpen, mid, milestones, biz_days },\n    setUrl,\n    openController,\n    closeController\n  } = useContext(RootContext);\n  const [url, setStateUrl] = useState('');\n  const handleUrl = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setStateUrl(e.target.value);\n    },\n    [setStateUrl]\n  );\n  const handleSubmit = useCallback(\n    (e: React.FormEvent) => {\n      if (url) {\n        setUrl(url);\n      }\n      e.preventDefault();\n    },\n    [url, setUrl]\n  );\n  const handleHref = useCallback((e: React.FormEvent) => {\n    e.stopPropagation();\n  }, []);\n  const rotation = isOpen ? 90 : undefined;\n  const toggle = useCallback(\n    () => {\n      if (isOpen) {\n        closeController();\n      } else {\n        openController();\n      }\n    },\n    [openController, closeController, isOpen]\n  );\n  const taskboardUrl = getTaskboardUrl(stateUrl, mid, milestones);\n  return (\n    <Card>\n      <CardHeader className={classNames(styles.header)} onClick={toggle}>\n        <FontAwesomeIcon rotation={rotation} icon={faChevronCircleRight} />\n        <Badge color=\"primary\" pill className=\"p-1 m-1\">\n          <span>{getSpName(mid, milestones)}</span>\n        </Badge>\n        <Badge className=\"p-1 m-1\">\n          <span>{getRange(biz_days)}</span>\n        </Badge>\n        {taskboardUrl ? (\n          <a\n            target=\"_blank\"\n            onClick={handleHref}\n            className=\"float-right\"\n            href={taskboardUrl}\n          >\n            <FontAwesomeIcon className=\"mr-1\" icon={faExternalLinkAlt} />\n            Taskboard\n          </a>\n        ) : null}\n      </CardHeader>\n      <Collapse isOpen={isOpen}>\n        <Form onSubmit={handleSubmit}>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">URL</InputGroupAddon>\n            <Input\n              defaultValue={stateUrl}\n              onChange={handleUrl}\n              placeholder=\"http://hostname:port\"\n            />\n            <InputGroupAddon addonType=\"append\">\n              <Button>Set</Button>\n            </InputGroupAddon>\n          </InputGroup>\n        </Form>\n        <div className=\"row\">\n          <ProjectSelector />\n          <MilestoneSelector />\n        </div>\n        <CustomValuesSelector />\n        <DaysSelector />\n        <TaskStatusSelector />\n      </Collapse>\n    </Card>\n  );\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport { RootContext } from './Provider';\nimport { ITask } from './store';\nimport { ListGroup, ListGroupItem, Card, CardHeader } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\nimport { getCustomVal } from './UserTasks';\nconst TaskItem = ({ url, item }: { item: ITask; url: string }) => {\n  const {\n    project_extra_info: { slug }\n  } = item;\n  const href = `${url}/project/${slug}/task/${item.ref}`;\n  return (\n    <ListGroupItem tag=\"a\" target=\"_blank\" href={href}>\n      <FontAwesomeIcon icon={faExternalLinkAlt} /> {item.subject}\n    </ListGroupItem>\n  );\n};\nexport const UnSettingTasks = () => {\n  const {\n    state: { url, tasks, custom_value_map, custom_eid }\n  } = useContext(RootContext);\n  const [items, setItems] = useState<ITask[]>([]);\n  useEffect(\n    () => {\n      if (tasks.length > 0 && custom_eid) {\n        const eid = Number(custom_eid);\n        const items = tasks.filter(\n          task => getCustomVal(custom_value_map, task, eid) === 0\n        );\n        if (tasks.length > items.length) {\n          setItems(items);\n        }\n      }\n    },\n    [tasks, custom_value_map, custom_eid]\n  );\n  if (items.length === 0) {\n    return null;\n  } else {\n    return (\n      <Card>\n        <CardHeader>Unset tasks</CardHeader>\n        <ListGroup>\n          {items.map(item => (\n            <TaskItem url={url} key={item.id} item={item} />\n          ))}\n        </ListGroup>\n      </Card>\n    );\n  }\n};\n","import React from 'react';\nimport { Chart } from './Chart';\nimport { Controller } from './Controller';\nimport { UserTasks } from './UserTasks';\nimport { UnSettingTasks } from './UnSetTasks';\nimport { Provider } from './Provider';\nexport const App = () => (\n  <div className=\"container\">\n    <Provider>\n      <Controller />\n      <UserTasks />\n      <UnSettingTasks />\n      <Chart />\n    </Provider>\n  </div>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gold\":\"UserTasks_gold__2_Oza\",\"silver\":\"UserTasks_silver__FUnAn\",\"bronze\":\"UserTasks_bronze__24R1R\",\"custom_input_td\":\"UserTasks_custom_input_td__2MdyH\",\"avator\":\"UserTasks_avator__3C5_y\"};"],"sourceRoot":""}